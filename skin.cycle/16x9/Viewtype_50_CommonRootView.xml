<?xml version="1.0" encoding="UTF-8"?>
<includes>
<!-- Cycle 0.3 -->
<include name="Viewtype_50_CommonRootView">
	<control type="group">
		<description>List View (id=50) Einfache liste</description>
		<visible>Control.IsVisible(50)</visible>
		<include>Conditional_Left_Slide_Animation395</include>
		<include>Conditional_Viewinaktiv_Zoom_Animation</include>
		<include>Open_Close_Visible_Hidden_Zoom_Animation</include>
		<control type="list" id="50">
			<viewtype label="Root">list</viewtype>
			<left>168</left>
			<top>150</top>
			<width>1580</width>
			<height>840</height>
			<onleft>Setfocus(9900)</onleft>
			<onright condition="Integer.IsGreater(Container(50).NumPages,1)">60</onright>
			<onright condition="!Integer.IsGreater(Container(50).NumPages,1)">SetFocus(9900)</onright>
			<onup>50</onup>
			<ondown>50</ondown>
			<pagecontrol>60</pagecontrol>
			<scrolltime>200</scrolltime>
			<oninfo condition="ListItem.IsCollection + System.HasAddon(script.skin.info.service)">ActivateWindow(1102)</oninfo>
			<oninfo condition="Integer.IsGreater(Container(20000).NumItems,11) + [Container.Content(genres) | Container.Content(years) | Container.Content(actors) | Container.Content(studios) | Container.Content(dircetors) | Container.Content(countries)]">ActivateWindow(1103)</oninfo>
			<oninfo condition="Integer.IsLess(Container(20000).NumItems,11) + [Container.Content(genres) | Container.Content(years) | Container.Content(actors) | Container.Content(studios) | Container.Content(dircetors) | Container.Content(countries)]">ActivateWindow(1106)</oninfo>
			<visible>!String.StartsWith(Container.FolderPath,special://skin/playlists/Doku_) + !Container.Content(seasons) + [[Container.Content(episodes) + String.StartsWith(Skin.String(PLS_EPViewtype),Liste) + String.StartsWith(Container.FolderPath,special://skin/playlists/Episode_)] | [Container.Content(movies) + String.StartsWith(Skin.String(PLS_MovieViewtype),Liste) + String.StartsWith(Container.FolderPath,special://skin/playlists/Film_)] | [Container.Content(movies) + String.StartsWith(Skin.String(FilmViewtype),Liste) + !String.StartsWith(Container.FolderPath,special://skin/playlists/)] | [Container.Content(tvshows) + String.StartsWith(Skin.String(TVViewtype),Liste) + !String.StartsWith(Container.FolderPath,special://skin/playlists/)] | [Container.Content(tvshows) + String.StartsWith(Skin.String(PLS_TVViewtype),Liste) + String.StartsWith(Container.FolderPath,special://skin/playlists/TV_)] | [Container.Content(actors) + String.StartsWith(Skin.String(ActorViewtype),Liste)] | [Container.Content(sets) + String.StartsWith(Skin.String(SetViewtype),Liste)] | [Container.Content(genres) + String.StartsWith(Skin.String(GenreViewtype),Liste)] | [Container.Content(years) + String.StartsWith(Skin.String(YearsViewtype),Liste)] | [Container.Content(tags) + String.StartsWith(Skin.String(TagsViewtype),Liste)]] | !String.IsEmpty(Window(25).Property(Viewtypeselection)) | String.StartsWith(Container.FolderPath,plugin://) | [Container.Content(episodes) + ![String.StartsWith(Container.Folderpath,videodb:) | String.StartsWith(Container.Folderpath,library://)]]</visible>
			<itemlayout width="1580" height="60">
				<control type="image"><!-- Background -->
					<description>Hintergrund</description>
					<width>1580</width>
					<height>60</height>
					<texture background="true" colordiffuse="ListBackgroundDiffuse">White.png</texture>
				</control>
				<control type="image">
					<description>Hintergrund linker streifen</description>
					<width>100</width>
					<height>60</height>
					<texture colordiffuse="$VAR[secondaryCol]" background="true">White.png</texture>
				</control>
				<control type="image"><!-- info --><!-- last watched -->
					<width>100</width>
					<height>60</height>
					<aspectratio align="left" aligny="center">keep</aspectratio>
					<texture>$VAR[viewglobal_video_lastwatchedflags25]</texture>
					<visible>!ListItem.IsParentFolder + Container.Content(tvshows)</visible>
					<animation type="Conditional" condition="true">
						<effect type="fade" end="50" time="180" />
					</animation>
				</control>
				<control type="image"><!-- last watched -->
					<width>100</width>
					<height>60</height>
					<texture>$VAR[Lastwatchedicon]</texture>
					<aspectratio align="left" aligny="center">keep</aspectratio>
					<visible>!ListItem.IsParentFolder + Container.Content(movies)</visible>
					<animation type="Conditional" condition="true">
						<effect type="fade" end="50" time="180" />
					</animation>
				</control>
				<control type="label">
					<description>Label1</description>
					<left>130</left>
					<width>1520</width>
					<height>60</height>
					<label>$VAR[global_label]</label>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>1200</left>
					<width>300</width>
					<height>60</height>
					<align>right</align>
					<font>RegularSmall</font>
					<label>$VAR[global_label2]</label>
					<visible>!ListItem.IsParentFolder</visible>
				</control>
				<control type="label"><!-- Media Overlay -->
					<description>Media Overlay - neu, angefangene usw.</description>
					<left>1510</left>
					<right>30</right>
					<width>50</width>
					<height>60</height>
					<aligny>top</aligny>
					<align>right</align>
					<font>IconOverlayList</font>
					<selectedcolor>TextColorHeavy</selectedcolor><!-- default ueberschreibung -->
					<label>$VAR[WatchedOverlayFlag]</label>
					<visible>$EXP[VisVideoOverlays]</visible>
				</control>
			</itemlayout>
			<focusedlayout width="1580" height="60">
				<control type="image"><!-- Background -->
					<description>Hintergrund unfocus</description>
					<width>1580</width>
					<height>60</height>
					<texture background="true" colordiffuse="ListBackgroundDiffuse">White.png</texture>
					<visible>!Control.HasFocus(50)</visible>
				</control>
				<control type="image">
					<description>Hintergrund streifen unfocus</description>
					<width>100</width>
					<height>60</height>
					<texture colordiffuse="$VAR[secondaryCol]" background="true">White.png</texture>
					<visible>!Control.HasFocus(50)</visible>
				</control>
				<control type="image">
					<description>Hintergrund streifen unfocus</description>
					<width>100</width>
					<height>60</height>
					<texture colordiffuse="ListBackgroundDiffuse" background="true">White.png</texture>
				</control>
				<control type="image">
					<description>Hintergrund focus</description>
					<width>1580</width>
					<height>60</height>
					<texture colordiffuse="$VAR[primaryCol]" background="true">White.png</texture>
					<visible>Control.HasFocus(50)</visible>
				</control>
				<control type="label"><!-- back -->
					<left>40</left>
					<width>80</width>
					<height>60</height>
					<font>IconBackViewList</font>
					<textcolor>TextColorFO</textcolor>
					<label>Ã²</label>
				</control>
				<control type="image"><!-- info --><!-- last watched -->
					<width>101</width>
					<height>60</height>
					<aspectratio align="left" aligny="center">keep</aspectratio>
					<texture>$VAR[viewglobal_video_lastwatchedflags25]</texture>
					<visible>!ListItem.IsParentFolder + Container.Content(tvshows)</visible>
					<animation type="Conditional" condition="true">
						<effect type="fade" end="50" time="180" />
					</animation>
				</control>
				<control type="image"><!-- last watched -->
					<width>100</width>
					<height>60</height>
					<texture>$VAR[Lastwatchedicon]</texture>
					<aspectratio align="left" aligny="center">keep</aspectratio>
					<visible>!ListItem.IsParentFolder + Container.Content(movies)</visible>
					<animation type="Conditional" condition="true">
						<effect type="fade" end="50" time="180" />
					</animation>
				</control>
				<control type="label">
					<description>Label1 unfocus</description>
					<left>130</left>
					<width>1520</width>
					<height>60</height>
					<label>$VAR[global_label]</label>
					<visible>!Control.HasFocus(50)</visible>
				</control>
				<control type="label">
					<description>Label2 unfocus</description>
					<left>1200</left>
					<width>300</width>
					<height>60</height>
					<align>right</align>
					<font>RegularSmall</font>
					<label>$VAR[global_label2]</label>
					<visible>!ListItem.IsParentFolder + !Control.HasFocus(50)</visible>
				</control>
				<control type="label">
					<description>Label1 focus</description>
					<left>130</left>
					<width>1520</width>
					<height>60</height>
					<textcolor>TextColorFO</textcolor>
					<label>$VAR[global_label]</label>
					<visible>Control.HasFocus(50)</visible>
				</control>
				<control type="label">
					<description>Label2 focus</description>
					<left>1200</left>
					<width>300</width>
					<height>60</height>
					<align>right</align>
					<font>RegularSmall</font>
					<textcolor>TextColorFO</textcolor>
					<label>$VAR[global_label2]</label>
					<visible>!ListItem.IsParentFolder + Control.HasFocus(50)</visible>
				</control>
				<control type="label"><!-- Media Overlay -->
					<description>Media Overlay - neu, angefangene usw. unfocus</description>
					<left>1510</left>
					<right>30</right>
					<width>50</width>
					<height>60</height>
					<aligny>top</aligny>
					<align>right</align>
					<font>IconOverlayList</font>
					<selectedcolor>TextColorHeavy</selectedcolor><!-- default ueberschreibung -->
					<label>$VAR[WatchedOverlayFlag]</label>
					<visible>$EXP[VisVideoOverlays] + !Control.HasFocus(50)</visible>
				</control>
				<control type="label">
					<description>Media Overlay - neu, angefangene usw. focus</description>
					<left>1510</left>
					<right>30</right>
					<width>50</width>
					<height>60</height>
					<aligny>top</aligny>
					<align>right</align>
					<font>IconOverlayList</font>
					<textcolor>TextColorFO</textcolor>
					<selectedcolor>TextColorFO</selectedcolor><!-- default ueberschreibung -->
					<label>$VAR[WatchedOverlayFlag]</label>
					<visible>$EXP[VisVideoOverlays] + Control.HasFocus(50)</visible>
				</control>
			</focusedlayout>
		</control>
		<control type="scrollbar" id="60"><!-- scroller -->
			<left>1800</left>
			<top>150</top>
			<width>6</width>
			<height>860</height>
			<onleft>50</onleft>
			<onright condition="![Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes) | Container.Content(seasons) | Container.Content(sets)]">SetFocus(9900)</onright><!-- SMS bei sortierung titel usw. -->
			<onright condition="[Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes) | Container.Content(seasons) | Container.Content(sets)] + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556])]">SetFocus(62)</onright><!-- SMS bei sortierung titel usw. -->
			<onright condition="[Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes) | Container.Content(seasons) | Container.Content(sets)] + ![String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556])]">SetFocus(9900)</onright><!-- sideblade bei sortierung nicht titel usw. -->
			<visible>Control.IsVisible(50)</visible>
		</control>
		<control type="group"><!-- SMS Scroller -->
			<description>SMS Bar</description>
			<top>20</top>
			<visible>Control.IsVisible(50)</visible>
			<include>SMSScrollbar</include>
		</control>
		<control type="group"><!-- Sortletter und SMS Jumpletter -->
			<description>SMS label + icon</description>
			<left>1767</left>
			<top>110</top>
			<visible>Control.IsVisible(50)</visible>
			<visible>!ListItem.IsParentFolder + [Control.HasFocus(60) | ControlGroup(62).HasFocus | Container.Scrolling] + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556])]</visible><!-- nur bei 551 Name, 561 Datei, 556 Title -->
			<include>SMSLetter_inout_Animation</include>
			<include>ScrollSMSLetter</include>
		</control>
	</control>
</include>
</includes>