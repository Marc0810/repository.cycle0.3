<?xml version="1.0" encoding="UTF-8"?>
<includes>
<!-- Cycle 0.3 -->
<variable name="Systeminfo-short-categorylabel">
	<value condition="Control.HasFocus(100)">Skin</value>
	<value condition="String.StartsWith(Control.Getlabel(40),Allgemeine)">Allgemein</value>
	<value condition="String.StartsWith(Control.Getlabel(40),Speicherplatz)">Speicherplatz</value>
	<value condition="String.StartsWith(Control.Getlabel(40),Netzwerk)">Netzwerk</value>
	<value condition="String.StartsWith(Control.Getlabel(40),Grafik)">Grafik</value>
	<value condition="String.StartsWith(Control.Getlabel(40),Hardware)">Hardware</value>
	<value condition="String.StartsWith(Control.Getlabel(40),PVR)">PVR</value>
</variable>

<variable name="Sideblade_breadcrumbs">
	<value condition="Window.IsVisible(shutdownmenu)">Ausschalten</value>
	<value condition="Window.IsVisible(favourites)">Favoriten</value>
	<value condition="Window.IsVisible(videos)">Optionen</value>
	<value condition="Container.Content(Addons) | Window.IsVisible(addonbrowser)">Optionen</value>
	<value condition="Window.IsVisible(musiclibrary)">Optionen</value>
	<value>Optionen</value>
</variable>

<variable name="Sideblade_breadcrumbs2">
	<value condition="Window.IsVisible(favourites)">[CR]</value>
	<value condition="Window.IsVisible(systeminfo)">$VAR[Systeminfo-short-categorylabel]</value>
	<value condition="Window.IsVisible(shutdownmenu)">$INFO[system.profilename]</value>
	<value condition="Window.IsVisible(Videos) + Container.Content(Files)">Dateimodus</value>
	<value condition="Window.IsVisible(videos) + !String.IsEmpty(Control.GetLabel(3))">Sortierung - [COLOR=TextColorHeavy]$VAR[CycleMyNavSidebarSortlabel][/COLOR]</value>
	<value condition="Window.IsVisible(musiclibrary) + !String.IsEmpty(Control.GetLabel(3))">Sortierung - [COLOR=TextColorHeavy]$VAR[CycleMyNavSidebarSortlabel][/COLOR]</value>
	<value condition="Container.Content(Addons) | Window.IsVisible(programs)">$INFO[Container.FolderName]</value>
</variable>

<variable name="Sideblade_breadcrumbs3">
	<value condition="Window.IsVisible(shutdownmenu)">[CR]</value>
	<value condition="Window.IsVisible(favourites)">([COLOR=TextColorLight]$INFO[Container(450).NumItems][/COLOR]) Einträge - Seite ([COLOR=TextColorLight]$INFO[Container(450).CurrentPage]/$INFO[Container(450).NumPages][/COLOR])</value>
	<value condition="String.Contains(Container.Folderpath,/playlists/)">Playliste</value>
	<value condition="Container.Content(tvshows)">$INFO[Container.CurrentPage, Seite ([COLOR=TextColorMedium]]$INFO[Container.NumPages,/,[/COLOR])]</value>
	<value condition="Container.Content(seasons)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Container.Content(episodes)">$INFO[Container.TotalTime,Laufzeit: ([COLOR=TextColorMedium],[/COLOR])]</value>
	<value condition="Container.Content(movies)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Container.Content(sets)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Container.Content(genres)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Container.Content(studios)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Container.Content(countries)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Container.Content(tags)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Container.Content(years)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Container.Content(actors)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Container.Content(directors)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Container.Content(files)">Pfad: $INFO[ListItem.path]</value>
	<value condition="Container.Content(Addons) | Window.IsVisible(programs)">Sortierung: $INFO[Container.SortMethod]</value>
	<value condition="Container.Content(videos)">$INFO[Container.NumItems] Einträge Seite $INFO[Container.CurrentPage]/$INFO[Container.NumPages]</value>
	<value condition="Window.IsVisible(musiclibrary) + String.StartsWith(Container.Folderpath,musicdb://top100/songs)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Window.IsVisible(musiclibrary) + String.StartsWith(Container.Folderpath,musicdb://top100/albums)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Window.IsVisible(musiclibrary) + String.StartsWith(Container.Folderpath,musicdb://recentlyaddedalbums)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Window.IsVisible(musiclibrary) + String.StartsWith(Container.Folderpath,musicdb://recentlyplayedalbums)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Window.IsVisible(musiclibrary) + String.StartsWith(Container.Folderpath,musicdb://compilations)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Window.IsVisible(musiclibrary) + Container.Content(Years)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Window.IsVisible(musiclibrary) + Container.Content(genres)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Window.IsVisible(musiclibrary) + Container.Content(Albums)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Window.IsVisible(musiclibrary) + Container.Content(songs)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Window.IsVisible(musiclibrary) + Container.Content(artists)">$INFO[Container.NumItems] Einträge</value>
</variable>

<!-- home sideblade-->
<variable name="HomeMenuSubBreadcumbIcon">
	<value condition="ControlGroup(8260).HasFocus | ControlGroup(8270).HasFocus">w</value>
	<value condition="ControlGroup(8210).HasFocus">W</value>
	<value condition="ControlGroup(8220).HasFocus">D</value>
	<value condition="ControlGroup(8230).HasFocus">E</value>
	<value condition="ControlGroup(8240).HasFocus">ě</value>
	<value condition="ControlGroup(8250).HasFocus">Ę</value>
	<value condition="ControlGroup(8290).HasFocus">ñ</value>
	<value condition="ControlGroup(8275).HasFocus">Ě</value>
</variable>

<variable name="HomeMenuSubBreadcumb1">
	<value condition="ControlGroup(8260).HasFocus | ControlGroup(8270).HasFocus">Pinboard</value>
	<value condition="ControlGroup(8210).HasFocus">Video</value>
	<value condition="ControlGroup(8220).HasFocus">Serie</value>
	<value condition="ControlGroup(8230).HasFocus">Film</value>
	<value condition="ControlGroup(8240).HasFocus">Extras</value>
	<value condition="ControlGroup(8250).HasFocus">Dokumentationen</value>
	<value condition="ControlGroup(8290).HasFocus">Musik</value>
	<value condition="ControlGroup(8275).HasFocus">Farben</value>
</variable>

<variable name="HomeMenuSubBreadcumb2">
	<value condition="Control.HasFocus(8262) | Control.HasFocus(8265)">Serien</value>
	<value condition="Control.HasFocus(8263) | Control.HasFocus(8266)">Filme</value>
	<value condition="Control.HasFocus(8264) | Control.HasFocus(8267)">Addons</value>
	<value condition="Control.HasFocus(8268)">Serien organisieren</value>
	<value condition="Control.HasFocus(8269)">Filme organisieren</value>
	<value condition="Control.HasFocus(8280)">Addons organisieren</value>
	<value condition="ControlGroup(8210).HasFocus">Kategorien</value>
	<value condition="ControlGroup(8220).HasFocus">Kategorien</value>
	<value condition="ControlGroup(8230).HasFocus">Kategorien</value>
	<value condition="ControlGroup(8240).HasFocus">Kategorien</value>
	<value condition="ControlGroup(8250).HasFocus">Kategorien</value>
	<value condition="ControlGroup(8290).HasFocus">Kategorien</value>
	<value condition="String.IsEqual(Control.GetLabel(82382),TV) + [Control.HasFocus(8701) | Control.HasFocus(8700)]">Serien</value>
	<value condition="String.IsEqual(Control.GetLabel(82382),Movie) + [Control.HasFocus(8701) | Control.HasFocus(8703)]">Filme</value>
</variable>

<!-- Windows -->
<variable name="global_topbar_value_multilabel">
	<value condition="Window.IsActive(Custom_1101_homewidgets.xml)">Widgets</value>
	<value condition="Window.IsVisible(musicplaylisteditor)">Wiedergabeliste</value>
	<value condition="Window.IsVisible(script-lazytv-main.xml)">Lazy TV</value><!-- lazy tv -->
	<!-- widget playlists -->
	<value condition="String.StartsWith(Container.FolderPath,special://skin/playlists/) + !String.StartsWith(Container.FolderPath,special://skin/playlists/Doku)">Widget</value>
	<value condition="String.StartsWith(Container.FolderPath,special://skin/playlists/) + String.StartsWith(Container.FolderPath,special://skin/playlists/Doku)">Dokumentationen</value>
	<value condition="String.StartsWith(Container.FolderPath,plugin://service.library.data.provider/)">Service.library Widget</value>
	<!-- video -->
	<value condition="String.StartsWith(Container.Folderpath,videodb://movies)">$LOCALIZE[342]</value><!-- film -->
	<value condition="String.StartsWith(Container.Folderpath,videodb://recentlyaddedmovies)">$LOCALIZE[342]</value><!-- film -->
	<value condition="String.StartsWith(Container.Folderpath,videodb://tvshows)">$LOCALIZE[20343]</value><!-- serie -->
	<value condition="String.StartsWith(Container.Folderpath,videodb://recentlyaddedepisodes)">$LOCALIZE[20343]</value>
	<value condition="String.IsEqual(Container.Folderpath,special://videoplaylists/)">Video Wiedergabelisten</value>
	<value condition="!String.StartsWith(Container.Folderpath,videodb://movies) + Container.Content(movies) + !ListItem.IsParentFolder">$LOCALIZE[342]</value>
	<value condition="!String.StartsWith(Container.Folderpath,videodb://tvshows) + Container.Content(tvshows) + !ListItem.IsParentFolder">$LOCALIZE[20343]</value>
	<value condition="Container.Content(files) + Window.IsVisible(videos)">$LOCALIZE[3]</value><!-- files -->
	<value condition="Container.Content(seasons)">$LOCALIZE[20343]</value>
	<value condition="Container.Content(episodes)">$LOCALIZE[20343]</value>
	<value condition="String.IsEqual(Container.FolderPath,library://video/movies/)">$LOCALIZE[342]</value>
	<value condition="String.IsEqual(Container.FolderPath,library://video/tvshows/)">$LOCALIZE[20343]</value>
	<value condition="String.Contains(Container.FolderPath,movies)">$LOCALIZE[342]</value>
	<value condition="String.Contains(Container.FolderPath,tvshows)">$LOCALIZE[20343]</value>
	<value condition="Window.IsActive(videos)">$LOCALIZE[3]</value>
	<value condition="Window.IsActive(musiclibrary) + Container.Content(files)">$LOCALIZE[2]</value>
	<value condition="Window.IsActive(musiclibrary)">$LOCALIZE[2]</value>
	<value condition="Window.IsActive(pictures)">$LOCALIZE[1213]</value>
	<value condition="Window.IsActive(addonbrowser)">$LOCALIZE[10040]</value>
	<value condition="Window.IsActive(programs)">$LOCALIZE[10001]</value>
	<value condition="Window.IsVisible(Weather)">$LOCALIZE[8]</value>
	<value condition="Window.IsVisible(filemanager)">Dateimanager</value>
</variable>

<variable name="global_topbar_value_multilabel2">
	<value condition="Window.IsVisible(musicplaylisteditor) + Window.IsActive(contextmenu)">$INFO[System.CurrentControl]</value>
	<value condition="Window.IsVisible(musicplaylisteditor) + Control.HasFocus(9001)">$INFO[System.CurrentControl]</value>
	<value condition="Window.IsVisible(musicplaylisteditor) + !Control.HasFocus(100)">Lieder auswählen</value>
	<value condition="Window.IsVisible(musicplaylisteditor) + Control.HasFocus(100)">Abspielliste bearbeiten</value>
	<value condition="Window.IsVisible(videos) + Window.IsActive(Custom_1101_homewidgets.xml)">$INFO[skin.string(VideoslotWidgetTitle)]</value>
	<value condition="Window.IsVisible(videos) + Window.IsActive(Custom_1103_categoryinfo.xml)">$VAR[KategorieLabelInfoPrefix]$INFO[ListItem.Label]</value>
	<value condition="Window.IsVisible(videos) + Window.IsActive(Custom_1106_categoryinfolist.xml)">$VAR[KategorieLabelInfoPrefix]$INFO[ListItem.Label]</value>
	<value condition="Window.IsVisible(home) + Window.IsActive(Custom_1101_homewidgets.xml)">$INFO[skin.string(MainslotWidgetTitle)]</value>
	<value condition="Container.Content(genres) + String.StartsWith(Container.Folderpath,videodb://tvshows/genres/)">Genres</value>
	<value condition="Container.Content(tvshows) + String.StartsWith(Container.Folderpath,videodb://tvshows/genres/)">Genres</value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/genres/)">$INFO[ListItem.TvShowtitle]</value>
	<value condition="Container.Content(seasons) + String.StartsWith(Container.Folderpath,videodb://tvshows/genres/)">$INFO[ListItem.TvShowtitle]</value>
	<value condition="String.StartsWith(Container.Folderpath,videodb://movies/genres/)">Genres</value>
	<value condition="Container.Content(years) + String.StartsWith(Container.Folderpath,videodb://tvshows/years/)">Jahre</value>
	<value condition="Container.Content(tvshows) + String.StartsWith(Container.Folderpath,videodb://tvshows/years/)">Jahre</value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/years/)">$INFO[ListItem.TvShowtitle]</value>
	<value condition="Container.Content(seasons) + String.StartsWith(Container.Folderpath,videodb://tvshows/years/)">$INFO[ListItem.TvShowtitle]</value>
	<value condition="String.StartsWith(Container.Folderpath,videodb://movies/years/)">Jahre</value>
	<value condition="Container.Content(actors) + String.StartsWith(Container.Folderpath,videodb://tvshows/actors/)">Darsteller</value>
	<value condition="Container.Content(tvshows) + String.StartsWith(Container.Folderpath,videodb://tvshows/actors/)">Darsteller</value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/actors/)">$INFO[ListItem.TvShowtitle]</value>
	<value condition="Container.Content(seasons) + String.StartsWith(Container.Folderpath,videodb://tvshows/actors/)">$INFO[ListItem.TvShowtitle]</value>
	<value condition="String.StartsWith(Container.Folderpath,videodb://movies/actors/)">Darsteller</value>
	<value condition="Container.Content(studios) + String.StartsWith(Container.Folderpath,videodb://tvshows/studios/)">Studios</value>
	<value condition="Container.Content(tvshows) + String.StartsWith(Container.Folderpath,videodb://tvshows/studios/)">Studios</value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/studios/)">$INFO[ListItem.TvShowtitle]</value>
	<value condition="Container.Content(seasons) + String.StartsWith(Container.Folderpath,videodb://tvshows/studios/)">$INFO[ListItem.TvShowtitle]</value>
	<value condition="String.StartsWith(Container.Folderpath,videodb://movies/studios/)">Studios</value>
	<value condition="String.StartsWith(Container.Folderpath,videodb://movies/directors/)">Darsteller</value><!-- ebene 1 -->
	<value condition="String.StartsWith(Container.Folderpath,videodb://movies/sets/)">Zusammenstellung</value><!-- ebene 1 -->
	<value condition="String.StartsWith(Container.Folderpath,videodb://movies/countries/)">Länder</value><!-- ebene 1 -->
	<!-- titel -->
	<value condition="!String.IsEqual(Container.Folderpath,videodb://movies/) + String.StartsWith(Container.Folderpath,videodb://movies) + !Container.Content(movies)">$INFO[Container.Foldername]</value>
	<value condition="!String.IsEqual(Container.Folderpath,videodb://tvshows/) + String.StartsWith(Container.Folderpath,videodb://tvshows) + Container.Content(tvshows)">$INFO[Container.Foldername]</value>
	<value condition="!String.IsEqual(Container.Folderpath,videodb://tvshows/) + String.StartsWith(Container.Folderpath,videodb://tvshows) + Container.Content(seasons)">$INFO[Container.Foldername]</value>
	<value condition="!String.IsEqual(Container.Folderpath,videodb://tvshows/) + String.StartsWith(Container.Folderpath,videodb://tvshows) + Container.Content(episodes) + !ListItem.IsParentFolder">$INFO[ListItem.TvShowtitle]</value>
	<value condition="!String.IsEqual(Container.Folderpath,videodb://tvshows/) + String.StartsWith(Container.Folderpath,videodb://tvshows) + Container.Content(episodes) + ListItem.IsParentFolder">$INFO[ListItem(1).TvShowtitle]</value>
	<value condition="String.StartsWith(Container.Folderpath,videodb://tvshows/titles/) + Container.Content(tvshows)">$INFO[Container.Foldername]</value><!-- ebene 1 -->
	<value condition="String.StartsWith(Container.Folderpath,videodb://recentlyaddedepisodes)">$INFO[Container.Foldername]</value><!-- ebene 1 -->
	<value condition="String.StartsWith(Container.Folderpath,videodb://movies/titles/) + Container.Content(movies)">$INFO[Container.Foldername]</value><!-- ebene 1 -->
	<value condition="String.StartsWith(Container.Folderpath,videodb://recentlyaddedmovies)">$INFO[Container.Foldername]</value><!-- film -->
	<value condition="String.IsEqual(Container.Folderpath,special://videoplaylists/)">Wiedergabelisten</value><!-- ebene 1 -->
	<value condition="String.IsEqual(Container.Folderpath,addons://sources/video)">Addons</value><!-- ebene 1 -->
	<value condition="String.IsEqual(Container.Folderpath,sources://video/)">Dateien</value><!-- ebene 1 -->
	<!-- widget playlists -->
	<value condition="String.StartsWith(Container.FolderPath,special://skin/playlists/) + !String.IsEmpty(Skin.string(CycleMyNavVideoTVQuicklinkTitle)) + !String.StartsWith(Container.FolderPath,special://skin/playlists/Doku) + [Container.Content(movies) | Container.Content(sets)]">$INFO[Skin.string(CycleMyNavVideoMovieQuicklinkTitle)]</value>
	<value condition="String.StartsWith(Container.FolderPath,special://skin/playlists/) + !String.IsEmpty(Skin.string(CycleMyNavVideoMovieQuicklinkTitle)) + !String.StartsWith(Container.FolderPath,special://skin/playlists/Doku) + [Container.Content(episodes) | Container.Content(seasons) | Container.Content(tvshows)]">$INFO[Skin.string(CycleMyNavVideoTVQuicklinkTitle)]</value>
	
	<!-- doku playlists -->
	<value condition="Container.Content(movies) + String.StartsWith(Container.FolderPath,special://skin/playlists/Doku)">Filme</value>
	<value condition="Container.Content(tvshows) + String.StartsWith(Container.FolderPath,special://skin/playlists/Doku)">Serien</value>
	
	<!-- widget playlists -->
	<value condition="String.IsEqual(Container.FolderPath,special://skin/playlists/Film_Zuletzt hinzugefuegte.xsp)">$LOCALIZE[20386]</value>
	<value condition="String.IsEqual(Container.FolderPath,special://skin/playlists/Film_Widget laufende.xsp)">Laufende</value>
	<value condition="String.IsEqual(Container.FolderPath,special://skin/playlists/Film_Zufaellige.xsp)">$LOCALIZE[590]</value>
	<value condition="String.IsEqual(Container.FolderPath,special://skin/playlists/Film_Zuletzt gesehene.xsp)">Zuletzt abgespielt</value>
	<value condition="String.IsEqual(Container.FolderPath,special://skin/playlists/Film_Beliebteste.xsp)">Meist gesehen</value>
	<value condition="String.IsEqual(Container.FolderPath,special://skin/playlists/Film_Empfehlungen2014.xsp)">Empfehlungen 2014</value>
	<value condition="String.IsEqual(Container.FolderPath,special://skin/playlists/Film_Empfehlungen2015.xsp)">Empfehlungen 2015</value>
	<value condition="String.IsEqual(Container.FolderPath,special://skin/playlists/Film_HD.xsp)">HD</value>
	<value condition="String.IsEqual(Container.FolderPath,special://skin/playlists/Film_Moviesets.xsp)">Zusammenstellungen</value>
	<value condition="String.IsEqual(Container.FolderPath,special://skin/playlists/Episode_Zuletzt hinzugefuegte.xsp)">$LOCALIZE[20387]</value>
	<value condition="String.IsEqual(Container.FolderPath,special://skin/playlists/Episode_Zuletzt_gesehene.xsp)">Zuletzt abgespielt</value>
	<value condition="String.IsEqual(Container.FolderPath,special://skin/playlists/Episode_Zufaellige.xsp)">$LOCALIZE[590]</value>
	<value condition="String.IsEqual(Container.FolderPath,special://skin/playlists/TV_Beliebteste.xsp)">Meist gesehen</value>
	<value condition="String.IsEqual(Container.FolderPath,special://skin/playlists/TV_zuletzt gesehen.xsp)">Zuletzt abgespielt</value>
	<value condition="String.IsEqual(Container.FolderPath,special://skin/playlists/)">Skin-Playlisten</value>
	<value condition="String.StartsWith(Container.FolderPath,plugin://service.library.data.provider/?type=randommovies)">$LOCALIZE[590]</value>
	<value condition="String.StartsWith(Container.FolderPath,plugin://service.library.data.provider/?type=recentmovies)">$LOCALIZE[20386]</value>
	<value condition="String.StartsWith(Container.FolderPath,plugin://service.library.data.provider/?type=recommendedmovies)">$LOCALIZE[20386]</value>
	<value condition="String.StartsWith(Container.FolderPath,plugin://service.library.data.provider/?type=randomepisodes)">$LOCALIZE[590]</value>
	<value condition="String.StartsWith(Container.FolderPath,plugin://service.library.data.provider/?type=recentepisodes)">$LOCALIZE[20386]</value>
	<value condition="String.StartsWith(Container.FolderPath,plugin://service.library.data.provider/?type=recommendedepisodes)">Laufende Serien</value>
	<value condition="String.StartsWith(Container.FolderPath,plugin://service.library.data.provider/)">Library Widget</value>
	<value condition="Window.IsVisible(videos) + String.IsEqual(Container.Folderpath,library://video/tvshows)">Übersicht</value>
	<value condition="Window.IsVisible(videos) + !Container.Content(files)">Übersicht</value>
	<value condition="Window.IsVisible(videos)">$INFO[Container.Foldername]</value>
	<value condition="Window.IsActive(programs) + !String.IsEmpty(Container.Foldername)">$INFO[Container.Foldername]</value>
	<value condition="Window.IsActive(programs)">Übersicht</value>
	<value condition="Window.IsActive(addonbrowser) + !String.IsEmpty(Container.Foldername)">$INFO[Container.Foldername]</value>
	<value condition="Window.IsActive(addonbrowser)">Übersicht</value>
	<value condition="Window.IsVisible(pictures) + !String.IsEmpty(Container.Foldername)">$INFO[Container.Foldername]</value>
	<value condition="Window.IsVisible(pictures)">Übersicht</value>
	<value condition="Window.IsVisible(Weather)">$INFO[Weather.Location]</value>
	<!-- musik -->
	<value condition="Window.IsVisible(musiclibrary) + !String.IsEmpty(Container.Foldername)">$INFO[Container.Foldername]</value>
	<value condition="Window.IsVisible(musiclibrary)">Übersicht</value>
	<value condition="Window.IsVisible(FileManager.xml) + [Control.HasFocus(21) | Control.HasFocus(31)]">$INFO[Control.GetLabel(102)]</value>
	<value condition="Window.IsVisible(FileManager.xml)">$INFO[Control.GetLabel(101)]</value>
	
</variable>

<variable name="global_topbar_value_multilabel3">
	<value condition="Window.IsActive(Custom_1101_homewidgets.xml)">$INFO[Control.GetLabel(101)]</value><!-- fake leer damit nix kommt -->
	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/genres/) + !String.IsEqual(Container.Folderpath,videodb://movies/genres/)">$INFO[Container.Foldername]</value>
	<value condition="Container.Content(tvshows) + String.StartsWith(Container.Folderpath,videodb://tvshows/genres/)">$INFO[Container.Foldername]</value>
	<value condition="Container.Content(genres) + String.StartsWith(Container.Folderpath,videodb://tvshows/genres/)"></value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/genres/) + !String.IsEmpty(ListItem.Season)">$VAR[SeasonPrefix-long]</value>
	<value condition="Container.Content(seasons) + String.StartsWith(Container.Folderpath,videodb://tvshows/genres/)"></value>

	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/years/) + !String.IsEqual(Container.Folderpath,videodb://movies/years/)">$INFO[Container.Foldername]</value>
	<value condition="Container.Content(tvshows) + String.StartsWith(Container.Folderpath,videodb://tvshows/years/)">$INFO[Container.Foldername]</value>
	<value condition="Container.Content(years) + String.StartsWith(Container.Folderpath,videodb://tvshows/years/)"></value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/years/) + !String.IsEmpty(ListItem.Season)">$VAR[SeasonPrefix-long]</value>
	<value condition="Container.Content(seasons) + String.StartsWith(Container.Folderpath,videodb://tvshows/years/)"></value>
	
	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/actors/) + !String.IsEqual(Container.Folderpath,videodb://movies/actors/)">$INFO[Container.Foldername]</value>
	<value condition="Container.Content(tvshows) + String.StartsWith(Container.Folderpath,videodb://tvshows/actors/)">$INFO[Container.Foldername]</value>
	<value condition="Container.Content(actors) + String.StartsWith(Container.Folderpath,videodb://tvshows/actors/)"></value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/actors/) + !String.IsEmpty(ListItem.Season)">$VAR[SeasonPrefix-long]</value>
	<value condition="Container.Content(seasons) + String.StartsWith(Container.Folderpath,videodb://tvshows/actors/)"></value>
	
	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/studios/) + !String.IsEqual(Container.Folderpath,videodb://movies/studios/)">$INFO[Container.Foldername]</value>
	<value condition="Container.Content(tvshows) + String.StartsWith(Container.Folderpath,videodb://tvshows/studios/)">$INFO[Container.Foldername]</value>
	<value condition="Container.Content(studios) + String.StartsWith(Container.Folderpath,videodb://tvshows/studios/)"></value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/studios/) + !String.IsEmpty(ListItem.Season)">$VAR[SeasonPrefix-long]</value>
	<value condition="Container.Content(seasons) + String.StartsWith(Container.Folderpath,videodb://tvshows/studios/)"></value>
	
	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/directors/)">$INFO[Container.Foldername]</value><!-- ebene 1 -->
	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/sets/)">$INFO[Container.Foldername]</value><!-- ebene 1 -->
	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/countries/)">$INFO[Container.Foldername]</value><!-- ebene 1 -->
	
	<value condition="Container.Content(studios) + String.StartsWith(Container.Folderpath,videodb://tvshows/titles/)"></value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/titles/) + !String.IsEmpty(ListItem.Season) + !ListItem.IsParentFolder">$VAR[SeasonPrefix-long]</value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/titles/) + !String.IsEmpty(ListItem(1).Season) + ListItem.IsParentFolder + !Integer.IsGreater(ListItem(1).Season,9)">Staffel 0$INFO[ListItem(1).Season]</value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/titles/) + !String.IsEmpty(ListItem(1).Season) + ListItem.IsParentFolder + Integer.IsGreater(ListItem(1).Season,9)">Staffel $INFO[ListItem(1).Season]</value>
	<value condition="Container.Content(seasons) + String.StartsWith(Container.Folderpath,videodb://tvshows/titles/)"></value>
	
	<value condition="Window.IsActive(addonbrowser)"></value>
	<value condition="Window.IsVisible(musiclibrary) + Container.Content(songs) + !String.IsEmpty(ListItem.Artist) + ![String.Contains(Container.Foldername,Singles) | String.Contains(Container.Foldername,Titel)]">$INFO[ListItem.Artist]</value>
</variable>

<variable name="global_topbar_value_multilabel4">
	<value condition="String.StartsWith(Container.FolderPath,plugin://service.library.data.provider/?type=randommovies)"></value>
	<value condition="String.StartsWith(Container.FolderPath,plugin://service.library.data.provider/?type=recentmovies)"></value>
	<value condition="String.StartsWith(Container.FolderPath,plugin://service.library.data.provider/?type=recommendedmovies)"></value>
	<value condition="String.StartsWith(Container.FolderPath,plugin://service.library.data.provider/?type=randomepisodes)">$INFO[ListItem.TvShowtitle]</value>
	<value condition="String.StartsWith(Container.FolderPath,plugin://service.library.data.provider/?type=recentepisodes)">$INFO[ListItem.TvShowtitle]</value>
	<value condition="String.StartsWith(Container.FolderPath,plugin://service.library.data.provider/?type=recommendedepisodes)">$INFO[ListItem.TvShowtitle]</value>
</variable>

<variable name="global_topbar_value_numitems">
	<value condition="Window.IsActive(Custom_1101_homewidgets.xml)">[CR]</value>
	<value condition="Window.IsVisible(script-lazytv-main.xml)">$INFO[Container(655).NumItems]</value><!-- lazy tv -->
	<value condition="Window.IsActive(videos) + Container.Content(tvshows)">$INFO[Container.NumItems]</value>
	<value condition="Window.IsActive(videos) + Container.Content(Seasons)">$VAR[Season54NumItems]</value>
	<value condition="Window.IsActive(videos) + Container.Content(episodes)">$INFO[Container.NumItems]</value>
	<value condition="Window.IsActive(videos) + Container.Content(movies)">$INFO[Container.NumItems]</value>
	<value condition="Window.IsActive(videos) + [Container.Content(sets) | Container.Content(genres) | Container.Content(years) | Container.Content(actors) | Container.Content(studios) | Container.Content(sets) | Container.Content(tags) | Container.Content(directors)]">$INFO[Container.NumItems]</value>
	<value condition="Window.IsActive(musiclibrary) + [Container.Content(albums) | Container.Content(years) | Container.Content(artists) | Container.Content(genres) | Container.Content(songs)]">$INFO[Container.NumItems]</value>
	<value condition="Window.IsActive(programs)">$INFO[Container.NumItems]</value>
	<value condition="Window.IsActive(addonbrowser)">$INFO[Container.NumItems]</value>
	<value condition="Window.IsActive(pictures)">$INFO[Container.NumItems]</value>
</variable>

<variable name="global_topbar_value_numitems2">
	<value condition="Window.IsActive(Custom_1101_homewidgets.xml)"></value>
	<value condition="Window.IsActive(videos) + Container.Content(tvshows)">$INFO[ListItem.Property(TotalSeasons)]$INFO[ListItem.Property(TotalEpisodes), (,) ]</value>
	<value condition="Window.IsActive(videos) + Container.Content(Seasons)">$INFO[ListItem.Property(TotalSeasons)]$INFO[ListItem.Property(TotalEpisodes), (,) ]</value>
	<value condition="Window.IsActive(videos) + Container.Content(episodes)">$INFO[Container.TotalUnWatched,(,)]</value>
	<value condition="Window.IsActive(videos) + Container.Content(movies) + ListItem.IsCollection">$INFO[Container(20000).NumItems,(,)]</value>
	<value condition="Window.IsActive(videos) + Container.Content(movies) + !ListItem.IsCollection">$INFO[Window(Home).Property(Movies.UnWatched), (,) ]</value>
	<value condition="Window.IsActive(videos) + Container.Content(sets)">$INFO[Container(20000).NumItems,(,)]</value>
	<value condition="Window.IsActive(videos) + Integer.IsGreater(Container(20000).NumItems,0) + !Container.Content(episodes)">$INFO[Container(20000).NumItems,(,)]</value><!-- line 2 global contentcontainer -->
	<value condition="Window.IsActive(musiclibrary) + Integer.IsGreater(Container(20000).NumItems,0)">$INFO[Container(20000).NumItems,(,)]</value><!-- line 2 global contentcontainer -->
	<value condition="Window.IsActive(addonbrowser) + Integer.IsGreater(Container(20000).NumItems,0)">$INFO[Container(20000).NumItems,(,)]</value><!-- line 2 global contentcontainer -->
	<value condition="Window.IsActive(programs) + !Container.content(addons) + Integer.IsGreater(Container(20000).NumItems,0)">$INFO[Container(20000).NumItems,(,)]</value><!-- line 2 global contentcontainer -->
</variable>

<variable name="global_topbar_icon">
	<value condition="Window.IsVisible(script-lazytv-main.xml)">Y</value><!-- lazy tv -->
	<value condition="Window.IsVisible(SettingsCategory.xml) + String.IsEqual(Control.GetLabel(2),Darstellung)">Č</value>
	<value condition="Window.IsVisible(SettingsCategory.xml) + String.IsEqual(Control.GetLabel(2),$LOCALIZE[14201])">W</value><!-- player -->
	<value condition="Window.IsVisible(SettingsCategory.xml) + String.IsEqual(Control.GetLabel(2),$LOCALIZE[14202])">Ȃ</value><!-- LibrarySettings -->
	<value condition="Window.IsVisible(SettingsCategory.xml) + String.IsEqual(Control.GetLabel(2),$LOCALIZE[24018])">č</value><!-- Services -->
	<value condition="Window.IsVisible(SettingsCategory.xml) + String.IsEqual(Control.GetLabel(2),$LOCALIZE[14206])">Č</value><!-- interface -->
	<value condition="Window.IsVisible(SettingsCategory.xml) + String.IsEqual(Control.GetLabel(2),Skin settings)">Ě</value><!-- skin -->
	<value condition="Window.IsVisible(SettingsCategory.xml) + String.IsEqual(Control.GetLabel(2),Benutzerprofile)">Ĝ</value><!-- Benutzerprofile -->
	<value condition="Window.IsVisible(SettingsCategory.xml) + String.IsEqual(Control.GetLabel(2),System)">ė</value>
	<value condition="String.StartsWith(Container.FolderPath,special://skin/playlists/) + !String.StartsWith(Container.FolderPath,special://skin/playlists/Doku)">V</value><!-- playlists --><!-- Widget -->
	<value condition="String.StartsWith(Container.FolderPath,special://skin/playlists/Doku)">Ę</value><!-- dokus -->
	<value condition="Window.IsVisible(videoplaylist)">v</value>
	<value condition="Window.IsVisible(musicplaylist)">ñ</value>
	<value condition="String.IsEqual(Container.Viewmode,Doku Poster)">V</value><!-- dokus -->
	<value condition="Window.IsActive(Custom_1101_homewidgets.xml)">V</value><!-- widget -->
	<value condition="Window.IsVisible(videos) + String.IsEqual(Container.Folderpath,videodb://movies/)">E</value><!-- video -->
	<value condition="Window.IsVisible(videos) + String.IsEqual(Container.Folderpath,videodb://tvshows/)">D</value>
	<value condition="Window.IsVisible(videos) + String.IsEqual(Container.Folderpath,library://video/movies/)">E</value>
	<value condition="Window.IsVisible(videos) + String.IsEqual(Container.Folderpath,library://video/tvshows/)">D</value>
	<value condition="String.IsEqual(Container.FolderPath,sources://video/)">W</value>
	<value condition="String.IsEqual(Container.FolderPath,videodb://tvshows/)">W</value>
	<value condition="String.IsEqual(Container.FolderPath,videodb://movies/)">W</value>
	<value condition="String.IsEqual(ListItem.Path,library://video/)">W</value>
	<value condition="Container.Content(Movies)">E</value><!-- video nach contents -->
	<value condition="Container.Content(Sets)">K</value>
	<value condition="Container.Content(TVShows)">D</value><!-- TV -->
	<value condition="Container.Content(Seasons)">D</value>
	<value condition="Container.Content(Episodes)">D</value>
	<value condition="Window.IsVisible(videos) + Container.Content(Directors)">J</value><!-- kategorien -->
	<value condition="Window.IsVisible(videos) + Container.Content(Countries)">N</value>
	<value condition="Window.IsVisible(videos) + Container.Content(Tags)">O</value>
	<value condition="Window.IsVisible(videos) + Container.Content(Genres)">Q</value>
	<value condition="Window.IsVisible(videos) + Container.Content(Studios)">L</value>
	<value condition="Window.IsVisible(videos) + Container.Content(Years)">M</value>
	<value condition="Window.IsVisible(videos) + Container.Content(Actors)">U</value>
	<value condition="Window.IsVisible(videos)">W</value><!-- videofallback -->
	<value condition="Window.IsVisible(musiclibrary) + Container.Content(Genres)">Ǿ</value><!-- musik -->
	<value condition="Window.IsVisible(musiclibrary) + Container.Content(artists)">ǵ</value>
	<value condition="Window.IsVisible(musiclibrary) + Container.Content(albums)">Ǵ</value>
	<value condition="Window.IsVisible(musiclibrary) + Container.Content(songs)">Ƕ</value>
	<value condition="Window.IsVisible(musiclibrary)">ñ</value><!-- musicfallback -->
	<value condition="Container.Content(Addons)">Ĝ</value><!-- krimskrams -->
	<value condition="Window.IsVisible(addonbrowser)">Ĝ</value>
	<value condition="Window.IsVisible(programs)">ĕ</value>
	<value condition="Window.IsVisible(pictures)">À</value>
	<value condition="Window.IsVisible(Weather)">:</value>
	<value condition="Window.IsVisible(FileManager.xml)">Ĕ</value>
	<value condition="Window.IsVisible(musicplaylisteditor)">Ǻ</value>
	<value condition="Container.Content(Files)">Ē</value>
</variable>

<include name="global_topbar">
<control type="group">
	<control type="videowindow">
		<description>Fake preview fuer zeitlabels</description>
		<left>-5</left>
		<top>-5</top>
		<width>5</width>
		<height>5</height>
		<visible>Player.HasVideo</visible>
	</control>
	<control type="group">
		<left>80</left>
		<top>30</top>
		<include>Conditional_Left_Slide_Animation395</include>
		<include>Open_Close_Visible_Hidden_Fade_Animation</include>
		<visible>![Window.IsVisible(home) | Window.IsVisible(movieinformation) | Window.IsVisible(Custom_1102_setinfo.xml) | Window.IsVisible(Custom_1105_fileinfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(pictureinfo) | Window.IsVisible(addoninformation) | Control.HasFocus(9000) | Control.HasFocus(501) | Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(settings) | Window.IsVisible(skinsettings) | Window.IsVisible(DialogSettings.xml) | Window.IsVisible(playercontrols) | Window.IsActive(Custom_1149_Textbox.xml)] | Control.HasFocus(400)</visible>
		<control type="grouplist">
			<width>805</width>
			<height>100</height>
			<itemgap>8</itemgap>
			<align>left</align>
			<orientation>horizontal</orientation>
			<control type="label">
				<width>80</width>
				<height>70</height>
				<font>IconBreadcumbs</font>
				<textcolor>TextColorMedium</textcolor>
				<label>$VAR[global_topbar_icon]</label>
			</control>
			<control type="label">
				<description>Nowplaying Label</description>
				<width>auto</width>
				<height>40</height>
				<font>BreadcumbTopNormal</font>
				<label>$VAR[global_topbar_value_multilabel]</label>
			</control>
		</control>
		<control type="grouplist">
			<top>25</top>
			<left>88</left>
			<width>700</width>
			<height>70</height>
			<itemgap>0</itemgap>
			<align>left</align>
			<orientation>horizontal</orientation>
			<visible>![ControlGroup(9300).HasFocus | Window.IsActive(contextmenu) | Window.IsActive(shutdownmenu) | Window.IsVisible(Custom_1141_ViewtypeSimilar.xml) | Window.IsVisible(musicplaylisteditor) | Window.IsActive(DialogSelect.xml) | Window.IsActive(favourites)]</visible>
			<control type="label" id="9113">
				<description>Ebene 2 verkuerzt wenn es label2 gibt</description>
				<width min="0" max="360">auto</width>
				<height>70</height>
				<font>BreadcumbTopSmall</font>
				<label>$VAR[global_topbar_value_multilabel2]</label>
				<visible>!String.IsEmpty(Control.GetLabel(450))</visible>
			</control>
			<control type="label" id="9113">
				<description>Ebene 2 laenger wenn es nicht label2 gibt</description>
				<width min="0" max="700">auto</width>
				<height>70</height>
				<font>BreadcumbTopSmall</font>
				<label>$VAR[global_topbar_value_multilabel2]</label>
				<visible>String.IsEmpty(Control.GetLabel(450))</visible>
			</control>
			<control type="label">
				<description>Divider</description>
				<width>auto</width>
				<height>70</height>
				<font>BreadcumbTopSmall</font>
				<label>$VAR[CustomEnumeration]</label>
				<visible>!String.IsEmpty(Control.GetLabel(450))</visible>
			</control>
			<control type="label" id="450">
				<description>Ebene 3</description>
				<width>auto</width>
				<height>70</height>
				<font>BreadcumbTopSmall</font>
				<label>$VAR[global_topbar_value_multilabel3]</label>
			</control>
			<control type="label">
				<description>Divider</description>
				<width>auto</width>
				<height>70</height>
				<font>BreadcumbTopSmall</font>
				<label>$VAR[CustomEnumeration]</label>
				<visible>!String.IsEmpty(Control.GetLabel(451))</visible>
			</control>
			<control type="label" id="451">
				<description>Ebene 4</description>
				<width>auto</width>
				<height>70</height>
				<font>BreadcumbTopSmall</font>
				<label>$VAR[global_topbar_value_multilabel4]</label>
			</control>
		</control>
	</control>
	<control type="group">
		<left>760</left>
		<top>30</top>
		<visible>![Window.IsVisible(Custom_1197_ColorTimeRefresh.xml) | Window.IsVisible(startup) | Window.IsVisible(extendedprogressdialog) | Window.IsVisible(DialogNotification.xml) | Window.IsVisible(DialogConfirm.xml) | Window.IsActive(busydialog) | Window.IsVisible(Custom_1118_Histroyloader.xml)]</visible>
		<animation type="Conditional" condition="Window.IsVisible(volumebar) + !Player.Muted" reversible="true">
			<effect type="fade" start="100" end="0" time="120" tween="cubic" easing="out" />
		</animation>
		<control type="grouplist">
			<width>1100</width>
			<height>75</height>
			<itemgap>10</itemgap>
			<align>right</align>
			<orientation>horizontal</orientation>
			<control type="label">
				<description>Nowplaying video Label episode</description>
				<width min="0" max="460">auto</width>
				<height>50</height>
				<font>BreadcumbTopNormal</font>
				<scroll>true</scroll>
				<scrollspeed>20</scrollspeed>
				<label>$INFO[VideoPlayer.TVShowTitle]</label>
				<visible>!Window.IsVisible(home) + Player.HasVideo + VideoPlayer.Content(episodes)</visible>
			</control>
			<control type="label">
				<description>Nowplaying video Label2 episode</description>
				<width min="0" max="360">auto</width>
				<height>50</height>
				<font>BreadcumbTopNormal</font>
				<scroll>true</scroll>
				<scrollspeed>20</scrollspeed>
				<label>$VAR[CustomEnumeration]$INFO[VideoPlayer.Episode,Episode ]</label>
				<visible>!Window.IsVisible(home) + Player.HasVideo + VideoPlayer.Content(episodes)</visible>
			</control>
			<control type="label">
				<description>Nowplaying video Label alles außer episode</description>
				<width min="0" max="760">auto</width>
				<height>50</height>
				<font>BreadcumbTopNormal</font>
				<scroll>true</scroll>
				<scrollspeed>20</scrollspeed>
				<label>$INFO[VideoPlayer.Title]</label>
				<visible>!Window.IsVisible(home) + Player.HasVideo + !VideoPlayer.Content(episodes)</visible>
			</control>
			<control type="label">
				<description>Nowplaying music Label ohne interpret</description>
				<width min="0" max="760">auto</width>
				<height>50</height>
				<font>BreadcumbTopNormal</font>
				<scroll>true</scroll>
				<scrollspeed>20</scrollspeed>
				<label>$INFO[MusicPlayer.TrackNumber,, ]$INFO[MusicPlayer.Title]</label>
				<visible>!Window.IsVisible(home) + Player.HasAudio</visible>
			</control>
			<control type="label">
				<width>80</width>
				<height>75</height>
				<align>right</align>
				<font>IconBreadcumbs</font>
				<textcolor>TextColorMedium</textcolor>
				<label>$VAR[Player_Statusicon]</label>
				<visible>!Window.IsVisible(home) + Player.HasMedia</visible>
			</control>
			<control type="label">
				<width>100</width>
				<height>70</height>
				<align>center</align>
				<textcolor>$VAR[OSDDialogColor]</textcolor>
				<font>IconVolume</font>
				<label>$VAR[DialogVolumeVAR]</label>
				<visible>Player.Muted</visible>
			</control>
			<control type="label" id="9114">
				<description>Numitems</description>
				<width>130</width>
				<height>50</height>
				<align>center</align>
				<font>BreadcumbTopNormal</font>
				<label>$VAR[global_topbar_value_numitems]</label>
				<visible>![String.IsEmpty(Control.GetLabel(9114)) | Window.IsActive(Custom_1101_homewidgets.xml) | Window.IsActive(Custom_1102_setinfo.xml) | Window.IsActive(Custom_1106_categoryinfolist.xml) | Window.IsActive(Custom_1103_categoryinfo.xml) | Window.IsVisible(movieinformation) | Window.IsVisible(Custom_1102_setinfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(pictureinfo) | Window.IsVisible(addoninformation) | Window.IsActive(Custom_1101_homewidgets.xml) | Window.IsActive(Custom_1102_setinfo.xml) | Window.IsActive(Custom_1103_categoryinfo.xml) | Window.IsActive(Custom_1149_Textbox.xml) | Control.HasFocus(9000)]</visible>
			</control>
			<control type="label">
				<description>Zeit bei wetter</description>
				<width>150</width>
				<height>70</height>
				<label>$INFO[System.Time]</label>
				<font>BreadcumbTopNormal</font>
				<visible>Window.IsVisible(weather) | Window.IsVisible(home) + !Control.HasFocus(9800)</visible>
			</control>
		</control>
		<control type="grouplist">
			<top>25</top>
			<width>1100</width>
			<height>75</height>
			<itemgap>10</itemgap>
			<align>right</align>
			<orientation>horizontal</orientation>
			<control type="label">
				<description>Nowplaying video Label2 episode</description>
				<width>740</width>
				<height>70</height>
				<align>right</align>
				<font>BreadcumbTopSmall</font>
				<scroll>true</scroll>
				<scrollspeed>20</scrollspeed>
				<label>$INFO[VideoPlayer.Title]$VAR[CustomEnumeration]$INFO[Player.Time]$INFO[Player.Duration, / ,]</label>
				<visible>!Window.IsVisible(home) + Player.HasVideo + VideoPlayer.Content(episodes)</visible>
			</control>
			<control type="label">
				<description>Nowplaying video Label2 alles außer episode</description>
				<width>740</width>
				<height>70</height>
				<align>right</align>
				<font>BreadcumbTopSmall</font>
				<scroll>true</scroll>
				<scrollspeed>20</scrollspeed>
				<label>$INFO[Player.Time]$INFO[Player.Duration, / ,]</label>
				<visible>!Window.IsVisible(home) + Player.HasVideo + !VideoPlayer.Content(episodes)</visible>
			</control>
			<control type="label">
				<description>Nowplaying video Label2 zeit ohne naechstes</description>
				<width>740</width>
				<height>70</height>
				<align>right</align>
				<font>BreadcumbTopSmall</font>
				<scroll>true</scroll>
				<scrollspeed>20</scrollspeed>
				<label>$INFO[Player.Time]$INFO[Player.Duration, / ,]$VAR[CustomEnumeration]$INFO[MusicPlayer.Artist]</label>
				<visible>!Window.IsVisible(home) + Player.HasAudio + [[Integer.IsGreater(Player.TimeRemaining,20) + !String.IsEmpty(MusicPlayer.offset(1).Title)] | String.IsEmpty(MusicPlayer.offset(1).Title)] + !String.IsEmpty(MusicPlayer.Artist)</visible>
			</control>
			<control type="label">
				<description>Nowplaying video Label2 zeit ohne naechstes</description>
				<width>740</width>
				<height>70</height>
				<align>right</align>
				<font>BreadcumbTopSmall</font>
				<scroll>true</scroll>
				<scrollspeed>20</scrollspeed>
				<label>$INFO[Player.Time]$INFO[Player.Duration, / ,]</label>
				<visible>!Window.IsVisible(home) + Player.HasAudio + [[Integer.IsGreater(Player.TimeRemaining,20) + !String.IsEmpty(MusicPlayer.offset(1).Title)] | String.IsEmpty(MusicPlayer.offset(1).Title)] + String.IsEmpty(MusicPlayer.Artist)</visible>
			</control>
			<control type="label">
				<description>Nowplaying video Label2 zeit mit naechstes</description>
				<width>740</width>
				<height>70</height>
				<align>right</align>
				<font>BreadcumbTopSmall</font>
				<scroll>true</scroll>
				<scrollspeed>20</scrollspeed>
				<label>Als nächstes: $INFO[MusicPlayer.offset(1).Title]</label>
				<visible>!Window.IsVisible(home) + Player.HasAudio + [!Integer.IsGreater(Player.TimeRemaining,20) + !String.IsEmpty(MusicPlayer.offset(1).Title)]</visible>
			</control>
			<control type="label">
				<width>80</width>
				<height>70</height>
				<align>right</align>
				<font>IconBreadcumbs</font>
				<textcolor>ACDIF_0</textcolor>
				<label>$VAR[Player_Statusicon]</label>
				<visible>!Window.IsVisible(home) + Player.HasMedia</visible>
			</control>
			<control type="label">
				<width>100</width>
				<height>70</height>
				<align>right</align>
				<textcolor>ACDIF_0</textcolor>
				<font>IconVolume</font>
				<label>-</label>
				<visible>Player.Muted</visible>
			</control>
			<control type="label">
				<description>Numitems</description>
				<width>130</width>
				<height>70</height>
				<align>center</align>
				<font>BreadcumbTopSmall</font>
				<label>$VAR[global_topbar_value_numitems2]</label>
				<visible>![String.IsEmpty(Control.GetLabel(9114)) | Window.IsActive(Custom_1101_homewidgets.xml) | Window.IsActive(Custom_1102_setinfo.xml) | Window.IsActive(Custom_1106_categoryinfolist.xml) | Window.IsActive(Custom_1103_categoryinfo.xml) | Window.IsVisible(movieinformation) | Window.IsVisible(Custom_1102_setinfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(pictureinfo) | Window.IsVisible(addoninformation) | Window.IsActive(Custom_1101_homewidgets.xml) | Window.IsActive(Custom_1102_setinfo.xml) | Window.IsActive(Custom_1103_categoryinfo.xml) | Window.IsActive(Custom_1149_Textbox.xml) | Control.HasFocus(9000)]</visible>
			</control>
			<control type="label">
				<description>Zeit bei wetter</description>
				<width>150</width>
				<height>70</height>
				<label>$INFO[System.Time]</label>
				<font>BreadcumbTopNormal</font>
				<textcolor>ACDIF_0</textcolor>
				<visible>Window.IsVisible(weather) | Window.IsVisible(home) + !Control.HasFocus(9800)</visible>
			</control>
		</control>
	</control>
</control>
</include>
</includes>

