<?xml version="1.0" encoding="UTF-8"?>
<includes><!-- Cycle 0.4 -->
<!-- ######### sideblades ######### -->
<variable name="Sideblade-Breadcrumb">
	<value condition="Window.IsVisible(shutdownmenu)">Ausschalten</value>
	<value condition="Window.IsVisible(favourites)">Favoriten</value>
	<value>Optionen</value>
</variable>
<variable name="Sideblade-Breadcrumb2">
	<value condition="Window.IsVisible(videos) + Container.Content(files)">Dateien</value>
	<value condition="Window.IsVisible(videos) + !String.IsEmpty(Control.GetLabel(3))">Sortierung - [COLOR=TextColorHeavy]$INFO[Container.SortMethod][/COLOR]</value>
	<value condition="Window.IsVisible(music) + Container.Content(files)">Dateien</value>
	<value condition="Window.IsVisible(music) + !String.IsEmpty(Control.GetLabel(3))">Sortierung - [COLOR=TextColorHeavy]$INFO[Container.SortMethod][/COLOR]</value>
	<value condition="Window.IsVisible(favourites)">[CR]</value>
	<value condition="Window.IsVisible(systeminfo)">$INFO[System.CurrentControl]</value>
	<value condition="Window.IsVisible(shutdownmenu)">$INFO[system.profilename]</value>
	<value>$INFO[Container.FolderName]</value>
</variable>
<variable name="Sideblade-Breadcrumb3">
	<value condition="Window.IsVisible(shutdownmenu)">[CR]</value>
	<value condition="Window.IsVisible(selectdialog)">([COLOR=TextColorLight]$INFO[Container(3).NumItems][/COLOR]) Einträge - Seite ([COLOR=TextColorLight]$INFO[Container(3).CurrentPage]/$INFO[Container(3).NumPages][/COLOR])</value>
	<value condition="Window.IsVisible(favourites)">([COLOR=TextColorLight]$INFO[Container(450).NumItems][/COLOR]) Einträge - Seite ([COLOR=TextColorLight]$INFO[Container(450).CurrentPage]/$INFO[Container(450).NumPages][/COLOR])</value>
	<value condition="String.Contains(Container.Folderpath,/playlists/)">Playliste</value>
	<value condition="Container.Content(tvshows)">$INFO[Container.CurrentPage, Seite ([COLOR=TextColorMedium]]$INFO[Container.NumPages,/,[/COLOR])]</value>
	<value condition="Container.Content(episodes)">$INFO[Container.TotalTime,Laufzeit: ([COLOR=TextColorMedium],[/COLOR])]</value>
	<value condition="Window.IsVisible(videos) + !Container.Content(files)">$INFO[Container.NumItems] Einträge</value>
	<value condition="Container.Content(files) + !String.IsEmpty(ListItem.Size)">Pfad: $INFO[ListItem.path]</value>
	<value condition="Window.IsVisible(videos)">$INFO[Container.NumItems] Einträge Seite $INFO[Container.CurrentPage]/$INFO[Container.NumPages]</value>
	<value condition="Container.Content(addons) | Window.IsVisible(programs)">Sortierung: $INFO[Container.SortMethod]</value>
	<value condition="Window.IsVisible(music)">$INFO[Container.NumItems] Einträge</value>
</variable>

<!-- ######### SettingMenus blades ######### -->
<variable name="SettingMenu-BreadcumbIcon">
	<value condition="Window.IsVisible(EventLog.xml)">Ê</value>
	<value condition="Window.IsVisible(SettingsSystemInfo.xml)">È</value>
	<value condition="Window.IsVisible(SettingsProfile.xml)">s</value>
	<value condition="Window.IsVisible(Settings.xml)">ĭ</value>
	<value condition="Window.IsVisible(SkinSettings.xml)">Ě</value>
	<value condition="Window.IsVisible(SettingsCategory.xml) + String.IsEqual(Control.GetLabel(2),$LOCALIZE[14086])">S</value><!-- Kategorie label Wiedergabe -->
	<value condition="Window.IsVisible(SettingsCategory.xml) + String.IsEqual(Control.GetLabel(2),Media)">ǝ</value><!-- Kategorie label MediaSettings -->
	<value condition="Window.IsVisible(SettingsCategory.xml) + String.IsEqual(Control.GetLabel(2),$LOCALIZE[24018])">Ħ</value><!-- Kategorie label Dienste -->
	<value condition="Window.IsVisible(SettingsCategory.xml) + String.IsEqual(Control.GetLabel(2),$LOCALIZE[14206])">ĥ</value><!-- Kategorie label Benutzeroberfläche -->
	<value condition="Window.IsVisible(SettingsCategory.xml) + String.IsEqual(Control.GetLabel(2),Skin settings)">Ě</value><!-- skin -->
	<value condition="Window.IsVisible(SettingsCategory.xml) + String.IsEqual(Control.GetLabel(2),Benutzerprofile)">Ĝ</value><!-- Benutzerprofile -->
	<value condition="Window.IsVisible(SettingsCategory.xml) + String.IsEqual(Control.GetLabel(2),System)">ĭ</value><!-- System -->
</variable>
<variable name="SettingMenu-Breadcrumb">
	<value condition="Window.IsVisible(EventLog.xml)">Ereignisse</value>
	<value condition="Window.IsVisible(SettingsSystemInfo.xml)">Systeminfo</value>
	<value condition="Window.IsVisible(SettingsProfile.xml)">Profildaten</value>
	<value condition="Window.IsVisible(Settings.xml)">Einstellungen</value>
	<value condition="Window.IsVisible(SkinSettings.xml)">Einstellen</value>
	<value condition="Window.IsVisible(SettingsCategory.xml)">Einstellungen</value>
</variable>
<variable name="SettingMenu-Breadcrumb2">
	<value condition="Window.IsVisible(EventLog.xml)">Optionen</value>
	<value condition="Window.IsVisible(SettingsSystemInfo.xml)">$INFO[System.FriendlyName]</value>
	<value condition="Window.IsVisible(SettingsProfile.xml)">Profile</value>
	<value condition="Window.IsVisible(Settings.xml)"></value>
	<value condition="Window.IsVisible(SkinSettings.xml)">Cycle einstellen</value>
	<value condition="Window.IsVisible(SettingsCategory.xml)">$INFO[Control.GetLabel(2)]</value>
</variable>

<!-- ######### home sideblade ######### -->
<variable name="Homeblade-BreadcumbIcon">
	<value condition="ControlGroup(8260).HasFocus | ControlGroup(8270).HasFocus">w</value>
	<value condition="ControlGroup(8210).HasFocus">S</value>
	<value condition="ControlGroup(8220).HasFocus">D</value>
	<value condition="ControlGroup(8230).HasFocus">E</value>
	<value condition="ControlGroup(8240).HasFocus">ě</value>
	<value condition="ControlGroup(8250).HasFocus">Ę</value>
	<value condition="ControlGroup(8290).HasFocus">Ȃ</value>
</variable>
<variable name="Homeblade-Breadcumb1">
	<value condition="ControlGroup(8260).HasFocus | ControlGroup(8270).HasFocus">Pinboard</value>
	<value condition="ControlGroup(8210).HasFocus">Video</value>
	<value condition="ControlGroup(8220).HasFocus">Serie</value>
	<value condition="ControlGroup(8230).HasFocus">Film</value>
	<value condition="ControlGroup(8240).HasFocus">Extras</value>
	<value condition="ControlGroup(8250).HasFocus">Dokumentationen</value>
	<value condition="ControlGroup(8290).HasFocus">Musik</value>
</variable>
<variable name="Homeblade-Breadcumb2">
	<value condition="Control.HasFocus(8262) | Control.HasFocus(8265)">Serien</value>
	<value condition="Control.HasFocus(8264) | Control.HasFocus(8267)">Addons</value>
	<value condition="Control.HasFocus(8268)">Serien organisieren</value>
	<value condition="Control.HasFocus(8280)">Addons organisieren</value>
	<value condition="ControlGroup(8210).HasFocus">Kategorien</value>
	<value condition="ControlGroup(8220).HasFocus">Kategorien</value>
	<value condition="ControlGroup(8230).HasFocus">Kategorien</value>
	<value condition="ControlGroup(8240).HasFocus">Kategorien</value>
	<value condition="ControlGroup(8250).HasFocus">Kategorien</value>
	<value condition="ControlGroup(8290).HasFocus">Kategorien</value>
	<value condition="String.IsEqual(Window(1120).Property(PinboardContent),TV) + [Control.HasFocus(8701) | Control.HasFocus(8700)]">Serien</value>
	<value condition="String.IsEqual(Window(1120).Property(PinboardContent),Movie) + [Control.HasFocus(8701) | Control.HasFocus(8703)]">Filme</value>
</variable>

<!-- ######### Windows ######### -->
<variable name="Topbar-Label">
	<value condition="Window.IsActive(Custom_1101_Widgets.xml)">Widgets</value>
	<value condition="Window.IsVisible(Custom_1149_DialogLastWatched.xml)">Hinweis</value>
	<value condition="Window.IsVisible(musicplaylisteditor)">Wiedergabeliste</value>
	<value condition="Window.IsVisible(script-lazytv-main.xml)">Lazy TV</value><!-- lazy tv -->
	<!-- widget playlists -->
	<value condition="Window.IsActive(Custom_1101_Widgets.xml) + String.StartsWith(Container.FolderPath,special://skin/playlists/) + !String.StartsWith(Container.FolderPath,special://skin/playlists/Doku)">Widget</value>
	<value condition="Control.IsVisible(56) + String.StartsWith(Container.FolderPath,special://skin/playlists/) + String.StartsWith(Container.FolderPath,special://skin/playlists/Doku)">Dokumentationen</value>
	<value condition="Window.IsActive(Custom_1101_Widgets.xml) + String.StartsWith(Container.FolderPath,plugin://service.library.data.provider/)">Service.library Widget</value>
	<!-- video -->
	<value condition="String.IsEqual(Container.Folderpath,special://videoplaylists/)">Video Wiedergabelisten</value>
	<value condition="Container.Content(movies) | String.StartsWith(Container.Folderpath,videodb://movies/)">Filme</value><!-- film -->
	<value condition="Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | String.StartsWith(Container.Folderpath,videodb://tvshows/)">Serien</value><!-- serie -->
	<value condition="String.StartsWith(Container.FolderPath,plugin:)">Addons</value><!-- addons -->
	<value condition="Window.IsActive(videos)">Videos</value>
	<value condition="Window.IsActive(music)">Musik</value>
	<value condition="Window.IsActive(pictures)">Bilder</value>
	<value condition="Window.IsActive(addonbrowser)">Addonbrowser</value>
	<value condition="Window.IsActive(programs)">Programme</value>
	<value condition="Window.IsVisible(Weather)">Wetter</value>
	<value condition="Window.IsVisible(filemanager)">Dateimanager</value>
</variable>
<variable name="Topbar-Label2">
	<value condition="Window.IsVisible(musicplaylisteditor) + Window.IsActive(contextmenu)">$INFO[System.CurrentControl]</value>
	<value condition="Window.IsVisible(musicplaylisteditor) + Control.HasFocus(9001)">$INFO[System.CurrentControl]</value>
	<value condition="Window.IsVisible(musicplaylisteditor) + !Control.HasFocus(100)">Lieder auswählen</value>
	<value condition="Window.IsVisible(musicplaylisteditor) + Control.HasFocus(100)">Abspielliste bearbeiten</value>
	<value condition="Window.IsVisible(videos) + Window.IsVisible(Custom_1101_Widgets.xml)">$INFO[skin.string(VideoslotWidgetTitle)]</value>
	<value condition="Window.IsVisible(videos) + Window.IsVisible(Custom_1149_DialogLastWatched.xml)">$INFO[skin.string(VideoslotWidgetTitle)]</value>
	<value condition="Window.IsVisible(videos) + Window.IsVisible(Custom_1103_Categoryinfo.xml)">$VAR[Categroyinfo-TitlePrefix]$INFO[ListItem.Label]</value>
	<value condition="Window.IsVisible(videos) + Window.IsVisible(Custom_1104_Categoryinfolist.xml)">$VAR[Categroyinfo-TitlePrefix]$INFO[ListItem.Label]</value>
	<value condition="Window.IsVisible(home) + Window.IsVisible(Custom_1101_Widgets.xml)">$INFO[skin.string(MainslotWidgetTitle)]</value>
	<value condition="Window.IsVisible(home) + Window.IsVisible(Custom_1149_DialogLastWatched.xml)">$INFO[skin.string(MainslotWidgetTitle)]</value>
	<!-- quicknav playliste -->
	<value condition="Window.IsActive(Custom_1101_Widgets.xml) + String.StartsWith(Container.FolderPath,special://skin/playlists/) + !String.IsEmpty(Skin.string(CycleMyNavVideoMovieQuicklinkTitle)) + !String.StartsWith(Container.FolderPath,special://skin/playlists/Doku) + [Container.Content(movies) | Container.Content(sets)]">xx$INFO[Skin.string(CycleMyNavVideoMovieQuicklinkTitle)]</value>
	<value condition="Window.IsActive(Custom_1101_Widgets.xml) + String.StartsWith(Container.FolderPath,special://skin/playlists/) + !String.IsEmpty(Skin.string(CycleMyNavVideoTVQuicklinkTitle)) + !String.StartsWith(Container.FolderPath,special://skin/playlists/Doku) + [Container.Content(episodes) | Container.Content(seasons) | Container.Content(tvshows)]">xx$INFO[Skin.string(CycleMyNavVideoTVQuicklinkTitle)]</value>
	<!-- doku playlisten -->
	<value condition="Control.IsVisible(56) + String.IsEmpty(Container(400).ListItem.TVShowTitle)">Filme</value>
	<value condition="Control.IsVisible(56) + !String.IsEmpty(Container(400).ListItem.TVShowTitle)">Serien</value>
	<!-- skin playliste -->
	<value condition="String.IsEqual(Container.FolderPath,special://skin/playlists/)">Skin-Playlisten</value>
	<value condition="String.Contains(Container.FolderPath,special://skin/playlists)">$INFO[Container.Foldername]</value>
	<!-- Ebene 1 breadcumbs direkt in kategorie -->
	<value condition="Container.Content(genres)">Genres</value>
	<value condition="Container.Content(years)">Jahre</value>
	<value condition="Container.Content(actors)">Darsteller</value>
	<value condition="Container.Content(studios)">Studios</value>
	<value condition="Container.Content(directors)">Regisseure</value>
	<value condition="Container.Content(sets)">Zusammenstellung</value>
	<value condition="Container.Content(countries)">Länder</value>
	<value condition="Container.Content(tags)">Tags</value>
	<!-- Ebene 2 breadcumbs in kategorie ebene davor -->
	<value condition="Container.Content(tvshows) + String.StartsWith(Container.Folderpath,videodb://tvshows/genres/)">Genres</value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/genres/)">$INFO[Container.ShowTitle]</value>
	<value condition="Container.Content(seasons) + String.StartsWith(Container.Folderpath,videodb://tvshows/genres/)">$INFO[Container.ShowTitle]</value>
	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/genres/)">Genres</value>
	
	<value condition="Container.Content(tvshows) + String.StartsWith(Container.Folderpath,videodb://tvshows/years/)">Jahre</value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/years/)">$INFO[Container.ShowTitle]</value>
	<value condition="Container.Content(seasons) + String.StartsWith(Container.Folderpath,videodb://tvshows/years/)">$INFO[Container.ShowTitle]</value>
	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/years/)">Jahre</value>
	
	<value condition="Container.Content(tvshows) + String.StartsWith(Container.Folderpath,videodb://tvshows/actors/)">Darsteller</value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/actors/)">$INFO[Container.ShowTitle]</value>
	<value condition="Container.Content(seasons) + String.StartsWith(Container.Folderpath,videodb://tvshows/actors/)">$INFO[Container.ShowTitle]</value>
	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/actors/)">Darsteller</value>
	<value condition="Container.Content(tvshows) + String.StartsWith(Container.Folderpath,videodb://tvshows/studios/)">Studios</value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/studios/)">$INFO[Container.ShowTitle]</value>
	<value condition="Container.Content(seasons) + String.StartsWith(Container.Folderpath,videodb://tvshows/studios/)">$INFO[Container.ShowTitle]</value>
	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/studios/)">Studios</value>
	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/directors/)">Regisseure</value>
	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/sets/)">Zusammenstellung</value>
	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/countries/)">Länder</value>
	<!-- specials die nicht durch die content titel abgedeckt werden -->
	<value condition="String.StartsWith(Container.Folderpath,videodb://recentlyaddedepisodes)">$INFO[Container.Foldername]</value>
	<value condition="String.StartsWith(Container.Folderpath,videodb://recentlyaddedmovies)">$INFO[Container.Foldername]</value>
	<value condition="String.IsEqual(Container.Folderpath,special://videoplaylists/)">Wiedergabelisten</value>
	<value condition="String.IsEqual(Container.Folderpath,addons://sources/video)">Addons</value>
	<value condition="String.IsEqual(Container.Folderpath,sources://video/)">Dateien</value>
	<value condition="String.StartsWith(Container.FolderPath,plugin:)">$INFO[Container.Foldername]</value><!-- addons -->
	<!-- titel -->
	<value condition="Container.Content(tvshows)">$INFO[Container.Foldername]</value>
	<value condition="Container.Content(seasons)">$INFO[Container.ShowTitle]</value>
	<value condition="Container.Content(episodes)">$INFO[Container.ShowTitle]</value>
	<value condition="Container.Content(movies)">$INFO[Container.Foldername]</value>
	
	<!-- hauptebenen video -->
	<value condition="Window.IsVisible(videos) + String.IsEqual(Container.Folderpath,library://video/tvshows)">Übersicht</value>
	<value condition="Window.IsVisible(videos) + !Container.Content(files)">Übersicht</value>
	<value condition="Window.IsVisible(videos)">$INFO[Container.Foldername]</value>
	<!-- uebrige fenster -->
	<value condition="Window.IsActive(programs) + !String.IsEmpty(Container.Foldername)">$INFO[Container.Foldername]</value>
	<value condition="Window.IsActive(programs)">Übersicht</value>
	<value condition="Window.IsActive(addonbrowser) + !String.IsEmpty(Container.Foldername)">$INFO[Container.Foldername]</value>
	<value condition="Window.IsActive(addonbrowser)">Übersicht</value>
	<value condition="Window.IsVisible(pictures) + !String.IsEmpty(Container.Foldername)">$INFO[Container.Foldername]</value>
	<value condition="Window.IsVisible(pictures)">Übersicht</value>
	<value condition="Window.IsVisible(Weather)">$INFO[Window(Weather).Property(Location)]</value> 
	<value condition="Window.IsVisible(FileManager.xml) + [Control.HasFocus(21) | Control.HasFocus(31)]">$INFO[Control.GetLabel(102)]</value>
	<value condition="Window.IsVisible(FileManager.xml)">$INFO[Control.GetLabel(101)]</value>
	<value condition="Window.IsVisible(music) + !String.IsEmpty(Container.Foldername)">$INFO[Container.Foldername]</value>
	<value condition="Window.IsVisible(music)">Übersicht</value>
</variable>
<variable name="Topbar-Label3">
	<value condition="Window.IsVisible(Custom_1149_DialogLastWatched.xml)">$INFO[Container(400).ShowTitle]</value>
	<value condition="Window.IsActive(Custom_1101_Widgets.xml)"></value><!-- fake leer damit nix kommt -->
	<!-- Ebene 3 breadcumbs in kategorie aktuelle ebene damit nichts doppelt kommt leer nach pfad -->
	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/genres/) + !String.IsEqual(Container.Folderpath,videodb://movies/genres/)">$INFO[Container.Foldername]</value>
	<value condition="Container.Content(tvshows) + String.StartsWith(Container.Folderpath,videodb://tvshows/genres/)">$INFO[Container.Foldername]</value>
	<value condition="Container.Content(genres) + String.StartsWith(Container.Folderpath,videodb://tvshows/genres/)"></value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/genres/) + !String.IsEmpty(ListItem.Season)">$VAR[SeasonPrefix-long]</value>
	<value condition="Container.Content(seasons) + String.StartsWith(Container.Folderpath,videodb://tvshows/genres/)"></value>

	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/years/) + !String.IsEqual(Container.Folderpath,videodb://movies/years/)">$INFO[Container.Foldername]</value>
	<value condition="Container.Content(tvshows) + String.StartsWith(Container.Folderpath,videodb://tvshows/years/)">$INFO[Container.Foldername]</value>
	<value condition="Container.Content(years) + String.StartsWith(Container.Folderpath,videodb://tvshows/years/)"></value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/years/) + !String.IsEmpty(ListItem.Season)">$VAR[SeasonPrefix-long]</value>
	<value condition="Container.Content(seasons) + String.StartsWith(Container.Folderpath,videodb://tvshows/years/)"></value>

	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/actors/) + !String.IsEqual(Container.Folderpath,videodb://movies/actors/)">$INFO[Container.Foldername]</value>
	<value condition="Container.Content(tvshows) + String.StartsWith(Container.Folderpath,videodb://tvshows/actors/)">$INFO[Container.Foldername]</value>
	<value condition="Container.Content(actors) + String.StartsWith(Container.Folderpath,videodb://tvshows/actors/)"></value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/actors/) + !String.IsEmpty(ListItem.Season)">$VAR[SeasonPrefix-long]</value>
	<value condition="Container.Content(seasons) + String.StartsWith(Container.Folderpath,videodb://tvshows/actors/)"></value>

	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/studios/) + !String.IsEqual(Container.Folderpath,videodb://movies/studios/)">$INFO[Container.Foldername]</value>
	<value condition="Container.Content(tvshows) + String.StartsWith(Container.Folderpath,videodb://tvshows/studios/)">$INFO[Container.Foldername]</value>
	<value condition="Container.Content(studios) + String.StartsWith(Container.Folderpath,videodb://tvshows/studios/)"></value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/studios/) + !String.IsEmpty(ListItem.Season)">$VAR[SeasonPrefix-long]</value>
	<value condition="Container.Content(seasons) + String.StartsWith(Container.Folderpath,videodb://tvshows/studios/)"></value>

	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/directors/)">$INFO[Container.Foldername]</value>
	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/sets/)">$INFO[Container.Foldername]</value>
	<value condition="Container.Content(movies) + String.StartsWith(Container.Folderpath,videodb://movies/countries/)">$INFO[Container.Foldername]</value>

	<!-- Ebene 3 breadcumbs staffel bei episoden -->
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/titles/) + !String.IsEmpty(ListItem(1).Season) + ListItem.IsParentFolder + !Integer.IsGreater(ListItem(1).Season,9)">Staffel 0$INFO[ListItem(1).Season]</value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/titles/) + !String.IsEmpty(ListItem(1).Season) + ListItem.IsParentFolder + Integer.IsGreater(ListItem(1).Season,9)">Staffel $INFO[ListItem(1).Season]</value>
	<value condition="Container.Content(episodes) + String.StartsWith(Container.Folderpath,videodb://tvshows/titles/) + !String.IsEmpty(ListItem.Season) + !ListItem.IsParentFolder">$VAR[SeasonPrefix-long]</value>
	<!-- Ebene 3 breadcumbs -->
	<value condition="Container.Content(seasons) + String.StartsWith(Container.Folderpath,videodb://tvshows/titles/)"></value>
	<value condition="Window.IsActive(addonbrowser)"></value>
	<value condition="Window.IsVisible(music) + Container.Content(songs) + !String.IsEmpty(ListItem.Artist) + ![String.Contains(Container.Foldername,Singles) | String.Contains(Container.Foldername,Titel)]">$INFO[ListItem.Artist]</value>
</variable>
<variable name="Topbar-Numitems">
	<value condition="Window.IsVisible(Custom_1101_Widgets.xml)">[CR]</value>
	<value condition="Window.IsVisible(Custom_1103_Categoryinfo.xml)">$INFO[Container(400).NumItems]</value><!-- kategorie info -->
	<value condition="Window.IsVisible(Custom_1104_Categoryinfolist.xml)">$INFO[Container(400).NumItems]</value><!-- kategorie info -->
	<value condition="Window.IsVisible(script-lazytv-main.xml)">$INFO[Container(655).NumItems]</value><!-- lazy tv -->
	<value condition="String.StartsWith(Container.FolderPath,special://skin/playlists/Doku) + Control.HasFocus(400)">$INFO[Container(400).NumItems]</value><!-- dokuview zweite liste -->
	<value condition="Container.Content(seasons)">$VAR[Season54NumItems]</value>
	<value condition="Window.IsVisible(videos) + [Container.Content(tvshows) | Container.Content(episodes) | Container.Content(movies) | Container.Content(sets) | Container.Content(genres) | Container.Content(years) | Container.Content(actors) | Container.Content(studios) | Container.Content(sets) | Container.Content(tags) | Container.Content(directors)]">$INFO[Container.NumItems]</value>
	<value condition="Window.IsVisible(music) + [Container.Content(albums) | Container.Content(years) | Container.Content(artists) | Container.Content(genres) | Container.Content(songs)]">$INFO[Container.NumItems]</value>
	<value condition="Window.IsVisible(programs) | Window.IsVisible(addonbrowser) | Window.IsVisible(pictures)">$INFO[Container.NumItems]</value>
</variable>
<variable name="Topbar-Numitems2">
	<value condition="Window.IsVisible(Custom_1101_Widgets.xml)"></value>
	<value condition="Window.IsVisible(Custom_1103_categoryinfo.xml) + String.IsEmpty(ListItem.Duration)">$INFO[Container(400).ListItem.Property(TotalSeasons)]$INFO[Container(400).ListItem.Property(TotalEpisodes), (,) ]</value><!-- kategorie info serie -->
	<value condition="Window.IsVisible(Custom_1104_categoryinfolist.xml) + String.IsEmpty(ListItem.Duration)">$INFO[Container(400).ListItem.Property(TotalSeasons)]$INFO[Container(400).ListItem.Property(TotalEpisodes), (,) ]</value><!-- kategorie info serie -->

	<value condition="String.StartsWith(Container.FolderPath,special://skin/playlists/Doku) + Control.HasFocus(400) + !String.IsEmpty(Container(400).ListItem.TVShowTitle)">$INFO[Container(400).ListItem.Property(TotalSeasons)]$INFO[Container(400).ListItem.Property(TotalEpisodes), (,) ]</value>
	<value condition="String.StartsWith(Container.FolderPath,special://skin/playlists/Doku) + Control.HasFocus(400) + String.IsEmpty(Container(400).ListItem.TVShowTitle) + !Container(400).ListItem.IsCollection">[CR]</value>
	<value condition="String.StartsWith(Container.FolderPath,special://skin/playlists/Doku) + Control.HasFocus(400) + String.IsEmpty(Container(400).ListItem.TVShowTitle) + Container(400).ListItem.IsCollection">$INFO[Container(20000).NumItems,(,)]</value>

	<value condition="Container.Content(tvshows) | Container.Content(seasons)">$INFO[ListItem.Property(TotalSeasons)]$INFO[ListItem.Property(TotalEpisodes), (,) ]</value>
	<value condition="Container.Content(episodes)">$INFO[Container.TotalUnWatched,(,)]</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection">$INFO[Window(Home).Property(Movies.UnWatched), (,) ]</value>
	<value condition="Container.Content(sets) | ListItem.IsCollection">$INFO[Container(20000).NumItems,(,)]</value>
	<value condition="Container.Content(actors)">$INFO[ListItem.Appearances,(,)]</value>
	<value condition="Container.Content(directors)">$INFO[ListItem.Appearances,(,)]</value>
	<!-- global contentcontainer -->
	<value condition="Window.IsVisible(videos) + Integer.IsGreater(Container(20000).NumItems,0) + !Container.Content(episodes)">$INFO[Container(20000).NumItems,(,)]</value>
	<value condition="Window.IsVisible(music) + Integer.IsGreater(Container(20000).NumItems,0)">$INFO[Container(20000).NumItems,(,)]</value>
	<value condition="Window.IsVisible(addonbrowser) + Integer.IsGreater(Container(20000).NumItems,0)">$INFO[Container(20000).NumItems,(,)]</value>
	<value condition="Window.IsVisible(programs) + !Container.content(addons) + Integer.IsGreater(Container(20000).NumItems,0)">$INFO[Container(20000).NumItems,(,)]</value>
</variable>
<variable name="Topbar-Icon"><!-- neu sortieren -->
	<value condition="Window.IsVisible(Custom_1149_DialogLastWatched.xml)">i</value><!-- lastwatched -->
	<value condition="Window.IsVisible(videos) + Control.HasFocus(502)">E</value><!-- trailer -->
	<value condition="Window.IsVisible(script-lazytv-main.xml)">T</value><!-- lazy tv -->
	<value condition="Container.Content(addons)">Ĝ</value><!-- vor video ud music fallback fuer addons -->
	<value condition="String.StartsWith(Container.FolderPath,plugin:)">Ĝ</value><!-- addons -->
	<value condition="Container.Content(directors)">J</value><!-- kategorien -->
	<value condition="Container.Content(countries)">N</value>
	<value condition="Container.Content(tags)">O</value>
	<value condition="Window.IsVisible(videos) + Container.Content(genres)">P</value>
	<value condition="Container.Content(studios)">L</value>
	<value condition="Window.IsVisible(videos) + Container.Content(years)">M</value>
	<value condition="Container.Content(actors)">C</value>
	<value condition="Window.IsVisible(videos) + Container.Content(years)">M</value>
	<value condition="Window.IsVisible(Custom_1101_Widgets.xml)">R</value><!-- Widget -->
	<value condition="Control.IsVisible(56)">Ę</value><!-- dokus -->
	<value condition="Window.IsVisible(videoplaylist)">v</value>
	<value condition="Window.IsVisible(musicplaylist)">Ȃ</value>
	<value condition="Window.IsVisible(music) + Container.Content(genres)">Ǿ</value><!-- musik -->
	<value condition="Container.Content(movies)">E</value><!-- video nach contents -->
	<value condition="String.StartsWith(Container.Folderpath,videodb://movies) | String.StartsWith(Container.Folderpath,library://video/movies)">E</value><!-- TV -->
	<value condition="Container.Content(sets)">K</value>
	<value condition="Container.Content(tvshows)">D</value><!-- TV -->
	<value condition="String.StartsWith(Container.Folderpath,videodb://tvshows) | String.StartsWith(Container.Folderpath,library://video/tvshows)">D</value><!-- TV -->
	<value condition="Container.Content(seasons)">D</value>
	<value condition="Container.Content(episodes)">D</value>
	<value condition="Container.Content(artists)">ǵ</value>
	<value condition="Container.Content(albums)">Ǵ</value>
	<value condition="Container.Content(songs)">Ƕ</value>
	<value condition="Window.IsVisible(addonbrowser)">ī</value>
	<value condition="Window.IsVisible(programs)">ǖ</value>

	<value condition="Window.IsVisible(videos)">S</value><!-- videofallback -->
	<value condition="Window.IsVisible(music)">Ȃ</value><!-- musicfallback -->
	<value condition="Window.IsVisible(pictures)">À</value><!-- krimskrams -->
	<value condition="Window.IsVisible(Weather)">:</value>
	<value condition="Window.IsVisible(FileManager.xml)">Ī</value>
	<value condition="Window.IsVisible(musicplaylisteditor)">Ǻ</value>
	<value condition="Container.Content(files)">Ĩ</value>
</variable>
<include name="Topbar">
	<control type="videowindow">
		<description>Fake preview fuer zeitlabels</description>
		<left>-5</left>
		<top>-5</top>
		<width>5</width>
		<height>5</height>
		<visible>Player.HasVideo</visible>
	</control>
	<control type="group">
		<left>80</left>
		<top>30</top>
		<include>Animation395-Conditional-Slide</include>
		<include>Animation-OpenCloseVisibleHidden-Fade</include>
		<visible>![Window.IsVisible(home) | Window.IsVisible(movieinformation) | Window.IsVisible(Custom_1102_Setinfo.xml) | Window.IsVisible(Custom_1105_Fileinfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(pictureinfo) | Window.IsVisible(addoninformation) | Control.HasFocus(9000) | Control.HasFocus(501) | Window.IsVisible(SettingsSystemInfo.xml) | Window.IsVisible(SettingsProfile.xml) | Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(settings) | Window.IsVisible(skinsettings) | Window.IsVisible(DialogSettings.xml) | Window.IsVisible(playercontrols) | Window.IsVisible(Custom_1121_Textbox.xml)] | Control.HasFocus(400)</visible>
		<animation type="Conditional" condition="!String.IsEmpty(Window(home).Property(Trailerpreview)) | Window.IsVisible(shutdownmenu)" reversible="true">
			<effect type="fade" start="100" end="0" time="120" tween="cubic" easing="inout" />
		</animation>
		<control type="grouplist">
			<width>805</width>
			<height>100</height>
			<itemgap>8</itemgap>
			<align>left</align>
			<orientation>horizontal</orientation>
			<control type="label">
				<width>80</width>
				<height>70</height>
				<font>IconBreadcumbs</font>
				<textcolor>TextColorMedium</textcolor>
				<label>$VAR[Topbar-Icon]</label>
			</control>
			<control type="label">
				<description>Nowplaying Label</description>
				<width>auto</width>
				<height>40</height>
				<font>BreadcumbTopNormal</font>
				<label>$VAR[Topbar-Label]</label>
			</control>
		</control>
		<control type="grouplist">
			<top>25</top>
			<left>88</left>
			<width>700</width>
			<height>70</height>
			<align>left</align>
			<orientation>horizontal</orientation>
			<visible>![ControlGroup(9310).HasFocus | Window.IsVisible(shutdownmenu) | Window.IsVisible(Custom_1141_ViewtypeSimilar.xml) | Window.IsVisible(DialogSelect.xml) | Window.IsVisible(favourites)]</visible>
			<control type="label">
				<description>Ebene 2 verkuerzt wenn es label2 gibt</description>
				<width min="0" max="360">auto</width>
				<height>70</height>
				<font>BreadcumbTopSmall</font>
				<label>$VAR[Topbar-Label2]</label>
				<visible>!String.IsEmpty(Control.GetLabel(450))</visible>
			</control>
			<control type="label">
				<description>Ebene 2 laenger wenn es nicht label2 gibt</description>
				<width min="0" max="700">auto</width>
				<height>70</height>
				<font>BreadcumbTopSmall</font>
				<label>$VAR[Topbar-Label2]</label>
				<visible>String.IsEmpty(Control.GetLabel(450))</visible>
			</control>
			<control type="label">
				<description>Divider</description>
				<width>auto</width>
				<height>70</height>
				<font>EnumRegularSmall</font>
				<label> $VAR[CustomEnumeration] </label>
				<visible>!String.IsEmpty(Control.GetLabel(450))</visible>
			</control>
			<control type="label" id="450">
				<description>Ebene 3</description>
				<width>auto</width>
				<height>70</height>
				<font>BreadcumbTopSmall</font>
				<label>$VAR[Topbar-Label3]</label>
			</control>
		</control>
	</control>
	<control type="group">
		<left>760</left>
		<top>25</top>
		<visible>![Window.IsVisible(Custom_1154_VideoFakeOverlay.xml) | Window.IsVisible(Custom_1197_ColorTimeRefresh.xml) | Window.IsVisible(startup) | Window.IsVisible(extendedprogressdialog) | Window.IsVisible(Notification) | Window.IsVisible(DialogConfirm.xml) | Window.IsActive(busydialog) | Window.IsVisible(Custom_1106_Histroyloader.xml)]</visible>
		<animation type="Conditional" condition="Window.IsVisible(volumebar) + !Player.Muted | !String.IsEmpty(Window(home).Property(Trailerpreview))" reversible="true">
			<effect type="fade" start="100" end="0" time="120" tween="cubic" easing="inout" />
		</animation>
		<control type="grouplist">
			<width>1100</width>
			<height>85</height>
			<itemgap>10</itemgap>
			<align>right</align>
			<orientation>horizontal</orientation>
			<control type="label">
				<description>Nowplaying video Label episode</description>
				<width min="0" max="510">auto</width>
				<height>50</height>
				<font>BreadcumbTopNormal</font>
				<include>GlobalScroll</include>
				<label>$INFO[VideoPlayer.TVShowTitle]</label>
				<visible>!Window.IsVisible(home) + Player.HasVideo + VideoPlayer.Content(episodes)</visible>
			</control>
			<control type="label">
				<description>Enum</description>
				<width>50</width>
				<height>50</height>
				<align>center</align>
				<font>EnumBoldNormal</font>
				<label>$VAR[CustomEnumeration]</label>
				<visible>!Window.IsVisible(home) + Player.HasVideo + VideoPlayer.Content(episodes)</visible>
			</control>
			<control type="label">
				<description>Nowplaying video Label2 episode</description>
				<width min="0" max="200">auto</width>
				<height>50</height>
				<font>BreadcumbTopNormal</font>
				<include>GlobalScroll</include>
				<label>$INFO[VideoPlayer.Episode,Episode ,]</label>
				<visible>!Window.IsVisible(home) + Player.HasVideo + VideoPlayer.Content(episodes)</visible>
			</control>
			<control type="label">
				<description>Nowplaying video Label alles außer episode</description>
				<width min="0" max="760">auto</width>
				<height>50</height>
				<font>BreadcumbTopNormal</font>
				<include>GlobalScroll</include>
				<label>$INFO[VideoPlayer.Title]</label>
				<visible>!Window.IsVisible(home) + Player.HasVideo + !VideoPlayer.Content(episodes)</visible>
			</control>
			<control type="label">
				<description>Nowplaying music Label ohne interpret</description>
				<width min="0" max="760">auto</width>
				<height>50</height>
				<font>BreadcumbTopNormal</font>
				<include>GlobalScroll</include>
				<label>$VAR[MusicPlayerTrackPrefix,, ]$INFO[MusicPlayer.Title]</label>
				<visible>!Window.IsVisible(home) + Player.HasAudio</visible>
			</control>
			<control type="label">
				<width>80</width>
				<height>85</height>
				<align>right</align>
				<font>IconBreadcumbs</font>
				<textcolor>TextColorMedium</textcolor>
				<label>$VAR[OSDStatus-Icon]</label>
				<visible>!Window.IsVisible(home) + Player.HasMedia</visible>
			</control>
			<control type="label">
				<width>100</width>
				<height>70</height>
				<align>center</align>
				<textcolor>$VAR[OSDDialogCol]</textcolor>
				<font>IconVolume</font>
				<label>$VAR[DialogVolume-Value]</label>
				<visible>Player.Muted</visible>
			</control>
			<control type="label" id="9114">
				<description>Numitems</description>
				<width>130</width>
				<height>50</height>
				<align>center</align>
				<font>BreadcumbTopNormal</font>
				<label>$VAR[Topbar-Numitems]</label>
				<visible>![String.IsEmpty(Control.GetLabel(9114)) | Window.IsVisible(Custom_1101_Widgets.xml) | Window.IsVisible(Custom_1102_Setinfo.xml) | Window.IsVisible(movieinformation) | Window.IsVisible(Custom_1102_Setinfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(pictureinfo) | Window.IsVisible(addoninformation) | Window.IsVisible(Custom_1101_Widgets.xml) | Window.IsVisible(Custom_1102_Setinfo.xml) | Window.IsVisible(Custom_1121_Textbox.xml) | Control.HasFocus(9000)]</visible>
			</control>
			<control type="label">
				<description>Zeit bei wetter</description>
				<width>150</width>
				<height>70</height>
				<label>$INFO[System.Time]</label>
				<font>BreadcumbTopNormal</font>
				<visible>[Window.IsVisible(weather) | Window.IsVisible(home) | Window.IsVisible(SettingsSystemInfo.xml) | Window.IsVisible(SettingsProfile.xml) | Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(settings) | Window.IsVisible(skinsettings) | Window.IsVisible(filemanager)] + !Control.HasFocus(9800) + !Window.IsVisible(Custom_1121_Textbox.xml)</visible>
			</control>
		</control>
		<control type="grouplist">
			<top>30</top>
			<width>1100</width>
			<height>75</height>
			<itemgap>10</itemgap>
			<align>right</align>
			<orientation>horizontal</orientation>
			<control type="label">
				<description>Nowplaying video Label2 episode</description>
				<width>740</width>
				<height>70</height>
				<align>right</align>
				<font>BreadcumbTopSmall</font>
				<include>GlobalScroll</include>
				<label>$INFO[VideoPlayer.Title,, - ]$INFO[Player.Time]$INFO[Player.Duration, / ,]</label>
				<visible>!Window.IsVisible(home) + Player.HasVideo + VideoPlayer.Content(episodes)</visible>
			</control>
			<control type="label">
				<description>Nowplaying video Label2 alles außer episode</description>
				<width>740</width>
				<height>70</height>
				<align>right</align>
				<font>BreadcumbTopSmall</font>
				<include>GlobalScroll</include>
				<label>$INFO[Player.Time]$INFO[Player.Duration, / ,]</label>
				<visible>!Window.IsVisible(home) + Player.HasVideo + !VideoPlayer.Content(episodes)</visible>
			</control>
			<control type="label">
				<description>Nowplaying video Label2 zeit ohne naechstes</description>
				<width>740</width>
				<height>70</height>
				<align>right</align>
				<font>BreadcumbTopSmall</font>
				<include>GlobalScroll</include>
				<label>$INFO[Player.Time]$INFO[Player.Duration, / , ]$INFO[MusicPlayer.Artist]</label>
				<visible>!Window.IsVisible(home) + Player.HasAudio + [[Integer.IsGreater(Player.TimeRemaining,20) + !String.IsEmpty(MusicPlayer.offset(1).Title)] | String.IsEmpty(MusicPlayer.offset(1).Title)] + !String.IsEmpty(MusicPlayer.Artist)</visible>
			</control>
			<control type="label">
				<description>Nowplaying video Label2 zeit ohne naechstes</description>
				<width>740</width>
				<height>70</height>
				<align>right</align>
				<font>BreadcumbTopSmall</font>
				<include>GlobalScroll</include>
				<label>$INFO[Player.Time]$INFO[Player.Duration, / ,]</label>
				<visible>!Window.IsVisible(home) + Player.HasAudio + [[Integer.IsGreater(Player.TimeRemaining,20) + !String.IsEmpty(MusicPlayer.offset(1).Title)] | String.IsEmpty(MusicPlayer.offset(1).Title)] + String.IsEmpty(MusicPlayer.Artist)</visible>
			</control>
			<control type="label">
				<description>Nowplaying video Label2 zeit mit naechstes</description>
				<width>740</width>
				<height>70</height>
				<align>right</align>
				<font>BreadcumbTopSmall</font>
				<include>GlobalScroll</include>
				<label>Folgt: $INFO[MusicPlayer.offset(1).Title]</label>
				<visible>!Window.IsVisible(home) + Player.HasAudio + [!Integer.IsGreater(Player.TimeRemaining,20) + !String.IsEmpty(MusicPlayer.offset(1).Title)]</visible>
			</control>
			<control type="label">
				<width>80</width>
				<height>70</height>
				<align>right</align>
				<font>IconBreadcumbs</font>
				<textcolor>ACDIF_0</textcolor>
				<label>$VAR[OSDStatus-Icon]</label>
				<visible>!Window.IsVisible(home) + Player.HasMedia</visible>
			</control>
			<control type="label">
				<width>100</width>
				<height>70</height>
				<align>right</align>
				<textcolor>ACDIF_0</textcolor>
				<font>IconVolume</font>
				<label></label>
				<visible>Player.Muted</visible>
			</control>
			<control type="label">
				<description>Numitems</description>
				<width>130</width>
				<height>70</height>
				<align>center</align>
				<font>BreadcumbTopSmall</font>
				<label>$VAR[Topbar-Numitems2]</label>
				<visible>![String.IsEmpty(Control.GetLabel(9114)) | Window.IsVisible(Custom_1101_Widgets.xml) | Window.IsVisible(movieinformation) | Window.IsVisible(Custom_1102_Setinfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(pictureinfo) | Window.IsVisible(addoninformation) | Window.IsVisible(Custom_1101_Widgets.xml) | Window.IsVisible(Custom_1121_Textbox.xml) | Control.HasFocus(9000)]</visible>
			</control>
			<control type="label">
				<description>Zeit bei wetter</description>
				<width>150</width>
				<height>70</height>
				<label></label>
				<font>BreadcumbTopSmall</font>
				<textcolor>ACDIF_0</textcolor>
				<visible>[Window.IsVisible(weather) | Window.IsVisible(home) | Window.IsVisible(SettingsSystemInfo.xml) | Window.IsVisible(SettingsProfile.xml) | Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(settings) | Window.IsVisible(skinsettings) | Window.IsVisible(filemanager)] + !Control.HasFocus(9800)</visible>
			</control>
		</control>
	</control>
</include>

</includes>

