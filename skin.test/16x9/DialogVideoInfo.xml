<?xml version="1.0" encoding="UTF-8"?>
<window><!-- Cycle 0.4 -->
<backgroundcolor>BackgroundColor</backgroundcolor>
<defaultcontrol always="true">9000</defaultcontrol>
<onload>Skin.SetString(SelectDialog,Standard)</onload><!-- Dialogselect standard Vorauswahl -->
<onload>ClearProperty(AniSlideL,home)</onload><!-- Navigation Links -->
<onload>ClearProperty(AniSlideR,home)</onload><!-- Navigation Rechts -->
<onload>ClearProperty(AniSimilarFocus,home)</onload><!-- Navigation aehnliche ueber Playliste -->
<onload>Dialog.Close(1141)</onload><!-- schließen des empfehlungen fensters beim oeffenen damit leftslide nicht aktiv ist und alles nach rechts rutscht -->
<onunload condition="Window.IsVisible(Custom_1154_VideoFakeOverlay.xml)">fullscreen</onunload>
<onunload>Skin.reset(SelectDialog)</onunload><!-- Dialogselect standard Vorauswahl -->
<controls>
<!-- Sidebar Defaultbuttons hidden -->
<control type="button" id="6">
	<description>Video informationen neu laden</description>
	<include>HiddenControl</include>
</control>
<control type="button" id="8">
	<description>Abspielen/oeffnen</description>
	<include>HiddenControl</include>
</control>
<control type="button" id="10">
	<description>Artworks holen</description>
	<include>HiddenControl</include>
</control>
<control type="button" id="13">
	<description>Filme des Regisseurs</description>
	<include>HiddenControl</include>
</control>
<control type="button" id="7">
	<description>Userrating</description>
	<include>HiddenControl</include>
</control>
<include condition="Skin.HasSetting(EnableVintageOverlay)">Vintagebackground</include>
<include condition="!Skin.HasSetting(EnableVintageOverlay)">Cyclebackground</include>
<include condition="!Skin.HasSetting(EnableVintageOverlay)">CyclebackgroundFanart</include>
<include>InfoBackground-Fade</include>
<include>Topbar</include>
<control type="group">
	<top>30</top>
	<visible>!String.StartsWith(ListItem.Path,plugin:) + !String.IsEmpty(ListItem.DBType)</visible>
	<visible>!Window.IsVisible(Custom_1121_Textbox.xml)</visible>
	<animation type="Conditional" reversible="true" condition="String.IsEqual(skin.String(SelectDialog),Rating) + Window.IsVisible(selectdialog)">
		<effect type="fade" start="100" end="0" time="150" tween="cubic" easing="inout" />
	</animation>
	<control type="image"><!-- Bar -->
		<description>Circles Bar ueber alle 3 "Seiten"</description>
		<left>-500</left>
		<top>594</top>
		<width>3000</width>
		<height>152</height>
		<texture colordiffuse="$VAR[CirclesCol]">views/info/bar.png</texture>
		<animation effect="slide" start="0,0" end="0,119" time="300" condition="!String.IsEmpty(Window(home).Property(AniSlideR))">Conditional</animation>
		<visible>!Window.IsVisible(Custom_1121_Textbox.xml)</visible>
		<animation type="WindowOpen" reversible="false">
			<effect type="fade" start="0" end="100" delay="200" time="350" tween="cubic" easing="inout" />
			<effect type="zoom" start="70" end="100" center="960,540" delay="200" time="350" tween="cubic" easing="inout"/>
		</animation>
		<animation type="Visible" reversible="false">
			<effect type="fade" start="0" end="100" delay="200" time="350" tween="cubic" easing="inout" />
			<effect type="zoom" start="70" end="100" center="960,540" delay="200" time="350" tween="cubic" easing="inout"/>
		</animation>
		<animation type="WindowClose" condition="String.IsEmpty(Window(home).Property(AniSlideR))" reversible="false">
			<effect type="fade" start="100" end="0" time="250" tween="cubic" easing="inout" />
			<effect type="zoom" start="100" end="70" center="960,540"time="250" tween="cubic" easing="inout" />
		</animation>
		<animation type="WindowClose" condition="!String.IsEmpty(Window(home).Property(AniSlideR))" reversible="false">
			<effect type="fade" start="100" end="0" time="250" tween="cubic" easing="inout" />
			<effect type="zoom" start="100" end="70" center="960,659" time="250" tween="cubic" easing="inout" />
		</animation>
		<animation type="Hidden" reversible="false">
			<effect type="fade" start="100" end="0" time="250" tween="cubic" easing="inout" />
			<effect type="zoom" start="100" end="70" center="960,540" time="250" tween="cubic" easing="inout" />
		</animation>
	</control>
	<control type="group"><!-- Hauptseite -->
		<description>Hauptseite mit links zu Fanart und rechts zu Darsteller</description>
		<include>Animation395-Conditional-Slide</include>
		<animation effect="slide" start="0" end="1920" time="300" condition="!String.IsEmpty(Window(home).Property(AniSlideL))">Conditional</animation>
		<animation effect="slide" start="0" end="-1920" time="300" condition="!String.IsEmpty(Window(home).Property(AniSlideR))">Conditional</animation>
		<include>Animation-OpenCloseVisibleHidden-Zoom</include>
		<control type="list" id="9000"><!-- Menue -->
			<description>Menue1</description>
			<left>860</left>
			<top>594</top>
			<width>900</width>
			<height>152</height>
			<onleft>SetProperty(AniSlideL,ON,home)</onleft><!-- Property und Focus links -->
			<onleft>9331</onleft>
			<onright>SetProperty(AniSlideR,ON,home)</onright><!-- Property und Focus rechts -->
			<onright condition="!String.IsEmpty(Container(50).ListItem.label)">9001</onright>
			<onright>Skin.SetString(SelectDialog,Temp)</onright><!-- String fuer Select Dialog Anzeige -->
			<onright condition="String.IsEmpty(Container(50).ListItem.label) + !String.IsEmpty(ListItem.Genre)">SetProperty(AniSimilarFocus,ON,home)</onright><!-- similar wenn actor leer -->
			<onright condition="String.IsEmpty(Container(50).ListItem.label) + !String.IsEmpty(ListItem.Genre)">SetFocus(501)</onright><!-- similar wenn actor leer -->
			<onright condition="String.IsEmpty(Container(50).ListItem.label) + String.IsEmpty(ListItem.Genre)">9001</onright><!-- similar wenn actor leer -->
			<onup condition="!String.Contains(Control.GetLabel(9005),Kein Überblick gefunden)">SetProperty(TextBox.Logo,$VAR[Art-logo],home)</onup>
			<onup condition="!String.Contains(Control.GetLabel(9005),Kein Überblick gefunden)">SetProperty(TextBox.Title,$ESCVAR[TextBox-Title],home)</onup>
			<onup condition="!String.Contains(Control.GetLabel(9005),Kein Überblick gefunden)">SetProperty(TextBox.SubTitle,$ESCVAR[TextBox-SubTitle],home)</onup>
			<onup condition="!String.Contains(Control.GetLabel(9005),Kein Überblick gefunden)">SetProperty(TextBox.SubTitle2,$ESCVAR[TextBox-SubTitle2],home)</onup>
			<onup condition="!String.Contains(Control.GetLabel(9005),Kein Überblick gefunden)">SetProperty(TextBox.Plot,$ESCVAR[TextBox-Text],home)</onup>
			<onup condition="!String.Contains(Control.GetLabel(9005),Kein Überblick gefunden)">ActivateWindow(1121)</onup>
			<ondown>close</ondown>
			<onfocus condition="!String.IsEmpty(Window(home).Property(Videoratinginfo))">Skin.SetString(SelectDialog,Rating)</onfocus>
			<onfocus condition="!String.IsEmpty(Window(home).Property(Videoratinginfo))">SendClick(2003,7)</onfocus>
			<orientation>horizontal</orientation>
			<focusposition>1</focusposition>
			<scrolltime tween="sine" easing="out">200</scrolltime>
			<include content="CircleMenue-Layout">
				<description>Circle menue</description>
				<param name="CircleMenue-ID">9000</param>
			</include>
			<content>
				<item id="21">
					<description>Abspielen/oeffnen</description>
					<label></label>
					<label2>v</label2>
					<onclick>Dialog.close(all)</onclick>
					<onclick>SendClick(2003,8)</onclick>
					<visible>!Window.IsVisible(Custom_1154_VideoFakeOverlay.xml)</visible>
				</item>
				<item id="23">
					<description>Trailer</description>
					<label></label>
					<label2>ħ</label2>
					<onclick>Dialog.close(all)</onclick>
					<onclick>SetFocus(502)</onclick>
					<onclick>SetProperty(Trailerpreview,$INFO[ListItem.Trailer],home)</onclick>
					<onclick>PlayMedia($INFO[ListItem.Trailer],1)</onclick>
					<visible>!Window.IsVisible(Custom_1154_VideoFakeOverlay.xml) + String.IsEqual(ListItem.DBType,movie) + !String.IsEmpty(ListItem.Trailer)</visible>
				</item>
				<item id="24">
					<description>Artworks holen</description>
					<label></label>
					<label2>À</label2>
					<onclick>Skin.SetString(SelectDialog,Standard)</onclick>
					<onclick>SendClick(2003,10)</onclick>
					<visible>!Window.IsVisible(Custom_1154_VideoFakeOverlay.xml) + Control.IsEnabled(10) + !String.IsEmpty(ListItem.DBTYPE)</visible>
				</item>
				<item id="25">
					<description>Userrating</description>
					<label></label>
					<label2>Ċ</label2>
					<onclick>Skin.SetString(SelectDialog,Rating)</onclick>
					<onclick>SendClick(2003,7)</onclick>
					<visible>!String.IsEmpty(ListItem.DBTYPE)</visible>
				</item>
				<item id="34">
					<description>Refresh bei OSD Info</description>
					<label></label>
					<label2>i</label2>
					<onclick>Skin.SetString(SelectDialog,standard)</onclick>
					<onclick>SendClick(2003,6)</onclick>
					<visible>[Window.IsVisible(Custom_1154_VideoFakeOverlay.xml) + !String.IsEmpty(ListItem.DBTYPE)] | String.IsEmpty(ListItem.Trailer)</visible>
				</item>
			</content>
		</control>
		<control type="group"><!-- Art -->
			<description>Poster</description>
			<left>206</left>
			<top>119</top>
			<control type="image">
				<description>Schatten</description>
				<left>-13</left>
				<top>-13</top>
				<width>598</width>
				<height>867</height>
				<texture border="8" colordiffuse="ShadowColor">views/shadow8.png</texture>
			</control>
			<control type="image">
				<description>Border</description>
				<left>-5</left>
				<top>-5</top>
				<width>582</width>
				<height>851</height>
				<texture border="8" colordiffuse="$VAR[CirclesCol]">views/white8.png</texture>
			</control>
			<control type="image"><!-- Fallback -->
				<description>Hintergrundfarbe</description>
				<width>572</width>
				<height>841</height>
				<texture background="true" colordiffuse="$VAR[PrimaryCol]">white.png</texture>
			</control>
			<control type="label">
				<description>Fallback icon</description>
				<width>572</width>
				<height>641</height>
				<align>center</align>
				<textcolor>$VAR[CirclesCol]</textcolor>
				<font>IconInfoposterdefault</font>
				<label>$VAR[Art-Fallback]</label>
			</control>
			<control type="image"><!-- Art -->
				<description>Art</description>
				<width>572</width>
				<height>841</height>
				<texture background="true">$VAR[Art-Info-Poster]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<include content="VintageOldpaper-Overlay" condition="Skin.HasSetting(EnableVintageOverlay)"><!-- Vintage overlay -->
				<param name="width">572</param>
				<param name="height">841</param>
				<param name="texture">views/oldpaperoverlay2.png</param>
			</include>
			<control type="image">
				<description>Hintergrund Episodennummer</description>
				<left>492</left>
				<top>20</top>
				<width>130</width>
				<height>130</height>
				<texture colordiffuse="$VAR[PrimaryCol]" border="0,0,14,0" flipx="true">cycle/right-11_number.png</texture>
				<visible>String.IsEqual(ListItem.DBType,episode)</visible>
			</control>
			<control type="label">
				<description>Episodennummer</description>
				<left>492</left>
				<top>20</top>
				<width>130</width>
				<height>110</height>
				<align>center</align>
				<label>$VAR[EpisodePrefix-short]</label>
				<textcolor>TextColorFO</textcolor>
				<font>EpisodeNumber</font>
				<visible>String.IsEqual(ListItem.DBType,episode)</visible>
			</control>
			<control type="image"><!-- show status next aired -->
				<left>540</left>
				<top>310</top>
				<width>50</width>
				<height>60</height>
				<texture border="0,0,14,0" colordiffuse="$VAR[PrimaryCol]">cycle/right-11.png</texture>
				<visible>!String.IsEmpty(Window(Home).Property(NextAired.StatusID)) + [String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,Season) | String.IsEqual(ListItem.DBType,episode)]</visible>
			</control>
			<control type="label">
				<left>540</left>
				<top>320</top>
				<width>50</width>
				<height>50</height>
				<font>IconOverlay</font>
				<include>WatchedOverlay-Layout</include>
				<label>$VAR[ShowStatus-Overlay]</label>
				<visible>!String.IsEmpty(Window(Home).Property(NextAired.StatusID)) + [String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,Season) | String.IsEqual(ListItem.DBType,episode)]</visible>
			</control>
			<control type="group"><!-- Media Overlay -->
				<description>Media Overlay - neu, angefangene usw.</description>
				<visible>$EXP[VisVideoOverlays]</visible>
				<control type="image">
					<left>-12</left>
					<top>-12</top>
					<width>96</width>
					<height>96</height>
					<texture flipx="true" colordiffuse="$VAR[PrimaryCol]">flagging/watched_bg.png</texture>
				</control>
				<control type="label">
					<left>-8</left>
					<top>-12</top>
					<width>96</width>
					<height>45</height>
					<align>left</align><!-- include ueberschreibung -->
					<label>$VAR[WatchedOverlay]</label>
					<include>WatchedOverlay-Layout</include>
					<font>IconOverlayBig</font>
				</control>
			</control>
			<control type="group"><!-- IMDB Top250 -->
				<left>500</left>
				<visible>String.IsEqual(ListItem.DBType,movie) + !String.IsEmpty(ListItem.Top250)</visible>
				<width>200</width>
				<control type="image">
					<left>-12</left>
					<top>-12</top>
					<width>96</width>
					<height>96</height>
					<texture colordiffuse="$VAR[PrimaryCol]">flagging/watched_bg.png</texture>
					<visible>$EXP[VisNoDefaultIcon]</visible>
				</control>
				<control type="image">
					<left>-12</left>
					<top>-12</top>
					<width>96</width>
					<height>96</height>
					<texture colordiffuse="$VAR[SecondaryCol]">flagging/watched_bg.png</texture>
					<visible>String.StartsWith(ListItem.Icon,Default)</visible>
				</control>
				<control type="label">
					<left>35</left>
					<top>-12</top>
					<width>60</width>
					<height>96</height>
					<include>WatchedOverlay-Layout</include>
					<font>IconNormal</font>
					<label>I</label>
				</control>
				<control type="label">
					<left>10</left>
					<top>-22</top>
					<width>70</width>
					<height>50</height>
					<align>right</align><!-- include ueberschreibung align -->
					<font>BoldCDSmall</font>
					<include>WatchedOverlay-Layout</include>
					<label>$INFO[ListItem.Top250]</label>
				</control>
			</control>
			<control type="group"><!-- rating -->
				<left>222</left>
				<top>817</top>
				<description>Media Overlay rating</description>
				<include>StarRating-bg</include>
				<control type="label"><!-- -19 -->
					<label>$VAR[StarRatingback]</label>
					<include>StarRating-Layoutback</include>
				</control>
				<control type="label"><!-- -19 -->
					<label>$VAR[StarRating]</label>
					<include>StarRating-Layoutfront</include>
				</control>
			</control>
		</control>
		<control type="group"><!-- Poster Circleinfo 524 a 131 -->
			<description>Circleinfos auf Poster</description>
			<left>175</left>
			<top>608</top>
			<control type="image">
				<width>70</width>
				<height>125</height>
				<texture colordiffuse="$VAR[CirclesCol]">circles/posterinfoleft.png</texture>
			</control>
			<include content="CircleFlag-Kringel">
				<description>Circle 1 Episodenanzahl bei Serien</description>
				<param name="CircleFlag-Label">$INFO[ListItem.Property(NumEpisodes)]</param>
				<param name="CircleFlag-Inner">circles/circleepisodein.png</param>
				<param name="CircleFlag-Outer">circles/circleepisodeout.png</param>
				<param name="CircleFlag-Visible">String.IsEqual(ListItem.DBType,tvshow)</param>
				<param name="CircleFlag-Left">40</param>
			</include>
			<include content="CircleFlag-Kringel">
				<description>Circle 1 Dauer bei Episoden und Filmen</description>
				<param name="CircleFlag-Label">$INFO[ListItem.Duration]</param>
				<param name="CircleFlag-Inner">circles/circledurationin.png</param>
				<param name="CircleFlag-Outer">circles/circledurationout.png</param>
				<param name="CircleFlag-Visible">String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,episode)</param>
				<param name="CircleFlag-Left">40</param>
			</include>
			<control type="image">
				<description>Fallback DBType empty</description>
				<left>40</left>
				<width>130</width>
				<height>125</height>
				<texture colordiffuse="$VAR[CirclesCol]">circles/circledivider50.png</texture>
				<visible>String.IsEmpty(ListItem.DBType)</visible>
			</control>
			<include content="CircleFlag-Kringel">
				<description>Circle 2 Rating bei allen</description>
				<param name="CircleFlag-Label">$VAR[FlagLabel-Rating]</param>
				<param name="CircleFlag-Inner">circles/circleratingin.png</param>
				<param name="CircleFlag-Outer">circles/circleratingout.png</param>
				<param name="CircleFlag-Visible">true</param>
				<param name="CircleFlag-Left">170</param>
			</include>
			<include content="CircleFlag-Kringel">
				<description>Circle 3 User rating bei allen</description>
				<param name="CircleFlag-Label">$VAR[FlagLabel-UserRating]</param>
				<param name="CircleFlag-Inner">circles/circleuserratingin.png</param>
				<param name="CircleFlag-Outer">circles/circleuserratingout.png</param>
				<param name="CircleFlag-Visible">true</param>
				<param name="CircleFlag-Left">300</param>
			</include>
			<include content="CircleFlag-Kringel">
				<description>Circle 4 MPAA bei allen</description>
				<param name="CircleFlag-Label">$VAR[FlagLabel-MPAA]</param>
				<param name="CircleFlag-Inner">circles/circlempaain.png</param>
				<param name="CircleFlag-Outer">circles/circlempaaout.png</param>
				<param name="CircleFlag-Visible">true</param>
				<param name="CircleFlag-Left">430</param>
			</include>
			<control type="image">
				<left>561</left>
				<width>70</width>
				<height>125</height>
				<texture colordiffuse="$VAR[CirclesCol]">circles/posterinforight.png</texture>
			</control>
		</control>
		<control type="group"><!-- Info -->
			<left>880</left>
			<top>105</top>
			<control type="label">
				<description>Titel</description>
				<width>900</width>
				<height>60</height>
				<include>GlobalScroll</include>
				<font>TitleCapsBig</font>
				<label>$VAR[Info-Title]</label>
			</control>
			<control type="textbox" id="9005">
				<description>Beschreibung</description>
				<top>96</top>
				<width>850</width>
				<height max="222">auto</height>
				<font>Plot</font>
				<label fallback="Kein Überblick gefunden">$INFO[ListItem.Tagline,[B],[/B][CR]]$INFO[ListItem.Plot]</label>
			</control>
			<control type="label">
				<description>Genre</description>
				<top>330</top>
				<width>850</width>
				<height>60</height>
				<font>SubTitleCapsBold</font>
				<wrapmultiline>true</wrapmultiline>
				<label fallback="Kein Genre gefunden">$INFO[ListItem.Genre]</label>
				<visible>!String.IsEqual(ListItem.DBType,episode)</visible>
			</control>
			<control type="grouplist">
				<description>Bei Episoden Erste Zeile statt Genre - Staffel und Last Played</description>
				<top>340</top>
				<width>900</width>
				<height>100</height>
				<itemgap>20</itemgap>
				<orientation>horizontal</orientation>
				<visible>String.IsEqual(ListItem.DBType,episode) + !String.IsEmpty(ListItem.Season)</visible>
				<control type="label">
					<width>auto</width>
					<height>50</height>
					<font>SubTitleCapsNormal</font>
					<textcolor>TextColorMedium</textcolor>
					<label>Staffel</label>
				</control>
				<control type="label" id="2009">
					<width>auto</width>
					<height>50</height>
					<font>SubTitleCapsBold</font>
					<label>$VAR[SeasonPrefix]</label>
				</control>
			</control>
			<control type="grouplist">
				<description>Bei Episoden Erste Zeile statt Genre - Staffel und Last Played</description>
				<left>480</left>
				<top>340</top>
				<width>900</width>
				<height>100</height>
				<itemgap>20</itemgap>
				<orientation>horizontal</orientation>
				<animation type="Conditional" condition="String.IsEmpty(ListItem.Season)"><!-- Slide nach links wenn keine staffel -->
					<effect type="slide" start="0,0" end="-480,0" time="0" />
				</animation>
				<visible>String.IsEqual(ListItem.DBType,episode) + !String.IsEmpty(ListItem.LastPlayed)</visible>
				<control type="label">
					<width>auto</width>
					<height>50</height>
					<font>SubTitleCapsNormal</font>
					<textcolor>TextColorMedium</textcolor>
					<label>Gesehen</label>
				</control>
				<control type="label" id="5011">
					<description>Hiddenlabel lastwatched vergeichslabel datum</description>
					<label>$INFO[System.Date(dd)].$INFO[System.Date(mm)].$INFO[System.Date(yyyy)]</label>
					<include>HiddenControl</include>
				</control>
				<control type="label">
					<width>auto</width>
					<height>50</height>
					<font>SubTitleCapsBold</font>
					<label>$VAR[Info-LastPlayed]</label>
				</control>
			</control>
		</control>
		<control type="group">
			<description>Drehbuch bei Film und Episode</description>
			<left>880</left>
			<top>830</top>
			<visible>String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie)</visible>
			<control type="label">
				<include>InfoDetails-Title</include>
				<label>Drehbuch</label>
			</control>
			<control type="label">
				<include>InfoDetails-Label</include>
				<label fallback="nicht verfügbar">$INFO[ListItem.Writer]</label>
			</control>
		</control>
		<control type="group">
			<description>Regie bei Film und Episode</description>
			<left>1360</left>
			<top>830</top>
			<visible>String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie)</visible>
			<control type="label">
				<include>InfoDetails-Title</include>
				<label>Regie</label>
			</control>
			<control type="label">
				<include>InfoDetails-Label</include>
				<label fallback="nicht verfügbar">$INFO[ListItem.Director]</label>
			</control>
		</control>
		<control type="group">
			<description>Studio bei bei Serie statt Drehbuch</description>
			<left>880</left>
			<top>830</top>
			<visible>String.IsEqual(ListItem.DBType,tvshow)</visible>
			<control type="label">
				<include>InfoDetails-Title</include>
				<label>Studio</label>
			</control>
			<control type="label">
				<include>InfoDetails-Label</include>
				<label fallback="nicht verfügbar">$INFO[ListItem.Studio]</label>
			</control>
		</control>
		<control type="group">
			<description>Zuletzt gesehene serie statt regie</description>
			<left>1360</left>
			<top>830</top>
			<visible>String.IsEqual(ListItem.DBType,tvshow)</visible>
			<control type="label">
				<include>InfoDetails-Title</include>
				<label>Zuletzt Gesehen</label>
				<visible>!String.StartsWith(Control.GetLabel(5126),xxx)</visible>
			</control>
			<control type="label">
				<include>InfoDetails-Title</include>
				<label>$VAR[VideoDatePrefix]</label>
				<visible>String.StartsWith(Control.GetLabel(5126),xxx)</visible>
			</control>
			<control type="label" id="5126">
				<include>InfoDetails-Label</include>
				<label>$VAR[Lastwatched-Label]</label>
				<visible>!String.StartsWith(Control.GetLabel(5126),xxx)</visible>
			</control>
			<control type="label">
				<include>InfoDetails-Label</include>
				<label>$VAR[VideoDate]</label>
				<visible>String.StartsWith(Control.GetLabel(5126),xxx)</visible>
			</control>
		</control>
		<control type="label"><!-- textbox icon -->
			<left>1750</left>
			<top>190</top>
			<height>50</height>
			<width>80</width>
			<label>o</label>
			<align>center</align>
			<textcolor>TextColorLight</textcolor>
			<font>IconPlotzoom</font>
			<visible>!String.Contains(Control.GetLabel(9005),Kein Überblick gefunden)</visible>
			<visible>Control.HasFocus(9000) + !Control.HasFocus(9001) + String.IsEmpty(Window(home).Property(AniSlideR))</visible>
		</control>
		<include>Flagbar-Video</include><!-- Flags -->
	</control>
	<control type="group"><!-- Linke Seite Fanart Slideshow -->
		<left>-1920</left>
		<top>119</top>
		<visible>Control.HasFocus(9331)</visible>
		<animation type="WindowOpen" reversible="false">
			<effect type="fade" start="0" end="100" delay="200" time="350" tween="cubic" easing="inout" />
			<effect type="zoom" start="70" end="100" center="960,540" delay="200" time="350" tween="cubic" easing="inout"/>
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="fade"start="100" end="0" time="250" tween="cubic" easing="inout" />
			<effect type="zoom"start="100" end="70" center="960,540" time="250" tween="cubic" easing="inout"/>
		</animation>
		<animation effect="slide" start="0" end="1920" time="300" condition="!String.IsEmpty(Window(home).Property(AniSlideL))">Conditional</animation>
		<control type="group">
			<left>220</left>
			<animation type="Conditional" condition="Window.IsVisible(shutdownmenu)">
				<effect type="slide" start="0,0" end="230,0" time="120" />
			</animation>
			<control type="label">
				<description>Pfad</description>
				<top>-70</top>
				<width>880</width>
				<height>66</height>
				<font>BoldCDNormal</font>
				<label>$INFO[ListItem.Path]</label>
				<visible>!String.IsEmpty(ListItem.Path)</visible>
			</control>
			<control type="image"><!-- Art -->
				<description>Border</description>
				<left>-5</left>
				<top>-5</top>
				<width>1505</width>
				<height>851</height>
				<texture border="8" colordiffuse="$VAR[CirclesCol]">views/white8.png</texture>
			</control>
			<control type="image">
				<description>Hintergrundfarbe</description>
				<width>1495</width>
				<height>841</height>
				<texture colordiffuse="$VAR[PrimaryCol]">white.png</texture>
			</control>
			<control type="label">
				<description>Fallback icon</description>
				<width>1495</width>
				<height>841</height>
				<align>center</align>
				<textcolor>$VAR[CirclesCol]</textcolor>
				<font>IconInfoActordefaultFO</font>
				<label>$VAR[Art-Fallback]</label>
				<visible>!String.IsEmpty(ListItem.Art(fanart))</visible>
			</control>
			<control type="label">
				<description>Fallback</description>
				<top>600</top>
				<width>1495</width>
				<height>251</height>
				<align>center</align>
				<font>BoldCDNormal</font>
				<label>Kein Fanart oder Extrafanart verfügbar!</label>
				<textcolor>TextColorFO</textcolor>
				<visible>!String.IsEmpty(ListItem.Art(fanart))</visible>
			</control>
			<control type="multiimage" id="2222">
				<description>Multi Art</description>
				<width>1495</width>
				<height>841</height>
				<timeperimage>2500</timeperimage>
				<randomize>true</randomize>
				<fadetime>800</fadetime>
				<imagepath>$INFO[ListItem.FilenameandPath,,extrafanart]</imagepath>
				<visible>String.IsEqual(ListItem.DBType,tvshow)</visible>
			</control>
			<control type="image">
				<description>Fanart wenn multi leer</description>
				<width>1495</width>
				<height>841</height>
				<texture background="true">$INFO[ListItem.Art(fanart)]</texture>
				<aspectratio>scale</aspectratio>
				<visible>!String.IsEmpty(ListItem.Art(fanart)) | !String.IsEmpty(Control.GetLabel(2222))</visible>
				<visible>String.IsEqual(ListItem.DBType,tvshow)</visible>
			</control>
			<control type="multiimage" id="2223">
				<description>Multi Art</description>
				<width>1495</width>
				<height>841</height>
				<timeperimage>2500</timeperimage>
				<randomize>true</randomize>
				<fadetime>800</fadetime>
				<imagepath>$INFO[ListItem.Path,,../extrafanart]</imagepath>
				<visible>String.IsEqual(ListItem.DBType,episode)</visible>
			</control>
			<control type="image">
				<description>Fanart wenn multi leer</description>
				<width>1495</width>
				<height>841</height>
				<texture background="true">$INFO[ListItem.Art(fanart)]</texture>
				<aspectratio>scale</aspectratio>
				<visible>!String.IsEmpty(ListItem.Art(fanart)) | !String.IsEmpty(Control.GetLabel(2223))</visible>
				<visible>String.IsEqual(ListItem.DBType,episode)</visible>
			</control>
			<control type="multiimage" id="2224">
				<description>Multi Art</description>
				<width>1495</width>
				<height>841</height>
				<timeperimage>2500</timeperimage>
				<randomize>true</randomize>
				<fadetime>800</fadetime>
				<imagepath>$INFO[ListItem.Path,,extrafanart]</imagepath>
				<visible>String.IsEqual(ListItem.DBType,movie)</visible>
			</control>
			<control type="image">
				<description>Fanart wenn multi leer</description>
				<width>1495</width>
				<height>841</height>
				<texture background="true">$INFO[ListItem.Art(fanart)]</texture>
				<aspectratio>scale</aspectratio>
				<visible>!String.IsEmpty(ListItem.Art(fanart)) | !String.IsEmpty(Control.GetLabel(2224))</visible>
				<visible>String.IsEqual(ListItem.DBType,movie)</visible>
			</control>
			<control type="wraplist" id="5001">
				<description>Slideinfo links unter Fanart mit Infos zur Serie, Film der Episode</description>
				<left>10</left>
				<top>850</top>
				<width>1760</width>
				<height>80</height>
				<autoscroll time="4500" delay="6000" repeat="6000">Control.HasFocus(9331)</autoscroll>
				<include>InfoScrolltime</include>
				<viewtype>list</viewtype>
				<itemlayout width="1760" height="80">
					<control type="label">
						<width>1760</width>
						<height>84</height>
						<font>BoldCDNormal</font>
						<label>$INFO[ListItem.Label]</label>
					</control>
				</itemlayout>
				<focusedlayout width="1760" height="80">
					<control type="label">
						<width>1760</width>
						<height>84</height>
						<font>BoldCDNormal</font>
						<label>$INFO[ListItem.Label]</label>
					</control>
				</focusedlayout>
					<content>
						<item id="1">
							<label>TV-Serie $INFO[ListItem.TVShowTitle]$INFO[ListItem.Year, aus dem Jahr ,]</label>
							<onclick>noop</onclick>
							<visible>String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,episode)</visible>
						</item>
						<item id="2">
							<label>$INFO[ListItem.Title] - $INFO[ListItem.Genre]$INFO[ListItem.Year, aus dem Jahr ,]</label>
							<onclick>noop</onclick>
							<visible>String.IsEqual(ListItem.DBType,movie)</visible>
						</item>
						<item id="3">
							<label>$INFO[ListItem.Property(NumEpisodes),(, Episoden vorhanden)]</label>
							<onclick>noop</onclick>
							<visible>String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season)</visible>
						</item>
						<item id="4">
							<label>in die Datenbank aufgenommen am: $INFO[ListItem.DateAdded]</label>
							<onclick>noop</onclick>
							<visible>!String.IsEmpty(ListItem.DateAdded)</visible>
						</item>
						<item id="5">
							<label>$INFO[ListItem.RatingAndVotes,Bewertung: ,]</label>
							<onclick>noop</onclick>
							<visible>String.IsEqual(ListItem.DBType,movie) + !String.IsEmpty(ListItem.RatingAndVotes)</visible>
						</item>
						<item id="6">
							<label>$INFO[ListItem.Rating,Bewertung: ,]</label>
							<onclick>noop</onclick>
							<visible>[String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,episode)] + !String.IsEmpty(ListItem.Rating)</visible>
						</item>
						<item id="7">
							<label>$INFO[ListItem.Userrating,Eigene Wertung: ,]</label>
							<onclick>noop</onclick>
							<visible>[String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,episode)] + !String.IsEmpty(ListItem.Userrating)</visible>
						</item>
						<item id="8">
							<label>mit $INFO[Container(50).ListItem.Label], $INFO[Container(50).ListItem(1).Label], $INFO[Container(50).ListItem(2).Label]</label>
							<onclick>noop</onclick>
							<visible>!String.IsEmpty(Container(50).ListItem.Label)</visible>
						</item>
						<item id="11">
							<label>und $INFO[Container(50).ListItem(3).Label], $INFO[Container(50).ListItem(4).Label], $INFO[Container(50).ListItem(5).Label]</label>
							<onclick>noop</onclick>
							<visible>!String.IsEmpty(Container(50).ListItem(3).Label)</visible>
						</item>
					</content>
			</control>
		</control>
	</control>
	<control type="group"><!-- Rechte Seite - Darsteller, aehnliche Filme -->
		<description>Rechte Seite - Darsteller, aehnliche Filme, Library Editor</description>
		<left>1920</left>
		<top>119</top>
		<animation effect="slide" end="-1920" time="300" condition="!String.IsEmpty(Window(home).Property(AniSlideR))">Conditional</animation>
		<animation type="WindowOpen" reversible="false">
			<effect type="fade" start="0" end="100" delay="200" time="350" tween="cubic" easing="inout" />
			<effect type="zoom" start="70" end="100" center="2880,540" delay="200" time="350" tween="cubic" easing="inout"/>
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="fade" start="100" end="0" time="250" tween="cubic" easing="inout" />
			<effect type="zoom" start="100" end="70" center="2880,540" time="250" tween="cubic" easing="inout"/>
		</animation>
		<control type="list" id="9001"><!-- Menue -->
			<description>Menue2</description>
			<left>860</left>
			<top>594</top>
			<width>1100</width>
			<height>152</height>
			<onleft>ClearProperty(AniSlideR,home)</onleft><!-- Property Clear für Animation zurueck zur Hauptseite -->
			<onleft>Skin.SetString(SelectDialog,Standard)</onleft><!-- Select Dialog auf Standard -->
			<onleft>ClearProperty(AniSimilarFocus,home)</onleft>
			<onleft>9000</onleft>
			<onup condition="String.IsEmpty(Window(home).Property(AniSimilarFocus))">Skin.SetString(SelectDialog,Actor)</onup><!-- Focus und string fuer Select Dialog Darsteller -->
			<onup condition="String.IsEmpty(Window(home).Property(AniSimilarFocus))">50</onup>
			<onup condition="!String.IsEmpty(Window(home).Property(AniSimilarFocus))">SetFocus(501)</onup><!-- Focus Similar -->
			<ondown>close</ondown>
			<scrolltime tween="sine" easing="out">200</scrolltime>
			<orientation>horizontal</orientation>
			<include content="CircleMenue-Layout">
				<description>Circle menue</description>
				<param name="CircleMenue-ID">9001</param>
			</include>
			<content>
				<item id="32">
					<description>Artwork.downloader</description>
					<label></label>
					<label2>y</label2>
					<onclick condition="String.IsEqual(ListItem.DBType,tvshow)">XBMC.RunScript(script.artwork.downloader, mode=gui, mediatype=tvshow, dbid=$INFO[ListItem.DBID])</onclick>
					<onclick condition="String.IsEqual(ListItem.DBType,movie)">XBMC.RunScript(script.artwork.downloader, mode=gui, mediatype=movie, dbid=$INFO[ListItem.DBID])</onclick>
					<visible>!Window.IsVisible(Custom_1154_VideoFakeOverlay.xml) + System.HasAddon(script.artwork.downloader) + [String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,movie)]</visible>
				</item>
				<item id="34">
					<description>Refresh bei nicht osd info</description>
					<label></label>
					<label2>i</label2>
					<onclick>Skin.SetString(SelectDialog,standard)</onclick>
					<onclick>SendClick(2003,6)</onclick>
					<visible>![Window.IsVisible(Custom_1154_VideoFakeOverlay.xml) | String.IsEmpty(ListItem.Trailer)] + !String.IsEmpty(ListItem.DBTYPE)</visible>
				</item>
				<item id="35">
					<description>Similar</description>
					<label></label>
					<label2>h</label2>
					<onclick>SetProperty(AniSimilarFocus,ON,home)</onclick>
					<onclick>SetFocus(501)</onclick>
					<visible>!String.IsEmpty(Container(501).ListItem.Label) + !String.IsEmpty(Container(50).ListItem.label)</visible>
				</item>
				<item id="36">
					<description>Filme des Regisseurs</description>
					<label></label>
					<label2>J</label2>
					<onclick>Skin.SetString(SelectDialog,Actor)</onclick>
					<onclick>SetProperty(Sectecdialogtitle,Regie: $INFO[ListItem.Director],Home)</onclick>
					<onclick>SendClick(2003,13)</onclick>
					<visible>Control.IsEnabled(13) + ![String.IsEmpty(ListItem.Director) | String.Contains(ListItem.Director,/)]</visible><!-- chech schraegstriche -->
				</item>
			</content>
		</control>
		<control type="group"><!-- Poster Cast -->
			<left>206</left>
			<visible>String.IsEmpty(Window(home).Property(AniSimilarFocus)) + !String.IsEmpty(Container(50).ListItem.label)</visible><!-- An wenn Similar aus -->
			<control type="image">
				<description>Schatten</description>
				<left>-13</left>
				<top>-13</top>
				<width>598</width>
				<height>867</height>
				<texture border="8" colordiffuse="ShadowColor">views/shadow8.png</texture>
			</control>
			<control type="image">
				<description>Border</description>
				<left>-5</left>
				<top>-5</top>
				<width>582</width>
				<height>851</height>
				<texture border="8" colordiffuse="$VAR[CirclesCol]">views/white8.png</texture>
			</control>
			<control type="image"><!-- Artwork -->
				<description>Hintergrundfarbe</description>
				<width>572</width>
				<height>841</height>
				<texture background="true" colordiffuse="$VAR[PrimaryCol]">white.png</texture>
			</control>
			<control type="label">
				<description>Fallback icon</description>
				<width>572</width>
				<height>841</height>
				<align>center</align>
				<textcolor>$VAR[CirclesCol]</textcolor>
				<font>IconInfoActordefaultFO</font>
				<label>C</label>
			</control>
			<control type="image">
				<description>Art</description>
				<width>572</width>
				<height>841</height>
				<texture diffuse="white.png">$INFO[Container(50).ListItem.Art(thumb)]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<include content="VintageOldpaper-Overlay" condition="Skin.HasSetting(EnableVintageOverlay)"><!-- Vintage overlay -->
				<param name="width">572</param>
				<param name="height">841</param>
				<param name="texture">views/oldpaperoverlay2.png</param>
			</include>
			<control type="image">
				<description>Titel background</description>
				<left>50</left>
				<top>763</top>
				<width>472</width>
				<height>112</height>
				<texture colordiffuse="$VAR[SecondaryCol]">cycle/categoriebg.png</texture>
			</control>
			<control type="label">
				<description>Titel</description>
				<left>70</left>
				<top>763</top>
				<width>412</width>
				<height>85</height>
				<align>center</align>
				<include>GlobalScroll</include>
				<textcolor>TextColorFO</textcolor>
				<wrapmultiline>true</wrapmultiline>
				<font>TitleCategory</font>
				<label>$INFO[Container(50).ListItem.Label][CR]$INFO[Container(50).ListItem.Label2,(,)]</label>
			</control>
		</control>
		<control type="group"><!-- Darstellerinfo -->
			<left>880</left>
			<top>160</top>
			<visible allowhiddenfocus="true">Integer.IsGreater(Container(50).NumItems,0) + !Control.HasFocus(501)</visible>
			<visible>!Window.IsActive(selectdialog)</visible>
			<animation type="Visible" reversible="false">
				<effect type="fade" start="0" end="100" time="200" />
			</animation>
			<animation type="Hidden" reversible="false">
				<effect type="fade" start="100" end="0" time="100" />
			</animation>
			<control type="group"><!-- Titel -->
				<top>-160</top>
				<visible>String.IsEmpty(Window(home).Property(AniSimilarFocus))</visible>
				<control type="label">
					<description>Titel</description>
					<width>850</width>
					<height>60</height>
					<textcolor>TextColorMedium</textcolor>
					<font>SubTitleCapsNormal</font>
					<label>Darsteller aus dem Film [B]$INFO[ListItem.Title][/B]</label>
					<visible>String.IsEqual(ListItem.DBType,movie)</visible>
				</control>
				<control type="label">
					<description>Titel bei serie</description>
					<width>850</width>
					<height>60</height>
					<textcolor>TextColorMedium</textcolor>
					<font>SubTitleCapsNormal</font>
					<label>Darsteller aus der Serie [B]$INFO[ListItem.TVShowTitle][/B]</label>
					<visible>String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season)</visible>
				</control>
				<control type="grouplist">
					<description>SubTitel bei episode</description>
					<top>65</top>
					<width>850</width>
					<height>60</height>
					<orientation>horizontal</orientation>
					<visible>String.IsEqual(ListItem.DBType,episode)</visible>
					<control type="label">
						<description>SubTitel episodennummer bei episode</description>
						<width>auto</width>
						<height>60</height>
						<label>$VAR[EpisodePrefix-long]</label>
					</control>
					<control type="label">
						<description>Enum</description>
						<width>auto</width>
						<height>60</height>
						<font>EnumRegularNormal</font>
						<label>$VAR[CustomEnumeration]</label>
					</control>
					<control type="label">
						<description>SubTitel bei episode</description>
						<width>auto</width>
						<height>60</height>
						<label>$INFO[ListItem.Title][COLOR=$VAR[SecondaryCol]]$VAR[PremieredShortLabel, (,)][/COLOR]</label>
					</control>
				</control>
			</control>
			<control type="list" id="50"><!-- Liste -->
				<description>Liste</description>
				<width>910</width>
				<height>300</height>
				<onleft>50</onleft>
				<onright>50</onright>
				<onup>noop</onup>
				<ondown>ClearProperty(Sectecdialogtitle,Home)</ondown>
				<ondown>9001</ondown>
				<onfocus>Skin.SetString(SelectDialog,Actor)</onfocus>
				<onfocus>SetProperty(Sectecdialogtitle,Darsteller,Home)</onfocus>
				<orientation>horizontal</orientation>
				<visible>!Window.IsActive(selectdialog)</visible>
				<visible>String.IsEmpty(Window(home).Property(AniSimilarFocus))</visible>
				<scrolltime tween="cubic" easing="inout">450</scrolltime>
				<animation type="Visible" reversible="false">
					<effect type="fade" start="0" end="100" delay="100" time="350" tween="cubic" easing="inout" />
				</animation>
				<animation type="Hidden" reversible="false">
					<effect type="fade" start="100" end="0" time="250" tween="cubic" easing="inout" />
				</animation>
				<itemlayout width="180" height="270">
					<control type="group">
						<left>33</left>
						<top>51</top>
						<control type="image">
							<description>Schatten</description>
							<left>-10</left>
							<top>-10</top>
							<width>172</width>
							<height>240</height>
							<texture border="8" colordiffuse="ShadowColor">views/shadow8.png</texture>
						</control>
						<control type="image">
							<description>Border</description>
							<left>-4</left>
							<top>-4</top>
							<width>158</width>
							<height>228</height>
							<texture border="8" colordiffuse="$VAR[CirclesCol]">views/white8.png</texture>
						</control>
						<control type="image"><!-- Fallback -->
							<description>Hintergrundfarbe</description>
							<width>150</width>
							<height>220</height>
							<texture colordiffuse="$VAR[PrimaryCol]">white.png</texture>
						</control>
						<control type="label">
							<description>Fallback icon</description>
							<width>150</width>
							<height>220</height>
							<align>center</align>
							<textcolor>$VAR[CirclesCol]</textcolor>
							<font>IconInfoActordefault</font>
							<label>C</label>
						</control>
						<control type="image">
							<description>Art</description>
							<width>150</width>
							<height>220</height>
							<texture background="true">$INFO[ListItem.Art(thumb)]</texture>
							<aspectratio aligny="top">scale</aspectratio>
						</control>
						<control type="image"><!-- Inaktiv overlay -->
							<width>150</width>
							<height>220</height>
							<texture colordiffuse="$VAR[InaktivImageCol]">white.png</texture>
						</control>
						<include content="VintageOldpaper-Overlay" condition="Skin.HasSetting(EnableVintageOverlay)"><!-- Vintage overlay -->
							<param name="width">150</param>
							<param name="height">220</param>
							<param name="texture">views/oldpaperoverlay2.png</param>
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="180" height="270">
					<control type="group">
						<left>33</left>
						<top>51</top>
						<animation effect="zoom" start="100" end="120" center="118,212" time="250">Focus</animation>
						<animation effect="zoom" start="120" center="118,212" time="100">UnFocus</animation>
						<control type="image">
							<description>Schatten</description>
							<left>-10</left>
							<top>-10</top>
							<width>172</width>
							<height>240</height>
							<texture border="8" colordiffuse="ShadowColor">views/shadow8.png</texture>
						</control>
						<control type="image">
							<description>Border</description>
							<left>-4</left>
							<top>-4</top>
							<width>158</width>
							<height>228</height>
							<texture border="8" colordiffuse="$VAR[CirclesCol]">views/white8.png</texture>
						</control>
						<control type="image"><!-- Fallback -->
							<description>Hintergrundfarbe</description>
							<width>150</width>
							<height>220</height>
							<texture colordiffuse="$VAR[PrimaryCol]">white.png</texture>
						</control>
						<control type="label">
							<description>Fallback icon</description>
							<width>150</width>
							<height>220</height>
							<align>center</align>
							<textcolor>$VAR[CirclesCol]</textcolor>
							<font>IconInfoActordefault</font>
							<label>C</label>
						</control>
						<control type="image">
							<description>Art</description>
							<width>150</width>
							<height>220</height>
							<texture background="true">$INFO[ListItem.Art(thumb)]</texture>
							<aspectratio aligny="top">scale</aspectratio>
						</control>
						<control type="image"><!-- Inaktiv overlay -->
							<width>150</width>
							<height>220</height>
							<texture colordiffuse="$VAR[InaktivImageCol]">white.png</texture>
							<include>Animation-Dim</include>
						</control>
						<include content="VintageOldpaper-Overlay" condition="Skin.HasSetting(EnableVintageOverlay)"><!-- Vintage overlay -->
							<param name="width">150</param>
							<param name="height">220</param>
							<param name="texture">views/oldpaperoverlay2.png</param>
						</include>
					</control>
				</focusedlayout>
			</control>
		</control>
		<control type="group"><!-- Poster Similar -->
			<left>206</left>
			<visible>!String.IsEmpty(Window(home).Property(AniSimilarFocus))</visible><!-- An wenn Similar aktiv -->
			<control type="image">
				<description>Schatten</description>
				<left>-13</left>
				<top>-13</top>
				<width>598</width>
				<height>867</height>
				<texture border="8" colordiffuse="ShadowColor">views/shadow8.png</texture>
			</control>
			<control type="image">
				<description>Border</description>
				<left>-5</left>
				<top>-5</top>
				<width>582</width>
				<height>851</height>
				<texture border="8" colordiffuse="$VAR[CirclesCol]">views/white8.png</texture>
			</control>
			<control type="image"><!-- Artwork -->
				<description>Hintergrundfarbe</description>
				<width>572</width>
				<height>841</height>
				<texture background="true" colordiffuse="$VAR[PrimaryCol]">white.png</texture>
			</control>
			<control type="label">
				<description>Fallback icon Serie</description>
				<width>572</width>
				<height>641</height>
				<align>center</align>
				<textcolor>$VAR[CirclesCol]</textcolor>
				<font>IconInfoposterdefault</font>
				<label>D</label>
				<visible>!String.IsEmpty(Container(501).ListItem.Tvshowtitle)</visible>
			</control>
			<control type="label">
				<description>Fallback icon Film</description>
				<width>572</width>
				<height>641</height>
				<align>center</align>
				<textcolor>$VAR[CirclesCol]</textcolor>
				<font>IconInfoposterdefault</font>
				<label>E</label>
				<visible>String.IsEmpty(Container(501).ListItem.Tvshowtitle)</visible>
			</control>
			<control type="image">
				<description>Art</description>
				<width>572</width>
				<height>841</height>
				<texture>$INFO[Container(501).ListItem.Icon]</texture>
				<aspectratio>scale</aspectratio>
				<fadetime>250</fadetime>
				<visible>!String.StartsWith(Container(501).ListItem.Icon,Default)</visible>
			</control>
			<include content="VintageOldpaper-Overlay" condition="Skin.HasSetting(EnableVintageOverlay)"><!-- Vintage overlay -->
				<param name="width">572</param>
				<param name="height">841</param>
				<param name="texture">views/oldpaperoverlay2.png</param>
			</include>
		</control>
		<control type="group"><!-- Aehnliche Filme und Serien -->
			<left>880</left>
			<visible allowhiddenfocus="true">Control.HasFocus(501) | String.IsEmpty(Container(50).ListItem.label)</visible>
			<include>Animation-OpenCloseVisibleHidden-Fade</include>
			<control type="label"><!-- Titel -->
				<description>Titel</description>
				<width>850</width>
				<height>60</height>
				<textcolor>TextColorMedium</textcolor>
				<font>SubTitleCapsNormal</font>
				<label>Empfehlungen aus der Kategorie [B]$VAR[Content-Similar-Label][/B]</label>
			</control>
			<control type="fixedlist" id="501"><!-- Liste -->
				<description>Empfehlungen Liste</description>
				<top>80</top>
				<height>465</height>
				<width>1600</width>
				<focusposition>0</focusposition>
				<onup>501</onup>
				<ondown>501</ondown>
				<onleft>SetFocus(9001)</onleft>
				<onleft condition="!String.IsEmpty(Container(50).ListItem.label)">ClearProperty(AniSimilarFocus,home)</onleft>
				<onright>SetFocus(9001)</onright>
				<onright condition="!String.IsEmpty(Container(50).ListItem.label)">ClearProperty(AniSimilarFocus,home)</onright>
				<visible allowhiddenfocus="true">Control.HasFocus(501) | String.IsEmpty(Container(50).ListItem.label)</visible>
				<viewtype>list</viewtype>
				<scrolltime>200</scrolltime>
				<itemlayout width="500" height="60">
					<control type="label">
						<left>90</left>
						<width>600</width>
						<height>80</height>
						<label>$INFO[ListItem.Label]</label>
					</control>
				</itemlayout>
				<focusedlayout width="1300" height="80">
					<control type="image">
						<left>50</left>
						<top>10</top>
						<width>1060</width>
						<height>60</height>
						<texture colordiffuse="$VAR[CirclesCol]">white.png</texture>
					</control>
					<control type="image">
						<width>82</width>
						<height>82</height>
						<texture colordiffuse="$VAR[PrimaryCol]">rings/sub-inner-ring.png</texture>
						<visible>Control.HasFocus(501)</visible>
					</control>
					<control type="image">
						<width>82</width>
						<height>82</height>
						<texture colordiffuse="$VAR[CirclesInnerCol]">rings/sub-inner-ring.png</texture>
						<visible>!Control.HasFocus(501)</visible>
					</control>
					<control type="label">
						<description>Fallback icon</description>
						<width>82</width>
						<height>82</height>
						<align>center</align>
						<textcolor>$VAR[CirclesCol]</textcolor>
						<font>IconBig</font>
						<label>$VAR[Art-Fallback]</label>
					</control>
					<control type="image">
						<width>82</width>
						<height>82</height>
						<texture colordiffuse="$VAR[CirclesCol]">rings/sub-outer-ring.png</texture>
					</control>
					<control type="label">
						<left>90</left>
						<width>670</width>
						<height>80</height>
						<textcolor>$VAR[PrimaryCol]</textcolor>
						<label>$INFO[ListItem.Label]$INFO[ListItem.Year, (,)]</label>
					</control>
				</focusedlayout>
				<content target="video">$VAR[Content-Similar]</content>
				<onclick>close</onclick>
				<onclick condition="String.IsEqual(ListItem.DBType,movie)">PlayMedia($ESCINFO[ListItemNoWrap.Path])</onclick>
				<onclick condition="String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season)">ActivateWindow(Videos,&quot;videodb://tvshows/titles/$INFO[ListItemNoWrap.DBID]/&quot;)</onclick>
			</control>
			<control type="label">
				<description>Icon mehr als eine seite</description>
				<left>950</left>
				<top>20</top>
				<width>80</width>
				<height>80</height>
				<font>IconBig</font>
				<label>*</label>
				<textcolor>TextColorMedium</textcolor>
				<visible>Container(501).HasPrevious + [!Container(501).OnPrevious + !Container(501).OnNext]</visible>
			</control>
		</control>
	</control>
</control>
	<control type="button" id="9331"><!-- links Slideshow focus -->
		<visible allowhiddenfocus="true">false</visible>
		<onclick>ClearProperty(AniSlideL,home)</onclick><!-- Property Clear für Animation zurueck zur Hauptseite -->
		<onclick>SetFocus(9000)</onclick>
		<onright>ClearProperty(AniSlideL,home)</onright>
		<onright>9000</onright>
		<ondown>close</ondown>
	</control>
<control type="group"><!-- bei addons ohne DBType nichts -->
	<visible>String.StartsWith(ListItem.Path,plugin:) + String.IsEmpty(ListItem.DBType)</visible>
	<include>UnfeaturedWindow</include>
</control>
</controls>
</window>