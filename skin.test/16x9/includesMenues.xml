<?xml version="1.0" encoding="UTF-8"?>
<includes><!-- Cycle 0.4 -->
	<!-- ######### Sideblade ######### -->
	<include name="Sideblade-Arrow">
		<top>480</top>
		<width>60</width>
		<height>128</height>
		<font></font>
		<texturefocus colordiffuse="$VAR[PrimaryCol]">views/blade.png</texturefocus>
		<texturenofocus colordiffuse="$VAR[PrimaryCol]">views/blade.png</texturenofocus>
	</include>
	<include name="Sideblade-NF"><!-- Sideblade indikator links -->
		<control type="group">
			<left>-5</left>
			<visible>![Window.IsVisible(Custom_1120_Options.xml) | Window.IsVisible(Custom_1141_ViewtypeSimilar.xml) | Window.IsVisible(contextmenu) | Window.IsVisible(shutdownmenu) | Window.IsVisible(favourites) | Window.IsVisible(playercontrols)]</visible>
			<include>Animation-OpenClose-Fade</include>
			<control type="button" id="9001">
				<include>Sideblade-Arrow</include>
				<onclick>ActivateWindow(1120)</onclick>
			</control>
			<control type="label">
				<description>Arrow</description>
				<left>3</left>
				<top>492</top>
				<width>60</width>
				<height>100</height>
				<font>IconSideblade</font>
				<label>#</label>
				<include>SidebarIcon-ColorFO</include>
			</control>
		</control>
	</include>
	<include name="Sideblade-FO"><!-- Sideblade indikator mit ausgefahrener Sidebar -->
		<control type="group">
			<description>Nach unten bevor Uberschneidung des Buttons bei der Naviagation</description>
			<left>416</left>
			<visible>ControlGroup(9110).HasFocus</visible>
			<animation type="Conditional" condition="String.IsEqual(Container(9110).CurrentItem,5)">
				<effect type="slide" start="0,0" end="0,60" time="120" />
			</animation>
			<animation type="Conditional" condition="String.IsEqual(Container(9110).CurrentItem,6)">
				<effect type="slide" start="0,0" end="0,120" time="120" />
			</animation>
			<animation type="Conditional" condition="String.IsEqual(Container(9110).CurrentItem,7)">
				<effect type="slide" start="0,0" end="0,180" time="120" />
			</animation>
			<animation type="Conditional" condition="String.IsEqual(Container(9110).CurrentItem,8)">
				<effect type="slide" start="0,0" end="0,240" time="120" />
			</animation>
			<animation type="Conditional" condition="String.IsEqual(Container(9110).CurrentItem,9)">
				<effect type="slide" start="0,0" end="0,300" time="120" />
			</animation>
			<animation type="Conditional" condition="String.IsEqual(Container(9110).CurrentItem,10)">
				<effect type="slide" start="0,0" end="0,360" time="120" />
			</animation>
			<animation type="Conditional" condition="String.IsEqual(Container(9110).CurrentItem,11)">
				<effect type="slide" start="0,0" end="0,420" time="120" />
			</animation>
			<animation type="Conditional" condition="String.IsEqual(Container(9110).CurrentItem,12)">
				<effect type="slide" start="0,0" end="0,480" time="120" />
			</animation>
			<control type="button" id="9001">
				<include>Sideblade-Arrow</include>
				<onclick>SetFocus(50)</onclick>
			</control>
			<control type="label">
				<description>Arrow</description>
				<left>3</left>
				<top>492</top>
				<width>60</width>
				<height>100</height>
				<font>IconSideblade</font>
				<label>#</label>
				<include>SidebarIcon-ColorFO</include>
			</control>
		</control>
	</include>
	<include name="Sideblade-BG"><!-- Sideblade hintergrund -->
		<control type="image">
			<description>Hintergrund</description>
			<width>430</width>
			<height>1080</height>
			<texture background="true" colordiffuse="$VAR[DialogCol]">white.png</texture>
		</control>
	</include>
	<include name="Sideblade-IconBG"><!-- Sideblade icon hintergrund -->
		<control type="image">
			<description>Iconhintergrund</description>
			<width>100</width>
			<height>1080</height>
			<texture background="true" colordiffuse="black">white.png</texture>
		</control>
	</include>
	<include name="Sideblade-ContainerLayout"><!-- Sideblade ContainerLayout -->
		<description>liste</description>
		<top>200</top>
		<width>375</width>
		<height>590</height>
		<onleft>Dialog.Close(all)</onleft>
		<onright>Dialog.Close(all)</onright>
		<scrolltime>200</scrolltime>
		<focusposition>3</focusposition>
		<itemlayout width="375" height="70">
			<control type="label">
				<width>100</width>
				<height>70</height>
				<textoffsetx>0</textoffsetx>
				<aligny>center</aligny>
				<align>center</align>
				<font>IconSidebarDimension</font>
				<textcolor>TextColorLight</textcolor>
				<label>$INFO[ListItem.Label2]</label>
			</control>
			<control type="label">
				<left>120</left>
				<height>70</height>
				<include>Homeblade-LabelDimension</include>
			</control>
		</itemlayout>
		<focusedlayout width="375" height="70">
			<control type="image">
				<left>100</left>
				<width>10</width>
				<height>70</height>
				<texture colordiffuse="$VAR[PrimaryCol]">white.png</texture>
				<visible>Control.HasFocus(8100)</visible>
			</control>
			<control type="label">
				<width>100</width>
				<height>70</height>
				<textoffsetx>0</textoffsetx>
				<aligny>center</aligny>
				<align>center</align>
				<font>IconSidebarDimension</font>
				<textcolor>$VAR[PrimaryCol]</textcolor>
				<label>$INFO[ListItem.Label2]</label>
			</control>
			<control type="label">
				<left>120</left>
				<height>70</height>
				<textcolor>$VAR[PrimaryCol]</textcolor>
				<include>Homeblade-LabelDimension</include>
				<visible>Control.HasFocus(8100)</visible>
			</control>
			<control type="label">
				<left>120</left>
				<height>70</height>
				<include>Homeblade-LabelDimension</include>
				<visible>!Control.HasFocus(8100)</visible>
			</control>
		</focusedlayout>
	</include>

	<include name="Sideblade-Breadcumb"><!-- Sideblade breadcumb - titel oben und info ganz unten falls noetig -->
		<control type="group">
			<left>120</left>
			<top>40</top>
			<width>sidebar.breadcumblabel.width</width>
			<height>1080</height>
			<control type="grouplist">
				<width>sidebar.breadcumblabel.width</width>
				<height>140</height>
				<itemgap>10</itemgap>
				<control type="label">
					<width>sidebar.breadcumblabel.width</width>
					<height>sidebar.breadcumblabel.height</height>
					<font>BreadcumbNormal</font>
					<label>$VAR[Sideblade-Breadcrumb]</label>
				</control>
				<control type="label">
					<width>sidebar.breadcumblabel.width</width>
					<height>sidebar.breadcumblabel.height</height>
					<aligny>top</aligny>
					<font>BreadcumbSmall</font>
					<wrapmultiline>true</wrapmultiline>
					<label>$VAR[Sideblade-Breadcrumb2]</label>
				</control>
			</control>
			<control type="label">
				<top>1005</top>
				<width>sidebar.breadcumblabel.width</width>
				<height>sidebar.breadcumblabel.height</height>
				<font>BreadcumbSmall</font>
				<wrapmultiline>true</wrapmultiline>
				<label>$VAR[Sideblade-Breadcrumb3]</label>
			</control>
		</control>
	</include>
	<include name="Sideblade-Dimension"><!-- Sideblade grouplist groesse -->
		<left>100</left>
		<top>150</top>
		<width>375</width>
		<height>975</height>
		<onleft>ActivateWindow(1120)</onleft><!-- Mainmenue Quciknav -->
		<onright condition="Window.IsVisible(videos)">SetFocus(50)</onright><!-- back -->
		<onright condition="!Window.IsVisible(videos)">SetFocus(71)</onright>
		<onup>9110</onup>
		<ondown>9110</ondown>
		<onback condition="Window.IsVisible(videos)">50</onback><!-- back -->
		<onback condition="!Window.IsVisible(videos)">71</onback>
		<itemgap>5</itemgap>
	</include>
	<include name="Sideblade-IconDimension"><!-- Sideblade sidebar icon grouplist groesse -->
		<left>20</left>
		<top>150</top>
		<itemgap>5</itemgap>
		<width>100</width>
		<height>975</height>
	</include>
	<include name="Sideblade-ButtonValues"><!-- Sideblade buttonvorlage -->
		<width>330</width>
		<include>Item.top.height65</include>
		<textoffsetx>20</textoffsetx>
		<radioposx>250</radioposx>
		<textwidth>250</textwidth>
		<radioposy>10</radioposy>
		<font>LightNormal</font>
		<texturenofocus></texturenofocus>
		<alttexturenofocus></alttexturenofocus>
		<texturefocus border="0,0,14,0" colordiffuse="$VAR[PrimaryCol]">buttons/mainsliderightsubbutton.png</texturefocus>
		<alttexturefocus border="0,0,14,0" colordiffuse="$VAR[PrimaryCol]">buttons/mainsliderightsubbutton.png</alttexturefocus>
	</include>
	<variable name="Sideblade-SortDirectionlabel"><!-- Info - sortierung/auf- absteigend/watched- unwatched -->
		<value condition="Container.SortDirection(ascending)">Aufsteigend</value>
		<value>Absteigend</value>
	</variable>
	<variable name="Sideblade-Watchedlabel">
		<value condition="!System.Setting(hidewatched) + Container.Content(movies)">Alle Filme</value>
		<value condition="!System.Setting(hidewatched) + [Container.Content(tvshows) | Container.Content(seasons)]">Alle Serien</value>
		<value condition="!System.Setting(hidewatched) + Container.Content(episodes)">Alle Episoden</value>
		<value condition="System.Setting(hidewatched) + Container.Content(movies)">Neue Filme</value>
		<value condition="System.Setting(hidewatched) + [Container.Content(tvshows) | Container.Content(seasons)]">Neue Serien</value>
		<value condition="System.Setting(hidewatched) + Container.Content(episodes)">Neue Episoden</value>
		<value condition="!System.Setting(hidewatched)">Alle Videos</value>
		<value condition="System.Setting(hidewatched)">Neue Videos</value>
	</variable>

	<!-- ######### Homeblade ######### -->
	<include name="Homeblade-ListDimension"><!-- Home Sideblade groesse -->
		<width>388</width>
		<height>975</height>
		<itemgap>5</itemgap>
		<scrolltime>200</scrolltime>
	</include>
	<include name="Homeblade-Listright"><!-- Home Sideblade action rechts focus back in diversen Fenstern  -->
		<onright condition="Window.IsActive(Custom_1120_Options.xml)">Dialog.Close(1120)</onright>
		<onright condition="Window.IsVisible(home)">SetFocus(9800)</onright>
		<onright condition="Window.IsVisible(videos)">SetFocus(50)</onright>
		<onright condition="Window.IsVisible(music)">SetFocus(71)</onright>
		<onright condition="Window.IsVisible(pictures)">SetFocus(71)</onright>
		<onright condition="Window.IsVisible(programs)">SetFocus(71)</onright>
		<onright condition="Window.IsVisible(SettingsCategory.xml)">SetFocus(3)</onright>
		<onright condition="Window.IsVisible(settings)">SetFocus(9000)</onright>
		<onright condition="Window.IsVisible(skinsettings)">SetFocus(9000)</onright>
		<onright condition="Window.IsVisible(systeminfo)">SetFocus(9000)</onright>
		<onright condition="Window.IsVisible(SettingsProfile.xml)">SetFocus(9000)</onright>
		<onright condition="Window.IsVisible(EventLog.xml)">SetFocus(9000)</onright>
		<onright condition="Window.IsVisible(weather)">SetFocus(54)</onright>
	</include>
	<include name="Homeblade-Listleft"><!-- Home Sideblade action links focus back in diversen Fenstern, auch bei Favoriten -->
		<onleft condition="Window.IsActive(Custom_1120_Options.xml)">Dialog.Close(1120)</onleft>
		<onleft condition="Window.IsVisible(home)">SetFocus(9800)</onleft>
		<onleft condition="Window.IsVisible(videos)">SetFocus(9110)</onleft>
		<onleft condition="Window.IsVisible(music)">SetFocus(9110)</onleft>
		<onleft condition="Window.IsVisible(pictures)">SetFocus(9110)</onleft>
		<onleft condition="Window.IsVisible(programs)">SetFocus(9110)</onleft>
		<onleft condition="Window.IsVisible(SettingsCategory.xml)">SetFocus(3)</onleft>
		<onleft condition="Window.IsVisible(settings)">SetFocus(9000)</onleft>
		<onleft condition="Window.IsVisible(skinsettings)">SetFocus(9000)</onleft>
		<onleft condition="Window.IsVisible(systeminfo)">SetFocus(9000)</onleft>
		<onleft condition="Window.IsVisible(weather)">SetFocus(54)</onleft>
		<onleft condition="Window.IsVisible(SettingsProfile.xml)">SetFocus(9000)</onleft>
		<onleft condition="Window.IsVisible(EventLog.xml)">SetFocus(9000)</onleft>
	</include>
	<include name="Homeblade-BG"><!-- Home Sideblade hintergrund -->
		<control type="image">
			<description>Hintergrund</description>
			<width>519</width>
			<height>1080</height>
			<texture background="true" colordiffuse="$VAR[DialogCol]">white.png</texture>
		</control>
	</include>
	<include name="Homeblade-IconBG"><!-- Home Sideblade icon hintergrund -->
		<control type="image">
			<description>Iconhintergrund</description>
			<width>160</width>
			<height>1080</height>
			<texture background="true" colordiffuse="black">white.png</texture>
		</control>
	</include>
	
	
	<include name="Homeblade-Breadcumb"><!-- Home breadcumb menueebene 2 -->
		<control type="group">
			<top>20</top>
			<width>sidebar.breadcumblabel.width</width>
			<height>1080</height>
			<description>Breadcumbinfo</description>
			<visible>!ControlGroup(8100).HasFocus</visible>
			<control type="label">
				<left>20</left>
				<include>SidebarIcon-Dimension</include>
				<label>$VAR[Homeblade-BreadcumbIcon]</label>
				<include>SidebarIcon-ColorFO</include>
			</control>
			<control type="grouplist">
				<left>120</left>
				<width>sidebar.breadcumblabel.width</width>
				<height>100</height>
				<control type="label">
					<width>sidebar.breadcumblabel.width</width>
					<height>sidebar.breadcumblabel.height</height>
					<font>BreadcumbNormal</font>
					<label>$VAR[Homeblade-Breadcumb1]</label>
				</control>
				<control type="label">
					<width>sidebar.breadcumblabel.width</width>
					<height>sidebar.breadcumblabel.height</height>
					<aligny>top</aligny>
					<font>BreadcumbSmall</font>
					<label>$VAR[Homeblade-Breadcumb2]</label>
				</control>
			</control>
		</control>
	</include>
	<include name="Homeblade-Button"><!-- Home Sideblade buttonvorlagen -->
		<width>330</width>
		<include>Item.top.height65</include>
		<textoffsetx>20</textoffsetx>
		<font>LightNormal</font>
	</include>
	<include name="Homeblade-SubButton">
		<texturefocus border="0,0,14,0" colordiffuse="$VAR[PrimaryCol]">buttons/mainsliderightsubbutton.png</texturefocus>
	</include>
	<include name="Homeblade-EnterButton">
		<texturefocus border="0,0,14,0" colordiffuse="$VAR[PrimaryCol]">buttons/mainsliderightsubenter.png</texturefocus>
	</include>
	<include name="Homeblade-ArrowButton">
		<texturefocus border="0,0,14,0" colordiffuse="$VAR[PrimaryCol]">buttons/mainsliderightsubarrow.png</texturefocus>
	</include>
	<include name="Homeblade-ArrowButtonFO">
		<texturefocus border="0,0,14,0" colordiffuse="$VAR[PrimaryCol]">buttons/mainsliderightsubarrowfo.png</texturefocus>
	</include>
	<include name="Homeblade-LabelDimension"><!-- Home Sideblade ContainerLabel Pinboards und Playlisten -->
		<left>40</left>
		<width>310</width>
		<height>button.top.height65</height>
		<font>Sidebars</font>
		<textcolor>TextColorMedium</textcolor>
		<label>$INFO[ListItem.Label]</label>
	</include>
	<include name="Homeblade-Divider">
		<control type="label" id="8112">
			<description>Divider</description>
			<height>70</height><!-- include ueberschreibung -->
			<include>Homeblade-Button</include>
			<label></label>
			<visible>String.IsEqual(Container(8100).NumItems,11)</visible>
		</control>
		<control type="label" id="8114">
			<description>Divider</description>
			<height>135</height><!-- include ueberschreibung -->
			<include>Homeblade-Button</include>
			<label></label>
			<visible>String.IsEqual(Container(8100).NumItems,10)</visible>
		</control>
		<control type="label" id="8116">
			<description>Divider</description>
			<height>200</height><!-- include ueberschreibung -->
			<include>Homeblade-Button</include>
			<label></label>
			<visible>String.IsEqual(Container(8100).NumItems,9)</visible>
		</control>
		<control type="label" id="8118">
			<description>Divider</description>
			<height>265</height><!-- include ueberschreibung -->
			<include>Homeblade-Button</include>
			<label></label>
			<visible>Integer.IsLessOrEqual(Container(8100).NumItems,8)</visible>
		</control>
	</include>
	<variable name="Homeblade-Pinboard"><!-- Home Sideblade Pinboard Playlisten -->
		<value condition="String.IsEqual(Window(1120).Property(PinboardContent),TV) + !String.IsEmpty(Skin.String(PinboardContentTVPls))">$INFO[Skin.String(PinboardContentTVPls)]</value>
		<value condition="String.IsEqual(Window(1120).Property(PinboardContent),Movie) + !String.IsEmpty(Skin.String(PinboardContentMoviesPls))">$INFO[Skin.String(PinboardContentMoviesPls)]</value>
	</variable>
	<variable name="Homeblade-Clock-Hour">
		<value condition="[String.IsEqual(System.Time(hh),12) | String.IsEqual(System.Time(hh),00)] + [String.IsEqual(System.Time(mm),00) | String.IsEqual(System.Time(mm),01) | String.IsEqual(System.Time(mm),02) | String.IsEqual(System.Time(mm),03) | String.IsEqual(System.Time(mm),04) | String.IsEqual(System.Time(mm),05) | String.IsEqual(System.Time(mm),06) | String.IsEqual(System.Time(mm),07) | String.IsEqual(System.Time(mm),08) | String.IsEqual(System.Time(mm),09) | String.IsEqual(System.Time(mm),10) | String.IsEqual(System.Time(mm),11) | String.IsEqual(System.Time(mm),12)]">Č</value>
		<value condition="[String.IsEqual(System.Time(hh),12) | String.IsEqual(System.Time(hh),00)] + [String.IsEqual(System.Time(mm),13) | String.IsEqual(System.Time(mm),14) | String.IsEqual(System.Time(mm),15) | String.IsEqual(System.Time(mm),16) | String.IsEqual(System.Time(mm),17) | String.IsEqual(System.Time(mm),18) | String.IsEqual(System.Time(mm),19) | String.IsEqual(System.Time(mm),20) | String.IsEqual(System.Time(mm),21) | String.IsEqual(System.Time(mm),22) | String.IsEqual(System.Time(mm),23) | String.IsEqual(System.Time(mm),24)]">č</value>
		<value condition="[String.IsEqual(System.Time(hh),12) | String.IsEqual(System.Time(hh),00)] + [String.IsEqual(System.Time(mm),25) | String.IsEqual(System.Time(mm),26) | String.IsEqual(System.Time(mm),27) | String.IsEqual(System.Time(mm),28) | String.IsEqual(System.Time(mm),29) | String.IsEqual(System.Time(mm),30) | String.IsEqual(System.Time(mm),31) | String.IsEqual(System.Time(mm),32) | String.IsEqual(System.Time(mm),33) | String.IsEqual(System.Time(mm),34) | String.IsEqual(System.Time(mm),35) | String.IsEqual(System.Time(mm),36)]">Ď</value>
		<value condition="[String.IsEqual(System.Time(hh),12) | String.IsEqual(System.Time(hh),00)] + [String.IsEqual(System.Time(mm),37) | String.IsEqual(System.Time(mm),38) | String.IsEqual(System.Time(mm),39) | String.IsEqual(System.Time(mm),40) | String.IsEqual(System.Time(mm),41) | String.IsEqual(System.Time(mm),42) | String.IsEqual(System.Time(mm),43) | String.IsEqual(System.Time(mm),44) | String.IsEqual(System.Time(mm),45) | String.IsEqual(System.Time(mm),46) | String.IsEqual(System.Time(mm),47) | String.IsEqual(System.Time(mm),48)]">ď</value>
		<value condition="[String.IsEqual(System.Time(hh),12) | String.IsEqual(System.Time(hh),00)] + [String.IsEqual(System.Time(mm),49) | String.IsEqual(System.Time(mm),50) | String.IsEqual(System.Time(mm),51) | String.IsEqual(System.Time(mm),52) | String.IsEqual(System.Time(mm),53) | String.IsEqual(System.Time(mm),54) | String.IsEqual(System.Time(mm),55) | String.IsEqual(System.Time(mm),56) | String.IsEqual(System.Time(mm),57) | String.IsEqual(System.Time(mm),58) | String.IsEqual(System.Time(mm),59) | String.IsEqual(System.Time(mm),60)]">Đ</value>
		<value condition="[String.IsEqual(System.Time(hh),1) | String.IsEqual(System.Time(hh),01) | String.IsEqual(System.Time(hh),13)] + [String.IsEqual(System.Time(mm),00) | String.IsEqual(System.Time(mm),01) | String.IsEqual(System.Time(mm),02) | String.IsEqual(System.Time(mm),03) | String.IsEqual(System.Time(mm),04) | String.IsEqual(System.Time(mm),05) | String.IsEqual(System.Time(mm),06) | String.IsEqual(System.Time(mm),07) | String.IsEqual(System.Time(mm),08) | String.IsEqual(System.Time(mm),09) | String.IsEqual(System.Time(mm),10) | String.IsEqual(System.Time(mm),11) | String.IsEqual(System.Time(mm),12)]">đ</value>
		<value condition="[String.IsEqual(System.Time(hh),1) | String.IsEqual(System.Time(hh),01) | String.IsEqual(System.Time(hh),13)] + [String.IsEqual(System.Time(mm),13) | String.IsEqual(System.Time(mm),14) | String.IsEqual(System.Time(mm),15) | String.IsEqual(System.Time(mm),16) | String.IsEqual(System.Time(mm),17) | String.IsEqual(System.Time(mm),18) | String.IsEqual(System.Time(mm),19) | String.IsEqual(System.Time(mm),20) | String.IsEqual(System.Time(mm),21) | String.IsEqual(System.Time(mm),22) | String.IsEqual(System.Time(mm),23) | String.IsEqual(System.Time(mm),24)]">Ē</value>
		<value condition="[String.IsEqual(System.Time(hh),1) | String.IsEqual(System.Time(hh),01) | String.IsEqual(System.Time(hh),13)] + [String.IsEqual(System.Time(hh),23) + String.IsEqual(System.Time(mm),25) | String.IsEqual(System.Time(mm),26) | String.IsEqual(System.Time(mm),27) | String.IsEqual(System.Time(mm),28) | String.IsEqual(System.Time(mm),29) | String.IsEqual(System.Time(mm),30) | String.IsEqual(System.Time(mm),31) | String.IsEqual(System.Time(mm),32) | String.IsEqual(System.Time(mm),33) | String.IsEqual(System.Time(mm),34) | String.IsEqual(System.Time(mm),35) | String.IsEqual(System.Time(mm),36)]">ē</value>
		<value condition="[String.IsEqual(System.Time(hh),1) | String.IsEqual(System.Time(hh),01) | String.IsEqual(System.Time(hh),13)] + [String.IsEqual(System.Time(mm),37) | String.IsEqual(System.Time(mm),38) | String.IsEqual(System.Time(mm),39) | String.IsEqual(System.Time(mm),40) | String.IsEqual(System.Time(mm),41) | String.IsEqual(System.Time(mm),42) | String.IsEqual(System.Time(mm),43) | String.IsEqual(System.Time(mm),44) | String.IsEqual(System.Time(mm),45) | String.IsEqual(System.Time(mm),46) | String.IsEqual(System.Time(mm),47) | String.IsEqual(System.Time(mm),48)]">Ĕ</value>
		<value condition="[String.IsEqual(System.Time(hh),1) | String.IsEqual(System.Time(hh),01) | String.IsEqual(System.Time(hh),13)] + [String.IsEqual(System.Time(mm),49) | String.IsEqual(System.Time(mm),50) | String.IsEqual(System.Time(mm),51) | String.IsEqual(System.Time(mm),52) | String.IsEqual(System.Time(mm),53) | String.IsEqual(System.Time(mm),54) | String.IsEqual(System.Time(mm),55) | String.IsEqual(System.Time(mm),56) | String.IsEqual(System.Time(mm),57) | String.IsEqual(System.Time(mm),58) | String.IsEqual(System.Time(mm),59) | String.IsEqual(System.Time(mm),60)]">ĕ</value>
		<value condition="[String.IsEqual(System.Time(hh),2) | String.IsEqual(System.Time(hh),02) | String.IsEqual(System.Time(hh),14)] + [String.IsEqual(System.Time(mm),00) | String.IsEqual(System.Time(mm),01) | String.IsEqual(System.Time(mm),02) | String.IsEqual(System.Time(mm),03) | String.IsEqual(System.Time(mm),04) | String.IsEqual(System.Time(mm),05) | String.IsEqual(System.Time(mm),06) | String.IsEqual(System.Time(mm),07) | String.IsEqual(System.Time(mm),08) | String.IsEqual(System.Time(mm),09) | String.IsEqual(System.Time(mm),10) | String.IsEqual(System.Time(mm),11) | String.IsEqual(System.Time(mm),12)]">Ė</value>
		<value condition="[String.IsEqual(System.Time(hh),2) | String.IsEqual(System.Time(hh),02) | String.IsEqual(System.Time(hh),14)] + [String.IsEqual(System.Time(mm),13) | String.IsEqual(System.Time(mm),14) | String.IsEqual(System.Time(mm),15) | String.IsEqual(System.Time(mm),16) | String.IsEqual(System.Time(mm),17) | String.IsEqual(System.Time(mm),18) | String.IsEqual(System.Time(mm),19) | String.IsEqual(System.Time(mm),20) | String.IsEqual(System.Time(mm),21) | String.IsEqual(System.Time(mm),22) | String.IsEqual(System.Time(mm),23) | String.IsEqual(System.Time(mm),24)]">ė</value>
		<value condition="[String.IsEqual(System.Time(hh),2) | String.IsEqual(System.Time(hh),02) | String.IsEqual(System.Time(hh),14)] + [String.IsEqual(System.Time(mm),25) | String.IsEqual(System.Time(mm),26) | String.IsEqual(System.Time(mm),27) | String.IsEqual(System.Time(mm),28) | String.IsEqual(System.Time(mm),29) | String.IsEqual(System.Time(mm),30) | String.IsEqual(System.Time(mm),31) | String.IsEqual(System.Time(mm),32) | String.IsEqual(System.Time(mm),33) | String.IsEqual(System.Time(mm),34) | String.IsEqual(System.Time(mm),35) | String.IsEqual(System.Time(mm),36)]">Ę</value>
		<value condition="[String.IsEqual(System.Time(hh),2) | String.IsEqual(System.Time(hh),02) | String.IsEqual(System.Time(hh),14)] + [String.IsEqual(System.Time(mm),37) | String.IsEqual(System.Time(mm),38) | String.IsEqual(System.Time(mm),39) | String.IsEqual(System.Time(mm),40) | String.IsEqual(System.Time(mm),41) | String.IsEqual(System.Time(mm),42) | String.IsEqual(System.Time(mm),43) | String.IsEqual(System.Time(mm),44) | String.IsEqual(System.Time(mm),45) | String.IsEqual(System.Time(mm),46) | String.IsEqual(System.Time(mm),47) | String.IsEqual(System.Time(mm),48)]">ę</value>
		<value condition="[String.IsEqual(System.Time(hh),2) | String.IsEqual(System.Time(hh),02) | String.IsEqual(System.Time(hh),14)] + [String.IsEqual(System.Time(mm),49) | String.IsEqual(System.Time(mm),50) | String.IsEqual(System.Time(mm),51) | String.IsEqual(System.Time(mm),52) | String.IsEqual(System.Time(mm),53) | String.IsEqual(System.Time(mm),54) | String.IsEqual(System.Time(mm),55) | String.IsEqual(System.Time(mm),56) | String.IsEqual(System.Time(mm),57) | String.IsEqual(System.Time(mm),58) | String.IsEqual(System.Time(mm),59) | String.IsEqual(System.Time(mm),60)]">Ě</value>
		<value condition="[String.IsEqual(System.Time(hh),3) | String.IsEqual(System.Time(hh),03) | String.IsEqual(System.Time(hh),15)] + [String.IsEqual(System.Time(mm),00) | String.IsEqual(System.Time(mm),01) | String.IsEqual(System.Time(mm),02) | String.IsEqual(System.Time(mm),03) | String.IsEqual(System.Time(mm),04) | String.IsEqual(System.Time(mm),05) | String.IsEqual(System.Time(mm),06) | String.IsEqual(System.Time(mm),07) | String.IsEqual(System.Time(mm),08) | String.IsEqual(System.Time(mm),09) | String.IsEqual(System.Time(mm),10) | String.IsEqual(System.Time(mm),11) | String.IsEqual(System.Time(mm),12)]">ě</value>
		<value condition="[String.IsEqual(System.Time(hh),3) | String.IsEqual(System.Time(hh),03) | String.IsEqual(System.Time(hh),15)] + [String.IsEqual(System.Time(mm),13) | String.IsEqual(System.Time(mm),14) | String.IsEqual(System.Time(mm),15) | String.IsEqual(System.Time(mm),16) | String.IsEqual(System.Time(mm),17) | String.IsEqual(System.Time(mm),18) | String.IsEqual(System.Time(mm),19) | String.IsEqual(System.Time(mm),20) | String.IsEqual(System.Time(mm),21) | String.IsEqual(System.Time(mm),22) | String.IsEqual(System.Time(mm),23) | String.IsEqual(System.Time(mm),24)]">Ĝ</value>
		<value condition="[String.IsEqual(System.Time(hh),3) | String.IsEqual(System.Time(hh),03) | String.IsEqual(System.Time(hh),15)] + [String.IsEqual(System.Time(mm),25) | String.IsEqual(System.Time(mm),26) | String.IsEqual(System.Time(mm),27) | String.IsEqual(System.Time(mm),28) | String.IsEqual(System.Time(mm),29) | String.IsEqual(System.Time(mm),30) | String.IsEqual(System.Time(mm),31) | String.IsEqual(System.Time(mm),32) | String.IsEqual(System.Time(mm),33) | String.IsEqual(System.Time(mm),34) | String.IsEqual(System.Time(mm),35) | String.IsEqual(System.Time(mm),36)]">ĝ</value>
		<value condition="[String.IsEqual(System.Time(hh),3) | String.IsEqual(System.Time(hh),03) | String.IsEqual(System.Time(hh),15)] + [String.IsEqual(System.Time(mm),37) | String.IsEqual(System.Time(mm),38) | String.IsEqual(System.Time(mm),39) | String.IsEqual(System.Time(mm),40) | String.IsEqual(System.Time(mm),41) | String.IsEqual(System.Time(mm),42) | String.IsEqual(System.Time(mm),43) | String.IsEqual(System.Time(mm),44) | String.IsEqual(System.Time(mm),45) | String.IsEqual(System.Time(mm),46) | String.IsEqual(System.Time(mm),47) | String.IsEqual(System.Time(mm),48)]">Ğ</value>
		<value condition="[String.IsEqual(System.Time(hh),3) | String.IsEqual(System.Time(hh),03) | String.IsEqual(System.Time(hh),15)] + [String.IsEqual(System.Time(mm),49) | String.IsEqual(System.Time(mm),50) | String.IsEqual(System.Time(mm),51) | String.IsEqual(System.Time(mm),52) | String.IsEqual(System.Time(mm),53) | String.IsEqual(System.Time(mm),54) | String.IsEqual(System.Time(mm),55) | String.IsEqual(System.Time(mm),56) | String.IsEqual(System.Time(mm),57) | String.IsEqual(System.Time(mm),58) | String.IsEqual(System.Time(mm),59) | String.IsEqual(System.Time(mm),60)]">ğ</value>
		<value condition="[String.IsEqual(System.Time(hh),4) | String.IsEqual(System.Time(hh),04) | String.IsEqual(System.Time(hh),16)] + [String.IsEqual(System.Time(mm),00) | String.IsEqual(System.Time(mm),01) | String.IsEqual(System.Time(mm),02) | String.IsEqual(System.Time(mm),03) | String.IsEqual(System.Time(mm),04) | String.IsEqual(System.Time(mm),05) | String.IsEqual(System.Time(mm),06) | String.IsEqual(System.Time(mm),07) | String.IsEqual(System.Time(mm),08) | String.IsEqual(System.Time(mm),09) | String.IsEqual(System.Time(mm),10) | String.IsEqual(System.Time(mm),11) | String.IsEqual(System.Time(mm),12)]">Ġ</value>
		<value condition="[String.IsEqual(System.Time(hh),4) | String.IsEqual(System.Time(hh),04) | String.IsEqual(System.Time(hh),16)] + [String.IsEqual(System.Time(mm),13) | String.IsEqual(System.Time(mm),14) | String.IsEqual(System.Time(mm),15) | String.IsEqual(System.Time(mm),16) | String.IsEqual(System.Time(mm),17) | String.IsEqual(System.Time(mm),18) | String.IsEqual(System.Time(mm),19) | String.IsEqual(System.Time(mm),20) | String.IsEqual(System.Time(mm),21) | String.IsEqual(System.Time(mm),22) | String.IsEqual(System.Time(mm),23) | String.IsEqual(System.Time(mm),24)]">ġ</value>
		<value condition="[String.IsEqual(System.Time(hh),4) | String.IsEqual(System.Time(hh),04) | String.IsEqual(System.Time(hh),16)] + [String.IsEqual(System.Time(mm),25) | String.IsEqual(System.Time(mm),26) | String.IsEqual(System.Time(mm),27) | String.IsEqual(System.Time(mm),28) | String.IsEqual(System.Time(mm),29) | String.IsEqual(System.Time(mm),30) | String.IsEqual(System.Time(mm),31) | String.IsEqual(System.Time(mm),32) | String.IsEqual(System.Time(mm),33) | String.IsEqual(System.Time(mm),34) | String.IsEqual(System.Time(mm),35) | String.IsEqual(System.Time(mm),36)]">Ģ</value>
		<value condition="[String.IsEqual(System.Time(hh),4) | String.IsEqual(System.Time(hh),04) | String.IsEqual(System.Time(hh),16)] + [String.IsEqual(System.Time(mm),37) | String.IsEqual(System.Time(mm),38) | String.IsEqual(System.Time(mm),39) | String.IsEqual(System.Time(mm),40) | String.IsEqual(System.Time(mm),41) | String.IsEqual(System.Time(mm),42) | String.IsEqual(System.Time(mm),43) | String.IsEqual(System.Time(mm),44) | String.IsEqual(System.Time(mm),45) | String.IsEqual(System.Time(mm),46) | String.IsEqual(System.Time(mm),47) | String.IsEqual(System.Time(mm),48)]">ģ</value>
		<value condition="[String.IsEqual(System.Time(hh),4) | String.IsEqual(System.Time(hh),04) | String.IsEqual(System.Time(hh),16)] + [String.IsEqual(System.Time(mm),49) | String.IsEqual(System.Time(mm),50) | String.IsEqual(System.Time(mm),51) | String.IsEqual(System.Time(mm),52) | String.IsEqual(System.Time(mm),53) | String.IsEqual(System.Time(mm),54) | String.IsEqual(System.Time(mm),55) | String.IsEqual(System.Time(mm),56) | String.IsEqual(System.Time(mm),57) | String.IsEqual(System.Time(mm),58) | String.IsEqual(System.Time(mm),59) | String.IsEqual(System.Time(mm),60)]">Ĥ</value>
		<value condition="[String.IsEqual(System.Time(hh),5) | String.IsEqual(System.Time(hh),05) | String.IsEqual(System.Time(hh),17)] + [String.IsEqual(System.Time(mm),00) | String.IsEqual(System.Time(mm),01) | String.IsEqual(System.Time(mm),02) | String.IsEqual(System.Time(mm),03) | String.IsEqual(System.Time(mm),04) | String.IsEqual(System.Time(mm),05) | String.IsEqual(System.Time(mm),06) | String.IsEqual(System.Time(mm),07) | String.IsEqual(System.Time(mm),08) | String.IsEqual(System.Time(mm),09) | String.IsEqual(System.Time(mm),10) | String.IsEqual(System.Time(mm),11) | String.IsEqual(System.Time(mm),12)]">ĥ</value>
		<value condition="[String.IsEqual(System.Time(hh),5) | String.IsEqual(System.Time(hh),05) | String.IsEqual(System.Time(hh),17)] + [String.IsEqual(System.Time(mm),13) | String.IsEqual(System.Time(mm),14) | String.IsEqual(System.Time(mm),15) | String.IsEqual(System.Time(mm),16) | String.IsEqual(System.Time(mm),17) | String.IsEqual(System.Time(mm),18) | String.IsEqual(System.Time(mm),19) | String.IsEqual(System.Time(mm),20) | String.IsEqual(System.Time(mm),21) | String.IsEqual(System.Time(mm),22) | String.IsEqual(System.Time(mm),23) | String.IsEqual(System.Time(mm),24)]">Ħ</value>
		<value condition="[String.IsEqual(System.Time(hh),5) | String.IsEqual(System.Time(hh),05) | String.IsEqual(System.Time(hh),17)] + [String.IsEqual(System.Time(mm),25) | String.IsEqual(System.Time(mm),26) | String.IsEqual(System.Time(mm),27) | String.IsEqual(System.Time(mm),28) | String.IsEqual(System.Time(mm),29) | String.IsEqual(System.Time(mm),30) | String.IsEqual(System.Time(mm),31) | String.IsEqual(System.Time(mm),32) | String.IsEqual(System.Time(mm),33) | String.IsEqual(System.Time(mm),34) | String.IsEqual(System.Time(mm),35) | String.IsEqual(System.Time(mm),36)]">ħ</value>
		<value condition="[String.IsEqual(System.Time(hh),5) | String.IsEqual(System.Time(hh),05) | String.IsEqual(System.Time(hh),17)] + [String.IsEqual(System.Time(mm),37) | String.IsEqual(System.Time(mm),38) | String.IsEqual(System.Time(mm),39) | String.IsEqual(System.Time(mm),40) | String.IsEqual(System.Time(mm),41) | String.IsEqual(System.Time(mm),42) | String.IsEqual(System.Time(mm),43) | String.IsEqual(System.Time(mm),44) | String.IsEqual(System.Time(mm),45) | String.IsEqual(System.Time(mm),46) | String.IsEqual(System.Time(mm),47) | String.IsEqual(System.Time(mm),48)]">Ĩ</value>
		<value condition="[String.IsEqual(System.Time(hh),5) | String.IsEqual(System.Time(hh),05) | String.IsEqual(System.Time(hh),17)] + [String.IsEqual(System.Time(mm),49) | String.IsEqual(System.Time(mm),50) | String.IsEqual(System.Time(mm),51) | String.IsEqual(System.Time(mm),52) | String.IsEqual(System.Time(mm),53) | String.IsEqual(System.Time(mm),54) | String.IsEqual(System.Time(mm),55) | String.IsEqual(System.Time(mm),56) | String.IsEqual(System.Time(mm),57) | String.IsEqual(System.Time(mm),58) | String.IsEqual(System.Time(mm),59) | String.IsEqual(System.Time(mm),60)]">ĩ</value>
		<value condition="[String.IsEqual(System.Time(hh),6) | String.IsEqual(System.Time(hh),06) | String.IsEqual(System.Time(hh),18)] + [String.IsEqual(System.Time(mm),00) | String.IsEqual(System.Time(mm),01) | String.IsEqual(System.Time(mm),02) | String.IsEqual(System.Time(mm),03) | String.IsEqual(System.Time(mm),04) | String.IsEqual(System.Time(mm),05) | String.IsEqual(System.Time(mm),06) | String.IsEqual(System.Time(mm),07) | String.IsEqual(System.Time(mm),08) | String.IsEqual(System.Time(mm),09) | String.IsEqual(System.Time(mm),10) | String.IsEqual(System.Time(mm),11) | String.IsEqual(System.Time(mm),12)]">Ī</value>
		<value condition="[String.IsEqual(System.Time(hh),6) | String.IsEqual(System.Time(hh),06) | String.IsEqual(System.Time(hh),18)] + [String.IsEqual(System.Time(mm),13) | String.IsEqual(System.Time(mm),14) | String.IsEqual(System.Time(mm),15) | String.IsEqual(System.Time(mm),16) | String.IsEqual(System.Time(mm),17) | String.IsEqual(System.Time(mm),18) | String.IsEqual(System.Time(mm),19) | String.IsEqual(System.Time(mm),20) | String.IsEqual(System.Time(mm),21) | String.IsEqual(System.Time(mm),22) | String.IsEqual(System.Time(mm),23) | String.IsEqual(System.Time(mm),24)]">ī</value>
		<value condition="[String.IsEqual(System.Time(hh),6) | String.IsEqual(System.Time(hh),06) | String.IsEqual(System.Time(hh),18)] + [String.IsEqual(System.Time(mm),25) | String.IsEqual(System.Time(mm),26) | String.IsEqual(System.Time(mm),27) | String.IsEqual(System.Time(mm),28) | String.IsEqual(System.Time(mm),29) | String.IsEqual(System.Time(mm),30) | String.IsEqual(System.Time(mm),31) | String.IsEqual(System.Time(mm),32) | String.IsEqual(System.Time(mm),33) | String.IsEqual(System.Time(mm),34) | String.IsEqual(System.Time(mm),35) | String.IsEqual(System.Time(mm),36)]">Ĭ</value>
		<value condition="[String.IsEqual(System.Time(hh),6) | String.IsEqual(System.Time(hh),06) | String.IsEqual(System.Time(hh),18)] + [String.IsEqual(System.Time(mm),37) | String.IsEqual(System.Time(mm),38) | String.IsEqual(System.Time(mm),39) | String.IsEqual(System.Time(mm),40) | String.IsEqual(System.Time(mm),41) | String.IsEqual(System.Time(mm),42) | String.IsEqual(System.Time(mm),43) | String.IsEqual(System.Time(mm),44) | String.IsEqual(System.Time(mm),45) | String.IsEqual(System.Time(mm),46) | String.IsEqual(System.Time(mm),47) | String.IsEqual(System.Time(mm),48)]">ĭ</value>
		<value condition="[String.IsEqual(System.Time(hh),6) | String.IsEqual(System.Time(hh),06) | String.IsEqual(System.Time(hh),18)] + [String.IsEqual(System.Time(mm),49) | String.IsEqual(System.Time(mm),50) | String.IsEqual(System.Time(mm),51) | String.IsEqual(System.Time(mm),52) | String.IsEqual(System.Time(mm),53) | String.IsEqual(System.Time(mm),54) | String.IsEqual(System.Time(mm),55) | String.IsEqual(System.Time(mm),56) | String.IsEqual(System.Time(mm),57) | String.IsEqual(System.Time(mm),58) | String.IsEqual(System.Time(mm),59) | String.IsEqual(System.Time(mm),60)]">Į</value>
		<value condition="[String.IsEqual(System.Time(hh),7) | String.IsEqual(System.Time(hh),07) | String.IsEqual(System.Time(hh),19)] + [String.IsEqual(System.Time(mm),00) | String.IsEqual(System.Time(mm),01) | String.IsEqual(System.Time(mm),02) | String.IsEqual(System.Time(mm),03) | String.IsEqual(System.Time(mm),04) | String.IsEqual(System.Time(mm),05) | String.IsEqual(System.Time(mm),06) | String.IsEqual(System.Time(mm),07) | String.IsEqual(System.Time(mm),08) | String.IsEqual(System.Time(mm),09) | String.IsEqual(System.Time(mm),10) | String.IsEqual(System.Time(mm),11) | String.IsEqual(System.Time(mm),12)]">į</value>
		<value condition="[String.IsEqual(System.Time(hh),7) | String.IsEqual(System.Time(hh),07) | String.IsEqual(System.Time(hh),19)] + [String.IsEqual(System.Time(mm),13) | String.IsEqual(System.Time(mm),14) | String.IsEqual(System.Time(mm),15) | String.IsEqual(System.Time(mm),16) | String.IsEqual(System.Time(mm),17) | String.IsEqual(System.Time(mm),18) | String.IsEqual(System.Time(mm),19) | String.IsEqual(System.Time(mm),20) | String.IsEqual(System.Time(mm),21) | String.IsEqual(System.Time(mm),22) | String.IsEqual(System.Time(mm),23) | String.IsEqual(System.Time(mm),24)]">İ</value>
		<value condition="[String.IsEqual(System.Time(hh),7) | String.IsEqual(System.Time(hh),07) | String.IsEqual(System.Time(hh),19)] + [String.IsEqual(System.Time(mm),25) | String.IsEqual(System.Time(mm),26) | String.IsEqual(System.Time(mm),27) | String.IsEqual(System.Time(mm),28) | String.IsEqual(System.Time(mm),29) | String.IsEqual(System.Time(mm),30) | String.IsEqual(System.Time(mm),31) | String.IsEqual(System.Time(mm),32) | String.IsEqual(System.Time(mm),33) | String.IsEqual(System.Time(mm),34) | String.IsEqual(System.Time(mm),35) | String.IsEqual(System.Time(mm),36)]">ı</value>
		<value condition="[String.IsEqual(System.Time(hh),7) | String.IsEqual(System.Time(hh),07) | String.IsEqual(System.Time(hh),19)] + [String.IsEqual(System.Time(mm),37) | String.IsEqual(System.Time(mm),38) | String.IsEqual(System.Time(mm),39) | String.IsEqual(System.Time(mm),40) | String.IsEqual(System.Time(mm),41) | String.IsEqual(System.Time(mm),42) | String.IsEqual(System.Time(mm),43) | String.IsEqual(System.Time(mm),44) | String.IsEqual(System.Time(mm),45) | String.IsEqual(System.Time(mm),46) | String.IsEqual(System.Time(mm),47) | String.IsEqual(System.Time(mm),48)]">Ĳ</value>
		<value condition="[String.IsEqual(System.Time(hh),7) | String.IsEqual(System.Time(hh),07) | String.IsEqual(System.Time(hh),19)] + [String.IsEqual(System.Time(mm),49) | String.IsEqual(System.Time(mm),50) | String.IsEqual(System.Time(mm),51) | String.IsEqual(System.Time(mm),52) | String.IsEqual(System.Time(mm),53) | String.IsEqual(System.Time(mm),54) | String.IsEqual(System.Time(mm),55) | String.IsEqual(System.Time(mm),56) | String.IsEqual(System.Time(mm),57) | String.IsEqual(System.Time(mm),58) | String.IsEqual(System.Time(mm),59) | String.IsEqual(System.Time(mm),60)]">ĳ</value>
		<value condition="[String.IsEqual(System.Time(hh),8) | String.IsEqual(System.Time(hh),08) | String.IsEqual(System.Time(hh),20)] + [String.IsEqual(System.Time(mm),00) | String.IsEqual(System.Time(mm),01) | String.IsEqual(System.Time(mm),02) | String.IsEqual(System.Time(mm),03) | String.IsEqual(System.Time(mm),04) | String.IsEqual(System.Time(mm),05) | String.IsEqual(System.Time(mm),06) | String.IsEqual(System.Time(mm),07) | String.IsEqual(System.Time(mm),08) | String.IsEqual(System.Time(mm),09) | String.IsEqual(System.Time(mm),10) | String.IsEqual(System.Time(mm),11) | String.IsEqual(System.Time(mm),12)]">Ĵ</value>
		<value condition="[String.IsEqual(System.Time(hh),8) | String.IsEqual(System.Time(hh),08) | String.IsEqual(System.Time(hh),20)] + [String.IsEqual(System.Time(mm),13) | String.IsEqual(System.Time(mm),14) | String.IsEqual(System.Time(mm),15) | String.IsEqual(System.Time(mm),16) | String.IsEqual(System.Time(mm),17) | String.IsEqual(System.Time(mm),18) | String.IsEqual(System.Time(mm),19) | String.IsEqual(System.Time(mm),20) | String.IsEqual(System.Time(mm),21) | String.IsEqual(System.Time(mm),22) | String.IsEqual(System.Time(mm),23) | String.IsEqual(System.Time(mm),24)]">ĵ</value>
		<value condition="[String.IsEqual(System.Time(hh),8) | String.IsEqual(System.Time(hh),08) | String.IsEqual(System.Time(hh),20)] + [String.IsEqual(System.Time(mm),25) | String.IsEqual(System.Time(mm),26) | String.IsEqual(System.Time(mm),27) | String.IsEqual(System.Time(mm),28) | String.IsEqual(System.Time(mm),29) | String.IsEqual(System.Time(mm),30) | String.IsEqual(System.Time(mm),31) | String.IsEqual(System.Time(mm),32) | String.IsEqual(System.Time(mm),33) | String.IsEqual(System.Time(mm),34) | String.IsEqual(System.Time(mm),35) | String.IsEqual(System.Time(mm),36)]">Ķ</value>
		<value condition="[String.IsEqual(System.Time(hh),8) | String.IsEqual(System.Time(hh),08) | String.IsEqual(System.Time(hh),20)] + [String.IsEqual(System.Time(mm),37) | String.IsEqual(System.Time(mm),38) | String.IsEqual(System.Time(mm),39) | String.IsEqual(System.Time(mm),40) | String.IsEqual(System.Time(mm),41) | String.IsEqual(System.Time(mm),42) | String.IsEqual(System.Time(mm),43) | String.IsEqual(System.Time(mm),44) | String.IsEqual(System.Time(mm),45) | String.IsEqual(System.Time(mm),46) | String.IsEqual(System.Time(mm),47) | String.IsEqual(System.Time(mm),48)]">ķ</value>
		<value condition="[String.IsEqual(System.Time(hh),8) | String.IsEqual(System.Time(hh),08) | String.IsEqual(System.Time(hh),20)] + [String.IsEqual(System.Time(mm),49) | String.IsEqual(System.Time(mm),50) | String.IsEqual(System.Time(mm),51) | String.IsEqual(System.Time(mm),52) | String.IsEqual(System.Time(mm),53) | String.IsEqual(System.Time(mm),54) | String.IsEqual(System.Time(mm),55) | String.IsEqual(System.Time(mm),56) | String.IsEqual(System.Time(mm),57) | String.IsEqual(System.Time(mm),58) | String.IsEqual(System.Time(mm),59) | String.IsEqual(System.Time(mm),60)]">ĸ</value>
		<value condition="[String.IsEqual(System.Time(hh),9) | String.IsEqual(System.Time(hh),09) | String.IsEqual(System.Time(hh),21)] + [String.IsEqual(System.Time(mm),00) | String.IsEqual(System.Time(mm),01) | String.IsEqual(System.Time(mm),02) | String.IsEqual(System.Time(mm),03) | String.IsEqual(System.Time(mm),04) | String.IsEqual(System.Time(mm),05) | String.IsEqual(System.Time(mm),06) | String.IsEqual(System.Time(mm),07) | String.IsEqual(System.Time(mm),08) | String.IsEqual(System.Time(mm),09) | String.IsEqual(System.Time(mm),10) | String.IsEqual(System.Time(mm),11) | String.IsEqual(System.Time(mm),12)]">Ĺ</value>
		<value condition="[String.IsEqual(System.Time(hh),9) | String.IsEqual(System.Time(hh),09) | String.IsEqual(System.Time(hh),21)] + [String.IsEqual(System.Time(mm),13) | String.IsEqual(System.Time(mm),14) | String.IsEqual(System.Time(mm),15) | String.IsEqual(System.Time(mm),16) | String.IsEqual(System.Time(mm),17) | String.IsEqual(System.Time(mm),18) | String.IsEqual(System.Time(mm),19) | String.IsEqual(System.Time(mm),20) | String.IsEqual(System.Time(mm),21) | String.IsEqual(System.Time(mm),22) | String.IsEqual(System.Time(mm),23) | String.IsEqual(System.Time(mm),24)]">ĺ</value>
		<value condition="[String.IsEqual(System.Time(hh),9) | String.IsEqual(System.Time(hh),09) | String.IsEqual(System.Time(hh),21)] + [String.IsEqual(System.Time(mm),25) | String.IsEqual(System.Time(mm),26) | String.IsEqual(System.Time(mm),27) | String.IsEqual(System.Time(mm),28) | String.IsEqual(System.Time(mm),29) | String.IsEqual(System.Time(mm),30) | String.IsEqual(System.Time(mm),31) | String.IsEqual(System.Time(mm),32) | String.IsEqual(System.Time(mm),33) | String.IsEqual(System.Time(mm),34) | String.IsEqual(System.Time(mm),35) | String.IsEqual(System.Time(mm),36)]">Ļ</value>
		<value condition="[String.IsEqual(System.Time(hh),9) | String.IsEqual(System.Time(hh),09) | String.IsEqual(System.Time(hh),21)] + [String.IsEqual(System.Time(mm),37) | String.IsEqual(System.Time(mm),38) | String.IsEqual(System.Time(mm),39) | String.IsEqual(System.Time(mm),40) | String.IsEqual(System.Time(mm),41) | String.IsEqual(System.Time(mm),42) | String.IsEqual(System.Time(mm),43) | String.IsEqual(System.Time(mm),44) | String.IsEqual(System.Time(mm),45) | String.IsEqual(System.Time(mm),46) | String.IsEqual(System.Time(mm),47) | String.IsEqual(System.Time(mm),48)]">ļ</value>
		<value condition="[String.IsEqual(System.Time(hh),9) | String.IsEqual(System.Time(hh),09) | String.IsEqual(System.Time(hh),21)] + [String.IsEqual(System.Time(mm),49) | String.IsEqual(System.Time(mm),50) | String.IsEqual(System.Time(mm),51) | String.IsEqual(System.Time(mm),52) | String.IsEqual(System.Time(mm),53) | String.IsEqual(System.Time(mm),54) | String.IsEqual(System.Time(mm),55) | String.IsEqual(System.Time(mm),56) | String.IsEqual(System.Time(mm),57) | String.IsEqual(System.Time(mm),58) | String.IsEqual(System.Time(mm),59) | String.IsEqual(System.Time(mm),60)]">Ľ</value>
		<value condition="[String.IsEqual(System.Time(hh),10) | String.IsEqual(System.Time(hh),22)] + [String.IsEqual(System.Time(mm),00) | String.IsEqual(System.Time(mm),01) | String.IsEqual(System.Time(mm),02) | String.IsEqual(System.Time(mm),03) | String.IsEqual(System.Time(mm),04) | String.IsEqual(System.Time(mm),05) | String.IsEqual(System.Time(mm),06) | String.IsEqual(System.Time(mm),07) | String.IsEqual(System.Time(mm),08) | String.IsEqual(System.Time(mm),09) | String.IsEqual(System.Time(mm),10) | String.IsEqual(System.Time(mm),11) | String.IsEqual(System.Time(mm),12)]">ľ</value>
		<value condition="[String.IsEqual(System.Time(hh),10) | String.IsEqual(System.Time(hh),22)] + [String.IsEqual(System.Time(mm),13) | String.IsEqual(System.Time(mm),14) | String.IsEqual(System.Time(mm),15) | String.IsEqual(System.Time(mm),16) | String.IsEqual(System.Time(mm),17) | String.IsEqual(System.Time(mm),18) | String.IsEqual(System.Time(mm),19) | String.IsEqual(System.Time(mm),20) | String.IsEqual(System.Time(mm),21) | String.IsEqual(System.Time(mm),22) | String.IsEqual(System.Time(mm),23) | String.IsEqual(System.Time(mm),24)]">Ŀ</value>
		<value condition="[String.IsEqual(System.Time(hh),10) | String.IsEqual(System.Time(hh),22)] + [String.IsEqual(System.Time(mm),25) | String.IsEqual(System.Time(mm),26) | String.IsEqual(System.Time(mm),27) | String.IsEqual(System.Time(mm),28) | String.IsEqual(System.Time(mm),29) | String.IsEqual(System.Time(mm),30) | String.IsEqual(System.Time(mm),31) | String.IsEqual(System.Time(mm),32) | String.IsEqual(System.Time(mm),33) | String.IsEqual(System.Time(mm),34) | String.IsEqual(System.Time(mm),35) | String.IsEqual(System.Time(mm),36)]">ŀ</value>
		<value condition="[String.IsEqual(System.Time(hh),10) | String.IsEqual(System.Time(hh),22)] + [String.IsEqual(System.Time(mm),37) | String.IsEqual(System.Time(mm),38) | String.IsEqual(System.Time(mm),39) | String.IsEqual(System.Time(mm),40) | String.IsEqual(System.Time(mm),41) | String.IsEqual(System.Time(mm),42) | String.IsEqual(System.Time(mm),43) | String.IsEqual(System.Time(mm),44) | String.IsEqual(System.Time(mm),45) | String.IsEqual(System.Time(mm),46) | String.IsEqual(System.Time(mm),47) | String.IsEqual(System.Time(mm),48)]">Ł</value>
		<value condition="[String.IsEqual(System.Time(hh),10) | String.IsEqual(System.Time(hh),22)] + [String.IsEqual(System.Time(mm),49) | String.IsEqual(System.Time(mm),50) | String.IsEqual(System.Time(mm),51) | String.IsEqual(System.Time(mm),52) | String.IsEqual(System.Time(mm),53) | String.IsEqual(System.Time(mm),54) | String.IsEqual(System.Time(mm),55) | String.IsEqual(System.Time(mm),56) | String.IsEqual(System.Time(mm),57) | String.IsEqual(System.Time(mm),58) | String.IsEqual(System.Time(mm),59) | String.IsEqual(System.Time(mm),60)]">ł</value>
		<value condition="[String.IsEqual(System.Time(hh),11) | String.IsEqual(System.Time(hh),23)] + [String.IsEqual(System.Time(mm),00) | String.IsEqual(System.Time(mm),01) | String.IsEqual(System.Time(mm),02) | String.IsEqual(System.Time(mm),03) | String.IsEqual(System.Time(mm),04) | String.IsEqual(System.Time(mm),05) | String.IsEqual(System.Time(mm),06) | String.IsEqual(System.Time(mm),07) | String.IsEqual(System.Time(mm),08) | String.IsEqual(System.Time(mm),09) | String.IsEqual(System.Time(mm),10) | String.IsEqual(System.Time(mm),11) | String.IsEqual(System.Time(mm),12)]">Ń</value>
		<value condition="[String.IsEqual(System.Time(hh),11) | String.IsEqual(System.Time(hh),23)] + [String.IsEqual(System.Time(mm),13) | String.IsEqual(System.Time(mm),14) | String.IsEqual(System.Time(mm),15) | String.IsEqual(System.Time(mm),16) | String.IsEqual(System.Time(mm),17) | String.IsEqual(System.Time(mm),18) | String.IsEqual(System.Time(mm),19) | String.IsEqual(System.Time(mm),20) | String.IsEqual(System.Time(mm),21) | String.IsEqual(System.Time(mm),22) | String.IsEqual(System.Time(mm),23) | String.IsEqual(System.Time(mm),24)]">ń</value>
		<value condition="[String.IsEqual(System.Time(hh),11) | String.IsEqual(System.Time(hh),23)] + [String.IsEqual(System.Time(mm),25) | String.IsEqual(System.Time(mm),26) | String.IsEqual(System.Time(mm),27) | String.IsEqual(System.Time(mm),28) | String.IsEqual(System.Time(mm),29) | String.IsEqual(System.Time(mm),30) | String.IsEqual(System.Time(mm),31) | String.IsEqual(System.Time(mm),32) | String.IsEqual(System.Time(mm),33) | String.IsEqual(System.Time(mm),34) | String.IsEqual(System.Time(mm),35) | String.IsEqual(System.Time(mm),36)]">Ņ</value>
		<value condition="[String.IsEqual(System.Time(hh),11) | String.IsEqual(System.Time(hh),23)] + [String.IsEqual(System.Time(mm),37) | String.IsEqual(System.Time(mm),38) | String.IsEqual(System.Time(mm),39) | String.IsEqual(System.Time(mm),40) | String.IsEqual(System.Time(mm),41) | String.IsEqual(System.Time(mm),42) | String.IsEqual(System.Time(mm),43) | String.IsEqual(System.Time(mm),44) | String.IsEqual(System.Time(mm),45) | String.IsEqual(System.Time(mm),46) | String.IsEqual(System.Time(mm),47) | String.IsEqual(System.Time(mm),48)]">ņ</value>
		<value condition="[String.IsEqual(System.Time(hh),11) | String.IsEqual(System.Time(hh),23)] + [String.IsEqual(System.Time(mm),49) | String.IsEqual(System.Time(mm),50) | String.IsEqual(System.Time(mm),51) | String.IsEqual(System.Time(mm),52) | String.IsEqual(System.Time(mm),53) | String.IsEqual(System.Time(mm),54) | String.IsEqual(System.Time(mm),55) | String.IsEqual(System.Time(mm),56) | String.IsEqual(System.Time(mm),57) | String.IsEqual(System.Time(mm),58) | String.IsEqual(System.Time(mm),59) | String.IsEqual(System.Time(mm),60)]">Ň</value>
	</variable>
	<variable name="Homeblade-Clock-Min">
		<value condition="String.IsEqual(System.Time(mm),01)">Ç</value>
		<value condition="String.IsEqual(System.Time(mm),02)">A</value>
		<value condition="String.IsEqual(System.Time(mm),03)">B</value>
		<value condition="String.IsEqual(System.Time(mm),04)">C</value>
		<value condition="String.IsEqual(System.Time(mm),05)">D</value>
		<value condition="String.IsEqual(System.Time(mm),06)">E</value>
		<value condition="String.IsEqual(System.Time(mm),07)">F</value>
		<value condition="String.IsEqual(System.Time(mm),08)">G</value>
		<value condition="String.IsEqual(System.Time(mm),09)">H</value>
		<value condition="String.IsEqual(System.Time(mm),10)">I</value>
		<value condition="String.IsEqual(System.Time(mm),11)">J</value>
		<value condition="String.IsEqual(System.Time(mm),12)">K</value>
		<value condition="String.IsEqual(System.Time(mm),13)">L</value>
		<value condition="String.IsEqual(System.Time(mm),14)">M</value>
		<value condition="String.IsEqual(System.Time(mm),15)">N</value>
		<value condition="String.IsEqual(System.Time(mm),16)">O</value>
		<value condition="String.IsEqual(System.Time(mm),17)">P</value>
		<value condition="String.IsEqual(System.Time(mm),18)">Q</value>
		<value condition="String.IsEqual(System.Time(mm),19)">R</value>
		<value condition="String.IsEqual(System.Time(mm),20)">S</value>
		<value condition="String.IsEqual(System.Time(mm),21)">T</value>
		<value condition="String.IsEqual(System.Time(mm),22)">U</value>
		<value condition="String.IsEqual(System.Time(mm),23)">V</value>
		<value condition="String.IsEqual(System.Time(mm),24)">W</value>
		<value condition="String.IsEqual(System.Time(mm),25)">X</value>
		<value condition="String.IsEqual(System.Time(mm),26)">Y</value>
		<value condition="String.IsEqual(System.Time(mm),27)">Z</value>
		<value condition="String.IsEqual(System.Time(mm),28)">a</value>
		<value condition="String.IsEqual(System.Time(mm),29)">b</value>
		<value condition="String.IsEqual(System.Time(mm),30)">c</value>
		<value condition="String.IsEqual(System.Time(mm),31)">d</value>
		<value condition="String.IsEqual(System.Time(mm),32)">e</value>
		<value condition="String.IsEqual(System.Time(mm),33)">f</value>
		<value condition="String.IsEqual(System.Time(mm),34)">g</value>
		<value condition="String.IsEqual(System.Time(mm),35)">h</value>
		<value condition="String.IsEqual(System.Time(mm),36)">i</value>
		<value condition="String.IsEqual(System.Time(mm),37)">j</value>
		<value condition="String.IsEqual(System.Time(mm),38)">k</value>
		<value condition="String.IsEqual(System.Time(mm),39)">l</value>
		<value condition="String.IsEqual(System.Time(mm),40)">m</value>
		<value condition="String.IsEqual(System.Time(mm),41)">n</value>
		<value condition="String.IsEqual(System.Time(mm),42)">o</value>
		<value condition="String.IsEqual(System.Time(mm),43)">p</value>
		<value condition="String.IsEqual(System.Time(mm),44)">q</value>
		<value condition="String.IsEqual(System.Time(mm),45)">r</value>
		<value condition="String.IsEqual(System.Time(mm),46)">s</value>
		<value condition="String.IsEqual(System.Time(mm),47)">t</value>
		<value condition="String.IsEqual(System.Time(mm),48)">u</value>
		<value condition="String.IsEqual(System.Time(mm),49)">v</value>
		<value condition="String.IsEqual(System.Time(mm),50)">w</value>
		<value condition="String.IsEqual(System.Time(mm),51)">x</value>
		<value condition="String.IsEqual(System.Time(mm),52)">y</value>
		<value condition="String.IsEqual(System.Time(mm),53)">z</value>
		<value condition="String.IsEqual(System.Time(mm),54)">À</value>
		<value condition="String.IsEqual(System.Time(mm),55)">Á</value>
		<value condition="String.IsEqual(System.Time(mm),56)">Â</value>
		<value condition="String.IsEqual(System.Time(mm),57)">Ã</value>
		<value condition="String.IsEqual(System.Time(mm),58)">Ä</value>
		<value condition="String.IsEqual(System.Time(mm),59)">Å</value>
		<value condition="String.IsEqual(System.Time(mm),00)">Æ</value>
	</variable>
	<variable name="Homeblade-Clock-Sec">
		<value condition="String.IsEqual(System.Time(ss),00)">ć</value>
		<value condition="String.IsEqual(System.Time(ss),01)">Ì</value>
		<value condition="String.IsEqual(System.Time(ss),02)">Í</value>
		<value condition="String.IsEqual(System.Time(ss),03)">Î</value>
		<value condition="String.IsEqual(System.Time(ss),04)">Ï</value>
		<value condition="String.IsEqual(System.Time(ss),05)">Ð</value>
		<value condition="String.IsEqual(System.Time(ss),06)">Ñ</value>
		<value condition="String.IsEqual(System.Time(ss),07)">Ò</value>
		<value condition="String.IsEqual(System.Time(ss),08)">Ó</value>
		<value condition="String.IsEqual(System.Time(ss),09)">Ô</value>
		<value condition="String.IsEqual(System.Time(ss),10)">Õ</value>
		<value condition="String.IsEqual(System.Time(ss),11)">Ö</value>
		<value condition="String.IsEqual(System.Time(ss),12)">×</value>
		<value condition="String.IsEqual(System.Time(ss),13)">Ø</value>
		<value condition="String.IsEqual(System.Time(ss),14)">Ù</value>
		<value condition="String.IsEqual(System.Time(ss),15)">Ú</value>
		<value condition="String.IsEqual(System.Time(ss),16)">Û</value>
		<value condition="String.IsEqual(System.Time(ss),17)">Ü</value>
		<value condition="String.IsEqual(System.Time(ss),18)">Ý</value>
		<value condition="String.IsEqual(System.Time(ss),19)">Þ</value>
		<value condition="String.IsEqual(System.Time(ss),20)">ß</value>
		<value condition="String.IsEqual(System.Time(ss),21)">à</value>
		<value condition="String.IsEqual(System.Time(ss),22)">á</value>
		<value condition="String.IsEqual(System.Time(ss),23)">â</value>
		<value condition="String.IsEqual(System.Time(ss),24)">ã</value>
		<value condition="String.IsEqual(System.Time(ss),25)">ä</value>
		<value condition="String.IsEqual(System.Time(ss),26)">å</value>
		<value condition="String.IsEqual(System.Time(ss),27)">æ</value>
		<value condition="String.IsEqual(System.Time(ss),28)">ç</value>
		<value condition="String.IsEqual(System.Time(ss),29)">è</value>
		<value condition="String.IsEqual(System.Time(ss),30)">é</value>
		<value condition="String.IsEqual(System.Time(ss),31)">ê</value>
		<value condition="String.IsEqual(System.Time(ss),32)">ë</value>
		<value condition="String.IsEqual(System.Time(ss),33)">ì</value>
		<value condition="String.IsEqual(System.Time(ss),34)">í</value>
		<value condition="String.IsEqual(System.Time(ss),35)">î</value>
		<value condition="String.IsEqual(System.Time(ss),36)">ï</value>
		<value condition="String.IsEqual(System.Time(ss),37)">ð</value>
		<value condition="String.IsEqual(System.Time(ss),38)">ñ</value>
		<value condition="String.IsEqual(System.Time(ss),39)">ò</value>
		<value condition="String.IsEqual(System.Time(ss),40)">ó</value>
		<value condition="String.IsEqual(System.Time(ss),41)">ô</value>
		<value condition="String.IsEqual(System.Time(ss),42)">õ</value>
		<value condition="String.IsEqual(System.Time(ss),43)">ö</value>
		<value condition="String.IsEqual(System.Time(ss),44)">÷</value>
		<value condition="String.IsEqual(System.Time(ss),45)">ø</value>
		<value condition="String.IsEqual(System.Time(ss),46)">ù</value>
		<value condition="String.IsEqual(System.Time(ss),47)">ú</value>
		<value condition="String.IsEqual(System.Time(ss),48)">û</value>
		<value condition="String.IsEqual(System.Time(ss),49)">ü</value>
		<value condition="String.IsEqual(System.Time(ss),50)">ý</value>
		<value condition="String.IsEqual(System.Time(ss),51)">þ</value>
		<value condition="String.IsEqual(System.Time(ss),52)">ÿ</value>
		<value condition="String.IsEqual(System.Time(ss),53)">Ā</value>
		<value condition="String.IsEqual(System.Time(ss),54)">ā</value>
		<value condition="String.IsEqual(System.Time(ss),55)">Ă</value>
		<value condition="String.IsEqual(System.Time(ss),56)">ă</value>
		<value condition="String.IsEqual(System.Time(ss),57)">Ą</value>
		<value condition="String.IsEqual(System.Time(ss),58)">ą</value>
		<value condition="String.IsEqual(System.Time(ss),59)">Ć</value>
	</variable>
	<include name="Homeblade-Clock">
		<control type="label">
			<width>200</width>
			<height>180</height>
			<font>Clock</font>
			<shadowcolor>TextColorLight</shadowcolor>
			<label>Ŋ</label>
		</control>
		<control type="label">
			<description>stunden</description>
			<width>200</width>
			<height>180</height>
			<font>Clock</font>
			<shadowcolor>TextColorMedium</shadowcolor>
			<textcolor>$VAR[SecondaryCol]</textcolor>
			<label>$VAR[Homeblade-Clock-Hour]</label>
		</control>
		<control type="label">
			<description>minuten</description>
			<width>200</width>
			<height>180</height>
			<font>Clock</font>
			<shadowcolor>TextColorMedium</shadowcolor>
			<textcolor>$VAR[SecondaryCol]</textcolor>
			<label>$VAR[Homeblade-Clock-Min]</label>
		</control>
		<control type="label">
			<description>sekunden</description>
			<width>200</width>
			<height>180</height>
			<font>Clock</font>
			<shadowcolor>TextColorMedium</shadowcolor>
			<textcolor>$VAR[PrimaryCol]</textcolor>
			<label>$VAR[Homeblade-Clock-Sec]</label>
		</control>
	</include>

	<include name="AddoninfoButtonValues"><!-- Addoninfo custom fake dialog buttonvorlage -->
		<width>702</width>
		<height>sidebar.label.height</height>
		<aligny>top</aligny>
		<textoffsety>5</textoffsety><!-- offsety flipy -->
		<textoffsetx>40</textoffsetx>
		<radioposx>610</radioposx>
		<radioposy>0</radioposy>
		<font>LightNormal</font>
		<texturedown></texturedown>
		<textureupfocus></textureupfocus>
		<texturedownfocus></texturedownfocus>
		<textureradiofocus></textureradiofocus>
		<textureradionofocus></textureradionofocus>
		<texturefocus flipy="true" border="14,0,14,0" colordiffuse="$VAR[PrimaryCol]">cycle/full-11.png</texturefocus>
		<texturenofocus></texturenofocus>
	</include>
	<!-- ######### settings ######### -->
	<include name="SettingMenu-ListDimension"><!-- Einstellungen Sideblade groesse -->
		<width>388</width>
		<height>975</height>
		<itemgap>5</itemgap>
	</include>
	<include name="SettingMenu-BG"><!-- Einstellungen Sideblade icon hintergrund -->
		<control type="image">
			<description>Hintergrund</description>
			<width>419</width>
			<height>1080</height>
			<texture colordiffuse="$VAR[DialogCol]">white.png</texture>
		</control>
		<control type="image">
			<left>419</left>
			<width>8</width>
			<height>1080</height>
			<texture colordiffuse="ShadowColor">cycle/shadow-right-8.png</texture>
		</control>
	</include>
	<include name="SettingMenu-IconBG"><!-- Einstellungen Sideblade icon hintergrund -->
		<control type="image">
			<description>Iconhintergrund</description>
			<width>100</width>
			<height>1080</height>
			<texture background="true" colordiffuse="$VAR[PrimaryCol]">white.png</texture>
		</control>
	</include>
	<include name="SettingMenu-Breadcumb"><!-- Einstellungen breadcumb -->
		<control type="group">
			<left>120</left>
			<top>40</top>
			<width>sidebar.breadcumblabel.width</width>
			<height>1080</height>
			<control type="label">
				<description>Breadcumb icon</description>
				<left>-100</left>
				<include>SidebarIcon-Dimension</include>
				<include>SidebarIcon-ColorFO</include>
				<label>$VAR[SettingMenu-BreadcumbIcon]</label>
			</control>
			<control type="grouplist">
				<width>sidebar.breadcumblabel.width</width>
				<height>100</height>
				<control type="label">
					<description>Breadcumb1 label default titel</description>
					<width>sidebar.breadcumblabel.width</width>
					<height>sidebar.breadcumblabel.height</height>
					<font>BreadcumbNormal</font>
					<label>$VAR[SettingMenu-Breadcrumb]</label>
				</control>
				<control type="label">
					<description>Breadcumb2 label</description>
					<width>sidebar.breadcumblabel.width</width>
					<height>sidebar.breadcumblabel.height</height>
					<aligny>top</aligny>
					<font>BreadcumbSmall</font>
					<label>$VAR[SettingMenu-Breadcrumb2]</label>
				</control>
			</control>
		</control>
	</include>
	<include name="SettingMenu-MenueButton"><!-- Einstellungen Sideblade buttonvorlagen -->
		<width>330</width>
		<include>Item.top.height65</include>
		<textoffsetx>20</textoffsetx>
		<font>LightNormal</font>
		<texturefocus border="0,0,14,0" colordiffuse="$VAR[PrimaryCol]">buttons/mainsliderightsubbutton.png</texturefocus>
	</include>
	<include name="SettingMenu-SettingButton">
		<width>1125</width>
		<include>Item.top.height65</include>
		<textoffsetx>25</textoffsetx>
		<radioposx>1050</radioposx>
		<radioposy>5</radioposy>
		<invalidcolor>$VAR[SelectedCol]</invalidcolor>
		<texturefocus border="14,0,14,0" colordiffuse="$VAR[PrimaryCol]">cycle/full-11.png</texturefocus>
		<texturenofocus></texturenofocus>
	</include>
	<include name="SettingMenu-SettingLabel">
		<width>1125</width>
		<height>80</height>
		<aligny>top</aligny>
		<font>BoldNormal</font>
		<textoffsetx>25</textoffsetx>
		<textoffsety>30</textoffsety>
	</include>
	<variable name="EventLog-Levellabel">
		<value condition="String.Contains(Control.GetLabel(22),Höhere Level anzeigen)">Höhere Level</value>
		<value>$INFO[Control.GetLabel(22)]</value>
	</variable>

	<!-- ######### Shutdown menue ######### -->
	<include name="Shutdown-Button"><!-- Shutdown Sideblade buttonvorlagen -->
		<width>330</width>
		<include>Item.top.height65</include>
		<font>LightNormal</font>
		<texturenofocus></texturenofocus>
		<texturefocus colordiffuse="$VAR[PrimaryCol]">white.png</texturefocus>
	</include>

	<!-- ######### context menue ######### -->
	<include name="Context-Button"><!-- Context Sideblade buttonvorlagen -->
		<font>RegularSmall</font>
		<width>368</width>
		<include>Item.top.height65</include>
		<textoffsetx>20</textoffsetx>
		<texturefocus border="0,0,14,0" colordiffuse="$VAR[PrimaryCol]">cycle/right-11.png</texturefocus>
	</include>

	<!-- ######### kringel menue ######### -->
	<include name="Cycle-LogoMenue">
		<control type="group">
			<left>0</left>
			<top>0</top>
			<control type="image">
				<left>-1</left>
				<top>-12</top>
				<width>408</width>
				<height>408</height>
				<texture colordiffuse="ShadowColor">logo/logo_border.png</texture>
			</control>
			<control type="label">
				<width>405</width>
				<height>390</height>
				<font>IconLogo</font>
				<align>center</align>
				<textoffsetx>10</textoffsetx>
				<textcolor>$VAR[PrimaryCol]</textcolor>
				<label>ķ</label>
			</control>
			<control type="label">
				<width>405</width>
				<height>390</height>
				<font>IconLogo</font>
				<align>center</align>
				<textoffsetx>10</textoffsetx>
				<textcolor>$VAR[SecondaryLogoCol]</textcolor>
				<label>ĸ</label>
			</control>
			<control type="label">
				<width>405</width>
				<height>390</height>
				<font>IconLogo</font>
				<align>center</align>
				<textoffsetx>10</textoffsetx>
				<textcolor>$VAR[SecondaryLogoCol]</textcolor>
				<label>Ĺ</label>
			</control>
			<control type="label">
				<width>405</width>
				<height>390</height>
				<font>IconLogo</font>
				<align>center</align>
				<textoffsetx>10</textoffsetx>
				<textcolor>$VAR[CirclesCol]</textcolor>
				<label>ĺ</label>
			</control>
		</control>
	</include>
	<!-- ######### home ######### -->
	<variable name="Cycle-HomeMenue-Icon"><!-- mitte -->
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Serien)">D</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Serienplayliste)">D</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Episodenplayliste)">D</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Filme)">E</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Filmplayliste)">E</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Video)">S</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Musik)">Ȃ</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Einstellungen)">ĭ</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Wetter)">:</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Addons)">Ĝ</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Programme)">ǖ</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Bilder)">À</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Favoriten)">ę</value>
		<value>Ŕ</value>
	</variable>
	<variable name="Cycle-HomeMenue-Action">
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Filmplayliste) | String.IsEqual(skin.string(HomeMenueStartItem),Serienplayliste) | String.IsEqual(skin.string(HomeMenueStartItem),Episodenplayliste)">ActivateWindow(Videos,$INFO[Skin.string(HomeMenueStartItemPLS)],return)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Filme)">ActivateWindow(Videos,MovieTitles,return)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Serien)">ActivateWindow(Videos,TvshowTitles,return)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Video)">ActivateWindow(Videos,Files,return)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Musik)">ActivateWindow(Music)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Einstellungen)">ActivateWindow(Settings)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Wetter)">ActivateWindow(weather)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Addons)">ActivateWindow(addonbrowser)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Programme)">ActivateWindow(programs)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Bilder)">ActivateWindow(pictures)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItem),Favoriten)">ActivateWindow(Favourites)</value>
	</variable>

	<variable name="Cycle-HomeMenue-IconR"><!-- rechts -->
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Filme)">E</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Serien)">D</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Video)">S</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Musik)">Ȃ</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Einstellungen)">ĭ</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Wetter)">:</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Addons)">Ĝ</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Programme)">ǖ</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Bilder)">À</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Favoriten)">ę</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Deaktivieren)">ģ</value>
		<value>Ŕ</value>
	</variable>
	<variable name="Cycle-HomeMenue-ActionR">
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Filme)">ActivateWindow(Videos,MovieTitles,return)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Serien)">ActivateWindow(Videos,tvshowtitles,return)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Video)">ActivateWindow(Videos,Files,return)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Musik)">ActivateWindow(Music)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Einstellungen)">ActivateWindow(Settings)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Wetter)">ActivateWindow(weather)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Addons)">ActivateWindow(addonbrowser)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Programme)">ActivateWindow(programs)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Bilder)">ActivateWindow(pictures)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemR),Favoriten)">ActivateWindow(Favourites)</value>
		<value>noop</value>
	</variable>

	<variable name="Cycle-HomeMenue-IconL"><!-- links -->
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Filme)">E</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Serien)">D</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Video)">S</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Musik)">Ȃ</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Einstellungen)">ĭ</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Wetter)">:</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Addons)">Ĝ</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Programme)">ǖ</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Bilder)">À</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Favoriten)">ę</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Deaktivieren)">ģ</value>
		<value>Ŕ</value>
	</variable>
	<variable name="Cycle-HomeMenue-ActionL">
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Filme)">ActivateWindow(Videos,MovieTitles,return)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Serien)">ActivateWindow(Videos,tvshowtitles,return)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Video)">ActivateWindow(Videos,Files,return)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Musik)">ActivateWindow(Music)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Einstellungen)">ActivateWindow(Settings)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Wetter)">ActivateWindow(weather)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Addons)">ActivateWindow(addonbrowser)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Programme)">ActivateWindow(programs)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Bilder)">ActivateWindow(pictures)</value>
		<value condition="String.IsEqual(skin.string(HomeMenueStartItemL),Favoriten)">ActivateWindow(Favourites)</value>
		<value>noop</value>
	</variable>

	<!-- ######### video Logo als menue ######### -->
	<variable name="Cycle-VideoMenue-Icon"><!-- mitte -->
		<value>R</value>
	</variable>
	<include name="Cycle-VideoMenue-Action">
		<onclick>ActivateWindow(1101)</onclick>
	</include>
	<variable name="Cycle-VideoMenue-IconR"><!-- rechts -->
		<value condition="String.StartsWith(Container.FolderPath,special://skin/playlists/TV_)">D</value>
		<value condition="String.StartsWith(Container.FolderPath,special://skin/playlists/Episode_)">D</value>
		<value condition="String.StartsWith(Container.FolderPath,special://skin/playlists/Film_)">E</value>
		<value condition="String.StartsWith(Container.FolderPath,special://skin/playlists/Doku_Serie)">i</value><!-- pls switch zu film -->
		<value condition="String.StartsWith(Container.Folderpath,special://skin/playlists/Doku_Film)">i</value><!-- pls switch zu serie -->
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://tvshows)">&lt;</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://movies)">&lt;</onfocus>
		<value>&lt;</value>
	</variable>
	<include name="Cycle-VideoMenue-ActionR">
		<onfocus condition="String.StartsWith(Container.FolderPath,special://skin/playlists/Doku_Serie)">ActivateWindow(Videos,$INFO[Skin.String(FilmDokuContent)],return)</onfocus><!-- pls switch zu film -->
		<onfocus condition="String.StartsWith(Container.Folderpath,special://skin/playlists/Doku_Film)">ActivateWindow(Videos,$INFO[Skin.String(TVDokuContent)],return)</onfocus><!-- pls switch zu serie -->
		<!-- serie switch back propertys -->
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://tvshows)">SetProperty(PreviouseWindowVideos,ActivateWindow(videos,tvshows,return),videos)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,library://video/tvshows)">SetProperty(PreviouseWindowVideos,ActivateWindow(videos,tvshows,return),videos)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://tvshows/titles/)">SetProperty(PreviouseWindowVideos,ActivateWindow(Videos,TvShowTitles,return),videos)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://tvshows/genres/)">SetProperty(PreviouseWindowVideos,ActivateWindow(videos,tvshowgenres,return),videos)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://tvshows/years/)">SetProperty(PreviouseWindowVideos,ActivateWindow(videos,tvshowyears,return),videos)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://tvshows/actors/)">SetProperty(PreviouseWindowVideos,ActivateWindow(videos,tvshowactors,return),videos)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://tvshows/studios/)">SetProperty(PreviouseWindowVideos,ActivateWindow(videos,tvshowstudios,return),videos)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://recentlyaddedepisodes)">SetProperty(PreviouseWindowVideos,ActivateWindow(videos,recentlyaddedepisodes,return),videos)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://tvshows/tags/)">SetProperty(PreviouseWindowVideos,ActivateWindow(videos,tvshowtags,return),videos)</onfocus>
		<!-- film switch back propertys -->
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://movies/titles/)">SetProperty(PreviouseWindowVideos,ActivateWindow(videos,movietitles,return),videos)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,library://video/movies)">SetProperty(PreviouseWindowVideos,ActivateWindow(videos,movies,return),videos)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://movies/genres/)">SetProperty(PreviouseWindowVideos,ActivateWindow(videos,moviegenres,return),videos)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://movies/years/)">SetProperty(PreviouseWindowVideos,ActivateWindow(videos,movieyears,return),videos)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://movies/actors/)">SetProperty(PreviouseWindowVideos,ActivateWindow(videos,movieactors,return),videos)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://movies/studios/)">SetProperty(PreviouseWindowVideos,ActivateWindow(videos,moviestudios,return),videos)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://movies/tags/)">SetProperty(PreviouseWindowVideos,ActivateWindow(videos,movietags,return),videos)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://movies/countries/)">SetProperty(PreviouseWindowVideos,ActivateWindow(videos,moviecountries,return),videos)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://movies/directors/)">SetProperty(PreviouseWindowVideos,ActivateWindow(videos,moviedirectors,return),videos)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://movies/sets/)">SetProperty(PreviouseWindowVideos,ActivateWindow(videos,moviesets,return),videos)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://recentlyaddedmovies/)">SetProperty(PreviouseWindowVideos,ActivateWindow(videos,recentlyaddedmovies,return),videos)</onfocus>
		
		<!-- test zurueck bei staffel und episode vielleicht rausnehmen bzw. mit back erst zurueck wenn activate nicht geht -->
		<onfocus condition="String.StartsWith(Container.FolderPath,special://skin/playlists/TV_)">$INFO[Window(videos).Property(PreviouseWindowVideos)]</onfocus>
		<onfocus condition="String.StartsWith(Container.FolderPath,special://skin/playlists/Episode_)">$INFO[Window(videos).Property(PreviouseWindowVideos)]</onfocus>
		<onfocus condition="String.StartsWith(Container.FolderPath,special://skin/playlists/Film_)">$INFO[Window(videos).Property(PreviouseWindowVideos)]</onfocus>
		
		<!-- test serie action bei staffel und episode vielleicht rausnehmen bzw. mit back erst zurueck wenn activate nicht geht -->
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://tvshows) + !String.Contains(Container.FolderPath,special://skin/playlists)">ActivateWindow(Videos,$INFO[Skin.string(CycleMyNavVideoTVQuicklinkContent)],return)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://recentlyaddedepisodes) + !String.Contains(Container.FolderPath,special://skin/playlists)">ActivateWindow(Videos,$INFO[Skin.string(CycleMyNavVideoTVQuicklinkContent)],return)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,library://video/tvshows) + !String.Contains(Container.FolderPath,special://skin/playlists)">ActivateWindow(Videos,$INFO[Skin.string(CycleMyNavVideoTVQuicklinkContent)],return)</onfocus>

		<!-- test film action -->
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://movies) + !String.Contains(Container.FolderPath,special://skin/playlists)">ActivateWindow(Videos,$INFO[Skin.string(CycleMyNavVideoMovieQuicklinkContent)],return)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://recentlyaddedmovies/) + !String.Contains(Container.FolderPath,special://skin/playlists)">ActivateWindow(Videos,$INFO[Skin.string(CycleMyNavVideoMovieQuicklinkContent)],return)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,library://video/movies) + !String.Contains(Container.FolderPath,special://skin/playlists)">ActivateWindow(Videos,$INFO[Skin.string(CycleMyNavVideoMovieQuicklinkContent)],return)</onfocus>
		
		<!--<onfocus condition="String.IsEqual(Container.FolderPath,special://skin/playlists/)">ActivateWindow(Videos,library://video/,return)</onfocus> playlist root -->
	</include>

	<variable name="Cycle-VideoMenue-IconL"><!-- links -->
		<value condition="String.StartsWith(Container.FolderPath,special://skin/playlists/TV_)">S</value><!-- pls switch zu back -->
		<value condition="String.StartsWith(Container.FolderPath,special://skin/playlists/Doku_Serie)">S</value><!-- pls switch zu back -->
		<value condition="String.StartsWith(Container.FolderPath,special://skin/playlists/Episode_)">S</value><!-- pls switch zu back -->
		<value condition="String.StartsWith(Container.FolderPath,special://skin/playlists/Film_)">S</value><!-- pls switch zu back -->
		<value condition="String.StartsWith(Container.Folderpath,videodb://tvshows)">S</value><!-- serie aktiv switch zu film -->
		<value condition="String.StartsWith(Container.Folderpath,videodb://movies)">S</value><!-- film aktiv switch zu serie -->
		<value condition="String.StartsWith(Container.Folderpath,special://skin/playlists/Doku_Film)">S</value><!-- film aktiv switch zu serie -->
		<value>S</value>
	</variable>
	<include name="Cycle-VideoMenue-ActionL">
		<onfocus condition="String.StartsWith(Container.FolderPath,special://skin/playlists/TV_)">ActivateWindow(Videos,library://video/tvshows)</onfocus><!-- serie aktiv switch root -->
		<onfocus condition="String.StartsWith(Container.FolderPath,special://skin/playlists/Doku_)">$INFO[Window(videos).Property(PreviouseWindowVideos)]</onfocus><!-- switch back -->
		<onfocus condition="String.StartsWith(Container.FolderPath,special://skin/playlists/Episode_)">ActivateWindow(Videos,library://video/tvshows)</onfocus><!-- serie aktiv switch root -->
		<onfocus condition="String.StartsWith(Container.FolderPath,special://skin/playlists/Film_)">ActivateWindow(Videos,library://video/movies)</onfocus><!-- film aktiv switch root -->
		<onfocus condition="String.StartsWith(Container.FolderPath,special://skin/playlists/)">ActivateWindow(Videos,library://video/,return)</onfocus><!-- playlist root -->
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://tvshows)">ActivateWindow(Videos,library://video/tvshows)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://recentlyaddedepisodes)">ActivateWindow(Videos,library://video/tvshows)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://movies)">ActivateWindow(Videos,library://video/movies)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,videodb://recentlyaddedmovies)">ActivateWindow(Videos,library://video/movies)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,library://video/tvshows)">Action(back)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,library://video/tvshows)">SetFocus(50)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,library://video/movies)">Action(back)</onfocus>
		<onfocus condition="String.StartsWith(Container.Folderpath,library://video/movies)">SetFocus(50)</onfocus>
	</include>

	<!-- ######### wetter Logo als menue ######### -->
	<variable name="Cycle-WeatherMenue-Icon"><!-- mitte refresh -->
		<value>i</value>
	</variable>
	<include name="Cycle-WeatherMenue-Action">
		<onclick>Weather.Refresh</onclick><!-- refresh -->
	</include>

	<variable name="Cycle-WeatherMenue-IconR"><!-- rechts setting -->
		<value>ĭ</value>
	</variable>
	<include name="Cycle-WeatherMenue-ActionR">
		<onfocus>ActivateWindow(ServiceSettings,weather)</onfocus>
	</include>
	<variable name="Cycle-WeatherMenue-IconL"><!-- links zueruck -->
		<value condition="Window.Previous(home)">;</value>
		<value condition="Window.Previous(videos)">S</value>
		<value condition="Window.Previous(music)">Ȃ</value>
		<value condition="Window.Previous(EventLog.xml)">;</value>
		<value condition="Window.Previous(SettingsSystemInfo.xml)">;</value>
		<value condition="Window.Previous(SettingsProfile.xml)">;</value>
		<value condition="Window.Previous(Settings.xml)">;</value>
		<value condition="Window.Previous(SkinSettings.xml)">;</value>
		<value condition="Window.Previous(SettingsCategory.xml)">;</value>
		<value condition="Window.Previous(pictures)">Á</value>
		<value condition="Window.Previous(addonbrowser)">ī</value>
		<value condition="Window.Previous(programs)">ǖ</value>
		<value condition="Window.Previous(FileManager.xml)">Ī</value>
		<value condition="Window.Previous(musicplaylisteditor)">Ǻ</value>
		<value>Ü</value>
	</variable>
	<include name="Cycle-WeatherMenue-ActionL">
		<onfocus condition="Window.Previous(EventLog.xml)">ActivateWindow(home)</onfocus>
		<onfocus condition="Window.Previous(SettingsSystemInfo.xml)">ActivateWindow(home)</onfocus>
		<onfocus condition="Window.Previous(SettingsProfile.xml)">ActivateWindow(home)</onfocus>
		<onfocus condition="Window.Previous(Settings.xml)">ActivateWindow(home)</onfocus>
		<onfocus condition="Window.Previous(SkinSettings.xml)">ActivateWindow(home)</onfocus>
		<onfocus condition="Window.Previous(SettingsCategory.xml)">ActivateWindow(home)</onfocus>
		<onfocus condition="!Window.Previous(SkinSettings.xml) + !Window.Previous(Settings.xml) + !Window.Previous(SettingsProfile.xml) + !Window.Previous(SettingsSystemInfo.xml) + !Window.Previous(EventLog.xml) + !Window.Previous(SettingsCategory.xml)">ParentDir</onfocus>
	</include>
	
	
	<include name="Keyboard-BG">
		<control type="image">
			<width>60</width>
			<height>sidebar.breadcumblabel.height</height>
			<texture border="8" colordiffuse="$VAR[CirclesCol]">views/white8.png</texture>
		</control>
	</include>
	<include name="Keyboard-Label">
		<width>60</width>
		<height>sidebar.breadcumblabel.height</height>
		<align>center</align>
		<aligny>center</aligny>
		<font>IconSideblade</font>
	</include>
	<include name="Keyboard1234-Icons">
		<param name="Keyboard-Icon-red"/>
		<param name="Keyboard-Icon-green"/>
		<param name="Keyboard-Icon-blue"/>
		<param name="Keyboard-Icon-yellow"/>
		<definition>
			<control type="grouplist">
				<left>1570</left>
				<top>1010</top>
				<width>300</width>
				<height>sidebar.breadcumblabel.height</height>
				<itemgap>10</itemgap>
				<align>right</align>
				<orientation>horizontal</orientation>
				<animation type="Conditional" condition="true">
					<effect type="fade" end="10" time="0" />
				</animation>
				<include>Keyboard-BG</include>
				<include>Keyboard-BG</include>
				<include>Keyboard-BG</include>
				<include>Keyboard-BG</include>
			</control>
			<control type="grouplist">
				<left>1570</left>
				<top>1010</top>
				<width>300</width>
				<height>sidebar.breadcumblabel.height</height>
				<itemgap>10</itemgap>
				<align>right</align>
				<orientation>horizontal</orientation>
				<animation type="Conditional" condition="true">
					<effect type="fade" end="60" time="0" />
				</animation>
				<control type="label">
					<include>Keyboard-Label</include>
					<textcolor>red</textcolor>
					<label>$PARAM[Keyboard-Icon-red]</label>
				</control>
				<control type="label">
					<include>Keyboard-Label</include>
					<textcolor>green</textcolor>
					<label>$PARAM[Keyboard-Icon-green]</label>
				</control>
				<control type="label">
					<include>Keyboard-Label</include>
					<textcolor>blue</textcolor>
					<label>$PARAM[Keyboard-Icon-blue]</label>
				</control>
				<control type="label">
					<include>Keyboard-Label</include>
					<textcolor>yellow</textcolor>
					<label>$PARAM[Keyboard-Icon-yellow]</label>
				</control>
			</control>
		</definition>
	</include>
	<include name="Keyboard124-Icons">
		<param name="Keyboard-Icon-red"/>
		<param name="Keyboard-Icon-green"/>
		<param name="Keyboard-Icon-yellow"/>
		<definition>
			<control type="grouplist">
				<left>1570</left>
				<top>1010</top>
				<width>300</width>
				<height>sidebar.breadcumblabel.height</height>
				<itemgap>10</itemgap>
				<align>right</align>
				<orientation>horizontal</orientation>
				<animation type="Conditional" condition="true">
					<effect type="fade" end="10" time="0" />
				</animation>
				<include>Keyboard-BG</include>
				<include>Keyboard-BG</include>
				<include>Keyboard-BG</include>
			</control>
			<control type="grouplist">
				<left>1570</left>
				<top>1010</top>
				<width>300</width>
				<height>sidebar.breadcumblabel.height</height>
				<itemgap>10</itemgap>
				<align>right</align>
				<orientation>horizontal</orientation>
				<animation type="Conditional" condition="true">
					<effect type="fade" end="60" time="0" />
				</animation>
				<control type="label">
					<include>Keyboard-Label</include>
					<textcolor>red</textcolor>
					<label>$PARAM[Keyboard-Icon-red]</label>
				</control>
				<control type="label">
					<include>Keyboard-Label</include>
					<textcolor>green</textcolor>
					<label>$PARAM[Keyboard-Icon-green]</label>
				</control>
				<control type="label">
					<include>Keyboard-Label</include>
					<textcolor>yellow</textcolor>
					<label>$PARAM[Keyboard-Icon-yellow]</label>
				</control>
			</control>
		</definition>
	</include>
	

	<variable name="Widget1-FallbackIcon">
		<value condition="String.IsEqual(Container(301).ListItem.DBType,tvshow)">D</value>
		<value condition="String.IsEqual(Container(301).ListItem.DBType,episode)">D</value>
		<value condition="String.IsEqual(Container(301).ListItem.DBType,movie)">E</value>
		<value condition="String.IsEqual(Container(301).ListItem.DBType,song)">Ȃ</value>
		<value condition="String.IsEqual(Container(301).ListItem.DBType,album)">Ȃ</value>
		<value condition="Container(8100).ListItem.Property(Homeblade-Widget1-Target)">Ǩ</value>
		<value>Ĝ</value>
	</variable>
	<variable name="Widget-label2">
		<value condition="String.IsEqual(ListItem.DBType,tvshow) + !String.IsEmpty(ListItem.Genre)">$INFO[ListItem.Genre]</value>
		<value condition="String.IsEqual(ListItem.DBType,episode) + !String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration,, min.]$INFO[ListItem.DateAdded, | in der Datenbank: , ]</value>
		<value condition="String.IsEqual(ListItem.DBType,movie) + !String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Year]$INFO[ListItem.Duration, | , min.]</value>
		<value condition="String.IsEqual(ListItem.DBType,song)">$INFO[ListItem.Artist,,]$INFO[ListItem.Duration, | , min.]</value>
		<value condition="String.IsEqual(ListItem.DBType,album) + !String.IsEmpty(ListItem.Artist)">$INFO[ListItem.Year]$INFO[ListItem.Artist, | , ]</value>
		<value condition="!String.IsEmpty(ListItem.ChannelName)">$INFO[ListItem.ChannelName]$INFO[ListItem.EpisodeName,, | ]</value>
		<value condition="!String.IsEmpty(ListItem.AddonLastUsed)">$INFO[ListItem.AddonLastUsed, zuletzt verwendet: ,]</value>
		<value condition="!String.IsEmpty(ListItem.AddonName) + String.IsEmpty(ListItem.AddonLastUsed)">zuletzt verwendet: NA</value>
		<value condition="!String.IsEmpty(ListItem.Genre)">$INFO[ListItem.Genre]</value>
	</variable>
	<include name="Widget-ContainerLayout">
		<param name="Container-ID"/>
		<definition>
			<itemlayout width="630" height="60">
				<control type="label">
					<left>80</left>
					<top>10</top>
					<width>520</width>
					<height>40</height>
					<aligny>center</aligny>
					<align>right</align>
					<textcolor>TextColorMedium</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</itemlayout>
			<focusedlayout width="630" height="80">
				<control type="image">
					<left>620</left>
					<width>10</width>
					<height>80</height>
					<texture colordiffuse="$VAR[PrimaryCol]">white.png</texture>
					<visible>Control.HasFocus($PARAM[Container-ID])</visible>
				</control>
				<control type="label">
					<left>80</left>
					<width>520</width>
					<height>40</height>
					<aligny>top</aligny>
					<align>right</align>
					<font>BoldNormal</font>
					<label>$INFO[ListItem.Label]</label>
				</control>
				<control type="label">
					<top>40</top>
					<width>600</width>
					<height>40</height>
					<aligny>top</aligny>
					<align>right</align>
					<font>RegularSmall</font>
					<label>$VAR[Widget-label2]</label>
				</control>
			</focusedlayout>
		</definition>
	</include>
	
	
	
	
	
	
	
	
	
	
	
	
	
	<include name="MenuSlide-ContainerLayout">
		<param name="Container-ID"/>
		<definition>
			<itemlayout width="375" height="70">
				<control type="label">
					<include>Homeblade-LabelDimension</include>
				</control>
			</itemlayout>
			<focusedlayout width="375" height="70">
				<control type="image">
					<width>10</width>
					<height>70</height>
					<texture colordiffuse="$VAR[PrimaryCol]">white.png</texture>
					<visible>Control.HasFocus($PARAM[Container-ID])</visible>
				</control>
				<control type="label">
					<textcolor>$VAR[PrimaryCol]</textcolor>
					<include>Homeblade-LabelDimension</include>
					<scroll>true</scroll>
					<visible>Control.HasFocus($PARAM[Container-ID])</visible>
				</control>
				<control type="label">
					<include>Homeblade-LabelDimension</include>
					<visible>!Control.HasFocus($PARAM[Container-ID])</visible>
				</control>
			</focusedlayout>
		</definition>
	</include>
	
	
	
<include name="MainMenuSlide">
	<control type="group">
		<animation type="Conditional" condition="Window.IsVisible(shutdownmenu) | Window.IsVisible(favourites) | Window.IsVisible(Custom_1120_Options.xml) | Window.IsVisible(Custom_1119_DBOptions.xml) | Window.IsVisible(Custom_1118_WidgetOptions.xml)">
			<effect type="slide" start="0,0" end="-600,0" delay="0" time="300" tween="quadratic" easing="out" reversible="true"/>
		</animation>
		<control type="group" id="8101"><!-- submenue 8101 -->
			<left>-520</left>
			<include>Homeblade-BG</include>
			<animation type="Conditional" condition="Control.HasFocus(8102) | Control.HasFocus(8103)">
				<effect type="slide" end="520,0" delay="180" time="300" tween="quadratic" easing="out" reversible="true"/>
			</animation>
			<control type="label">
				<description>titel</description>
				<left>200</left>
				<top>200</top>
				<width>sidebar.breadcumblabel.width</width>
				<height>sidebar.breadcumblabel.height</height>
				<font>BreadcumbNormal</font>
				<textcolor>TextColorMedium</textcolor>
				<label>$INFO[Container(8100).ListItem.Label2]</label>
			</control>
			<control type="grouplist">
				<left>200</left>
				<top>275</top>
				<width>310</width>
				<height>120</height>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<control type="label">
					<description>Breadcumb2 label</description>
					<width>auto</width>
					<height>120</height>
					<aligny>top</aligny>
					<font>IconSmallBreadcumbs</font>
					<textcolor>TextColorMedium</textcolor>
					<label>$INFO[Container(8100).ListItem.Property(Homeblade-Submenue-Icon)]</label>
				</control>
				<control type="label">
					<description>Breadcumb2 label</description>
					<width>auto</width>
					<height>120</height>
					<font>BreadcumbSmall</font>
					<textcolor>TextColorMedium</textcolor>
					<aligny>top</aligny>
					<label>$INFO[Container(8100).ListItem.Property(Homeblade-Submenue-Label)]</label>
				</control>
			</control>
			<control type="list" id="8102"><!-- Serien/Filme/Musik/addons -->
				<left>160</left>
				<top>415</top>
				<width>375</width>
				<height>490</height>
				<onleft>SetFocus(8100)</onleft>
				<onright fallback="Integer.IsGreater(Container(301).NumItems,0)">SetFocus(300)</onright>
				<scrolltime>200</scrolltime>
				<visible>Container(8100).HasFocus(1) | Container(8100).HasFocus(2) | Container(8100).HasFocus(3) | Container(8100).HasFocus(5)</visible>
				<include content="MenuSlide-ContainerLayout">
					<param name="Container-ID">8102</param>
				</include>
				<content target="$INFO[Container(8100).ListItem.Property(Homeblade-TextWidget-Target)]">$INFO[Container(8100).ListItem.Property(Homeblade-Submenue-Content)]</content>
			</control>
			<control type="list" id="8103"><!-- pvr -->
				<left>160</left>
				<top>415</top>
				<width>375</width>
				<height>490</height>
				<onleft>SetFocus(8100)</onleft>
				<onright fallback="Integer.IsGreater(Container(301).NumItems,0)">SetFocus(300)</onright>
				<scrolltime>200</scrolltime>
				<visible>Container(8100).HasFocus(4)</visible>
				<include content="MenuSlide-ContainerLayout">
					<param name="Container-ID">8103</param>
				</include>
				<content>
					<item id="1">
						<description>EPG</description>
						<label>$LOCALIZE[19069]</label>
						<onclick>ActivateWindow(TVGuide)</onclick>
					</item>
					<item id="2">
						<description>Aufnahmen</description>
						<label>$LOCALIZE[19017]</label>
						<onclick>ActivateWindow(TVRecordings)</onclick>
					</item>
					<item id="2">
						<description>Time</description>
						<label>$LOCALIZE[19040]</label>
						<onclick>ActivateWindow(TVTimers)</onclick>
					</item>
					<item id="2">
						<description>Timer bedingungen</description>
						<label>$LOCALIZE[19138]</label>
						<onclick>ActivateWindow(TVTimerRules)</onclick>
					</item>
					<item id="2">
						<description>Suchen</description>
						<label>$LOCALIZE[137]</label>
						<onclick>ActivateWindow(TVSearch)</onclick>
					</item>
				</content>
			</control>
		</control>
		<control type="group" id="8200"><!-- text widgets 8200 -->
			<left>-520</left>
			<include>Homeblade-BG</include>
			<animation type="Conditional" condition="Control.HasFocus(8100) | ControlGroup(8200).HasFocus">
				<effect type="slide" end="520,0" delay="180" time="300" tween="quadratic" easing="out" reversible="true"/>
			</animation>
			<control type="label">
				<description>Breadcumb1 label default titel</description>
				<left>200</left>
				<top>200</top>
				<width>sidebar.breadcumblabel.width</width>
				<height>sidebar.breadcumblabel.height</height>
				<font>BreadcumbNormal</font>
				<textcolor>TextColorMedium</textcolor>
				<label>$INFO[Container(8100).ListItem.Label2]</label>
			</control>
			<control type="grouplist">
				<left>200</left>
				<top>275</top>
				<width>sidebar.breadcumblabel.width</width>
				<height>120</height>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<control type="label">
					<description>Breadcumb2 label</description>
					<width>auto</width>
					<height>120</height>
					<aligny>top</aligny>
					<font>IconSmallBreadcumbs</font>
					<textcolor>TextColorMedium</textcolor>
					<label>$INFO[Container(8100).ListItem.Property(Homeblade-TextWidget-Icon)]</label>
				</control>
				<control type="label">
					<description>Breadcumb2 label</description>
					<width>auto</width>
					<height>120</height>
					<font>BreadcumbSmall</font>
					<textcolor>TextColorMedium</textcolor>
					<aligny>top</aligny>
					<label>$INFO[Container(8100).ListItem.Property(Homeblade-TextWidget-Title)]</label>
				</control>
			</control>
			<control type="list" id="8201"><!-- Serien/Filme/Musik/pvr -->
				<description>textlist</description>
				<left>160</left>
				<top>415</top>
				<width>375</width>
				<height>490</height>
				<onleft>8100</onleft>
				<onright fallback="Integer.IsGreater(Container(301).NumItems,0)">SetFocus(300)</onright>
				<scrolltime>200</scrolltime>
				<onfocus>SetProperty(WidgetFocus,TextWidget,home)</onfocus>
				<visible allowhiddenfocus="true">Control.HasFocus(8100) | Control.HasFocus(8201)</visible>
				<visible>!String.IsEmpty(Container(8100).ListItem.Property(Homeblade-TextWidget-Content))</visible>
				<include content="MenuSlide-ContainerLayout">
					<param name="Container-ID">8201</param>
				</include>
				<!-- 
					<content>
					<item id="1">
					<description>open</description>
					<label>öffnen</label>
					<label2></label2>
					<onclick>ActivateWindow($INFO[Container(8100).ListItem.Property(Homeblade-TextWidget-Target)],$INFO[Container(8100).ListItem.Property(Homeblade-TextWidget-Content)],return)</onclick>
					</item>
				</content>-->
				<content target="$INFO[Container(8100).ListItem.Property(Homeblade-TextWidget-Target)]">$INFO[Container(8100).ListItem.Property(Homeblade-TextWidget-Content)]</content>
			</control>
			<control type="list" id="8202"><!-- Addons/Settings -->
				<description>content widget textlist</description>
				<left>160</left>
				<top>415</top>
				<width>375</width>
				<height>490</height>
				<onleft>8100</onleft>
				<onright fallback="Integer.IsGreater(Container(301).NumItems,0)">SetFocus(300)</onright>
				<scrolltime>200</scrolltime>
				<visible allowhiddenfocus="true">String.IsEmpty(Container(8100).ListItem.Property(Homeblade-TextWidget-Content)) + [Control.HasFocus(8100) | Control.HasFocus(8202)]</visible>
				<include content="MenuSlide-ContainerLayout">
					<param name="Container-ID">8202</param>
				</include>
				<content>
					<item id="1">
						<description>Video Addons</description>
						<label>Video Addons</label>
						<onclick>ActivateWindow(videos,Addons,return)</onclick>
						<visible>Container(8100).HasFocus(5)</visible>
					</item>
					<item id="2">
						<description>Musik Addons</description>
						<label>Musik Addons</label>
						<onclick>ActivateWindow(Music,Addons,return)</onclick>
						<visible>Container(8100).HasFocus(5)</visible>
					</item>
					<item id="2">
						<description>Benutzer Addons</description>
						<label>Benutzer Addons</label>
						<onclick>Dialog.Close(all)</onclick>
						<onclick>ActivateWindow(addonbrowser,addons://user/,return)</onclick>
						<visible>Container(8100).HasFocus(5)</visible>
					</item>
					<item id="2">
						<description>Herunterladen Addons</description>
						<label>Addons Laden</label>
						<onclick>Dialog.Close(all)</onclick>
						<onclick>ActivateWindow(addonbrowser,addons://repos/,return)</onclick>
						<visible>Container(8100).HasFocus(5)</visible>
					</item>
					<item id="2">
						<description>Aktualisierungen Addons</description>
						<label>Addons Aktualisieren</label>
						<onclick>Dialog.Close(all)</onclick>
						<onclick>ActivateWindow(addonbrowser,addons://outdated/,return)</onclick>
						<visible>Container(8100).HasFocus(5)</visible>
					</item>
					<item id="2">
						<description>PlayerSettings</description>
						<label>Player</label>
						<onclick>Dialog.Close(all)</onclick>
						<onclick>ActivateWindow(PlayerSettings)</onclick>
						<visible>Container(8100).HasFocus(7)</visible>
					</item>
					<item id="2">
						<description>ServiceSettings</description>
						<label>Dienste</label>
						<onclick>Dialog.Close(all)</onclick>
						<onclick>ActivateWindow(ServiceSettings)</onclick>
						<visible>Container(8100).HasFocus(7)</visible>
					</item>
					<item id="2">
						<description>InterfaceSettings</description>
						<label>Oberfläche</label>
						<onclick>Dialog.Close(all)</onclick>
						<onclick>ActivateWindow(InterfaceSettings)</onclick>
						<visible>Container(8100).HasFocus(7)</visible>
					</item>
					<item id="2">
						<description>ProfilSettings</description>
						<label>Benutzerprofile</label>
						<onclick>Dialog.Close(all)</onclick>
						<onclick>ActivateWindow(profiles)</onclick>
						<visible>Container(8100).HasFocus(7)</visible>
					</item>
					<item id="2">
						<description>SystemSettings</description>
						<label>System</label>
						<onclick>Dialog.Close(all)</onclick>
						<onclick>ActivateWindow(SystemSettings)</onclick>
						<visible>Container(8100).HasFocus(7)</visible>
					</item>
					<item id="2">
						<description>MediaSettings</description>
						<label>Bibliothek</label>
						<onclick>Dialog.Close(all)</onclick>
						<onclick>ActivateWindow(MediaSettings)</onclick>
						<visible>Container(8100).HasFocus(7)</visible>
					</item>
					<item id="2">
						<description>skinsettings</description>
						<label>Skin Einstellen</label>
						<onclick>Dialog.Close(all)</onclick>
						<onclick>ActivateWindow(skinsettings)</onclick>
						<visible>Container(8100).HasFocus(7)</visible>
					</item>
				</content>
			</control>
		</control>
		<control type="group"><!-- mainmenue 8100 -->
			<control type="image">
				<description>Hintergrund weiß menue nur wenn kein slider sichtbar</description>
				<left>160</left>
				<width>10</width>
				<height>1080</height>
				<texture background="true" colordiffuse="$VAR[DialogCol]">white.png</texture>
				<visible>!ControlGroup(8101).HasFocus + !ControlGroup(8200).HasFocus</visible>
			</control>
			<include>Homeblade-IconBG</include>
			<control type="label">
				<left>60</left>
				<top>40</top>
				<description>Breadcumb icon</description>
				<include>SidebarIcon-Dimension</include>
				<include>SidebarIcon-ColorFO</include>
				<label>;</label>
			</control>
			<control type="button" id="5000">
				<description>Default Focusbutton damit uhr auch focus haben kann und nicht nur das menue</description>
				<include>HiddenControl</include>
				<onleft>9900</onleft>
				<onright>9900</onright>
				<onup>9900</onup>
				<ondown>9900</ondown>
				<onclick>noop</onclick>
				<onfocus condition="Container(8100).HasFocus(1) + String.IsEqual(Window(Home).Property(WidgetFocus),TextWidget)">SetProperty(Widget-Title,Homeblade-TextWidget1.1-Title,home)</onfocus>
				<onfocus condition="Container(8100).HasFocus(1) + String.IsEqual(Window(Home).Property(WidgetFocus),TextWidget)">SetProperty(Widget-Content,Homeblade-TextWidget1.1-Content,home)</onfocus>
				<onfocus condition="Container(8100).HasFocus(1) + String.IsEqual(Window(Home).Property(WidgetFocus),Widget1)">SetProperty(Widget-Title,Homeblade-Widget1.1-Title,home)</onfocus>
				<onfocus condition="Container(8100).HasFocus(1) + String.IsEqual(Window(Home).Property(WidgetFocus),Widget1)">SetProperty(Widget-Content,Homeblade-Widget1.1-Content,home)</onfocus>
				<onfocus condition="Container(8100).HasFocus(1) + String.IsEqual(Window(Home).Property(WidgetFocus),Widget2)">SetProperty(Widget-Title,Homeblade-Widget1.2-Title,home)</onfocus>
				<onfocus condition="Container(8100).HasFocus(1) + String.IsEqual(Window(Home).Property(WidgetFocus),Widget2)">SetProperty(Widget-Content,Homeblade-Widget1.2-Content,home)</onfocus>
				
				<onfocus condition="Container(8100).HasFocus(2) + String.IsEqual(Window(Home).Property(WidgetFocus),TextWidget)">SetProperty(Widget-Title,Homeblade-TextWidget2.1-Title,home)</onfocus>
				<onfocus condition="Container(8100).HasFocus(2) + String.IsEqual(Window(Home).Property(WidgetFocus),TextWidget)">SetProperty(Widget-Content,Homeblade-TextWidget2.1-Content,home)</onfocus>
				<onfocus condition="Container(8100).HasFocus(2) + String.IsEqual(Window(Home).Property(WidgetFocus),Widget1)">SetProperty(Widget-Title,Homeblade-Widget2.1-Title,home)</onfocus>
				<onfocus condition="Container(8100).HasFocus(2) + String.IsEqual(Window(Home).Property(WidgetFocus),Widget1)">SetProperty(Widget-Content,Homeblade-Widget2.1-Content,home)</onfocus>
				<onfocus condition="Container(8100).HasFocus(2) + String.IsEqual(Window(Home).Property(WidgetFocus),Widget2)">SetProperty(Widget-Title,Homeblade-Widget2.2-Title,home)</onfocus>
				<onfocus condition="Container(8100).HasFocus(2) + String.IsEqual(Window(Home).Property(WidgetFocus),Widget2)">SetProperty(Widget-Content,Homeblade-Widget2.2-Content,home)</onfocus>
				
				
				<onfocus condition="Container(8100).HasFocus(3) + String.IsEqual(Window(Home).Property(WidgetFocus),TextWidget)">SetProperty(Widget-Title,Homeblade-TextWidget3.1-Title,home)</onfocus>
				<onfocus condition="Container(8100).HasFocus(3) + String.IsEqual(Window(Home).Property(WidgetFocus),TextWidget)">SetProperty(Widget-Content,Homeblade-TextWidget3.1-Content,home)</onfocus>
				<onfocus condition="Container(8100).HasFocus(3) + String.IsEqual(Window(Home).Property(WidgetFocus),Widget1)">SetProperty(Widget-Title,Homeblade-Widget3.1-Title,home)</onfocus>
				<onfocus condition="Container(8100).HasFocus(3) + String.IsEqual(Window(Home).Property(WidgetFocus),Widget1)">SetProperty(Widget-Content,Homeblade-Widget3.1-Content,home)</onfocus>
				<onfocus condition="Container(8100).HasFocus(3) + String.IsEqual(Window(Home).Property(WidgetFocus),Widget2)">SetProperty(Widget-Title,Homeblade-Widget3.2-Title,home)</onfocus>
				<onfocus condition="Container(8100).HasFocus(3) + String.IsEqual(Window(Home).Property(WidgetFocus),Widget2)">SetProperty(Widget-Content,Homeblade-Widget3.2-Content,home)</onfocus>
				<onfocus>ActivateWindow(1118)</onfocus>
			</control>
			<control type="list" id="8100">
				<description>Hauptmenueebene</description>
				<top>200</top>
				<width>160</width>
				<height>855</height>
				<onleft condition="Container(8100).HasFocus(1) | Container(8100).HasFocus(2) | Container(8100).HasFocus(3) | Container(8100).HasFocus(5)">SetFocus(8102)</onleft>
				<onleft condition="Container(8100).HasFocus(4)">SetFocus(8103)</onleft>
				<onright condition="Container(8100).HasFocus(1) | Container(8100).HasFocus(2) | Container(8100).HasFocus(3) | Container(8100).HasFocus(4)">8201</onright>
				<onright condition="Container(8100).HasFocus(5)">8202</onright>
				<onright condition="Container(8100).HasFocus(6)">8201</onright>
				<onright condition="Container(8100).HasFocus(7)">8202</onright>
				<onup>8100</onup>
				<ondown>8100</ondown>
				<scrolltime>200</scrolltime>
				<onfocus>ClearProperty(WidgetFocus,home)</onfocus>
				<itemlayout width="160" height="120">
					<control type="label">
						<left>20</left>
						<width>140</width>
						<height>60</height>
						<textoffsetx>0</textoffsetx>
						<aligny>top</aligny>
						<align>center</align>
						<font>IconHome</font>
						<textcolor>TextColorLight</textcolor>
						<label>$INFO[ListItem.Label]</label>
					</control>
					<control type="label">
						<left>20</left>
						<top>60</top>
						<width>140</width>
						<height>40</height>
						<textoffsetx>0</textoffsetx>
						<align>center</align>
						<aligny>top</aligny>
						<font>LabelHome</font>
						<textcolor>TextColorLight</textcolor>
						<label>$INFO[ListItem.Label2]</label>
					</control>
				</itemlayout>
				<focusedlayout width="160" height="120">
					<control type="image">
						<width>10</width>
						<height>100</height>
						<texture colordiffuse="$VAR[PrimaryCol]">white.png</texture>
						<visible>Control.HasFocus(8100)</visible>
					</control>
					<control type="label">
						<left>20</left>
						<width>140</width>
						<height>60</height>
						<textoffsetx>0</textoffsetx>
						<aligny>top</aligny>
						<align>center</align>
						<font>IconHome</font>
						<label>$INFO[ListItem.Label]</label>
						<textcolor>$VAR[PrimaryCol]</textcolor>
					</control>
					<control type="label">
						<left>20</left>
						<top>60</top>
						<width>140</width>
						<height>40</height>
						<textoffsetx>0</textoffsetx>
						<align>center</align>
						<aligny>top</aligny>
						<font>LabelHome</font>
						<textcolor>$VAR[PrimaryCol]</textcolor>
						<label>$INFO[ListItem.Label2]</label>
					</control>
				</focusedlayout>
				<content>
					<item id="1">
						<description>Serien</description>
						<label>D</label>
						<label2>Serien</label2>
						<property name="Homeblade-Submenue-Label">$INFO[Window(Home).Property(TVShows.Count)]$INFO[Window(Home).Property(Episodes.Count), (,)]</property>
						<property name="Homeblade-Submenue-Content">library://video/tvshows/</property>
						<property name="Homeblade-Submenue-Icon">ǝ</property>
						<property name="Homeblade-TextWidget-Title" fallback="Genres">$INFO[Skin.string(Homeblade-TextWidget1.1-Title)]</property><!-- textwidget -->
						<property name="Homeblade-TextWidget-Content" fallback="videodb://tvshows/genres/">$INFO[Skin.string(Homeblade-TextWidget1.1-Content)]</property>
						<property name="Homeblade-TextWidget-Target" fallback="videos">$INFO[Skin.string(Homeblade-TextWidget1.1-Target)]</property>
						<property name="Homeblade-TextWidget-Icon">R</property>
						<property name="Homeblade-Widget1-Title" fallback="Zuletzt gesehene Serien">$INFO[Skin.string(Homeblade-Widget1.1-Title)]</property><!-- widget1 -->
						<property name="Homeblade-Widget1-Content" fallback="special://skin/playlists/TV_zuletzt gesehen.xsp">$INFO[Skin.string(Homeblade-Widget1.1-Content)]</property>
						<property name="Homeblade-Widget1-Target" fallback="videos">$INFO[Skin.string(Homeblade-Widget1.1-Target)]</property>
						<property name="Homeblade-Widget2-Title" fallback="Zuletzt hinzugefügte Episoden">$INFO[Skin.string(Homeblade-Widget1.2-Title)]</property><!-- widget2 -->
						<property name="Homeblade-Widget2-Content" fallback="special://skin/playlists/Episode_Zuletzt hinzugefuegte.xsp">$INFO[Skin.string(Homeblade-Widget1.2-Content)]</property>
						<property name="Homeblade-Widget2-Target" fallback="videos">$INFO[Skin.string(Homeblade-Widget1.2-Target)]</property>
						<onclick>ActivateWindow(videos,tvshowtitles,return)</onclick>
					</item>
					<item id="2">
						<description>Filme</description>
						<label>E</label>
						<label2>Filme</label2>
						<property name="Homeblade-Submenue-Label">$INFO[Window(Home).Property(Movies.Count)]</property>
						<property name="Homeblade-Submenue-Content">library://video/movies/</property>
						<property name="Homeblade-Submenue-Icon">ǝ</property>
						<property name="Homeblade-TextWidget-Title" fallback="Genres">$INFO[Skin.string(Homeblade-TextWidget2.1-Title)]</property><!-- textwidget -->
						<property name="Homeblade-TextWidget-Content" fallback="videodb://movies/genres/">$INFO[Skin.string(Homeblade-TextWidget2.1-Content)]</property>
						<property name="Homeblade-TextWidget-Target" fallback="videos">$INFO[Skin.string(Homeblade-TextWidget2.1-Target)]</property>
						<property name="Homeblade-TextWidget-Icon">R</property>
						<property name="Homeblade-Widget1-Title" fallback="Empfehlungen">$INFO[Skin.string(Homeblade-Widget2.1-Title)]</property><!-- widget1 -->
						<property name="Homeblade-Widget1-Content" fallback="special://skin/playlists/Film_Top.xsp">$INFO[Skin.string(Homeblade-Widget2.1-Content)]</property>
						<property name="Homeblade-Widget1-Target" fallback="videos">$INFO[Skin.string(Homeblade-Widget2.1-Target)]</property>
						<property name="Homeblade-Widget2-Title" fallback="Zuletzt hinzugefügte Filme">$INFO[Skin.string(Homeblade-Widget2.2-Title)]</property><!-- widget2 -->
						<property name="Homeblade-Widget2-Content" fallback="special://skin/playlists/Film_Zuletzt hinzugefuegte.xsp">$INFO[Skin.string(Homeblade-Widget2.2-Content)]</property>
						<property name="Homeblade-Widget2-Target" fallback="videos">$INFO[Skin.string(Homeblade-Widget2.2-Target)]</property>
						<onclick>ActivateWindow(videos,movieTitles,return)</onclick>
					</item>
					<item id="3">
						<description>Musik</description>
						<label>ǳ</label>
						<label2>Musik</label2>
						<property name="Homeblade-Submenue-Label">$INFO[Window(Home).Property(Music.AlbumsCount)]$INFO[Window(Home).Property(Music.SongsCount), (,)]</property>
						<property name="Homeblade-Submenue-Content">library://music/</property>
						<property name="Homeblade-Submenue-Icon">ǝ</property>
						<property name="Homeblade-TextWidget-Title" fallback="Genres">$INFO[Skin.string(Homeblade-TextWidget3.1-Title)]</property><!-- textwidget -->
						<property name="Homeblade-TextWidget-Content" fallback="musicdb://genres/">$INFO[Skin.string(Homeblade-TextWidget3.1-Content)]</property>
						<property name="Homeblade-TextWidget-Target" fallback="music">$INFO[Skin.string(Homeblade-TextWidget3.1-Target)]</property>
						<property name="Homeblade-TextWidget-Icon">R</property>
						<property name="Homeblade-Widget1-Title" fallback="Zuletzt hinzugefügte Alben">$INFO[Skin.string(Homeblade-Widget3.1-Title)]</property><!-- widget1 -->
						<property name="Homeblade-Widget1-Content" fallback="musicdb://recentlyaddedalbums/">$INFO[Skin.string(Homeblade-Widget3.1-Content)]</property>
						<property name="Homeblade-Widget1-Target" fallback="music">$INFO[Skin.string(Homeblade-Widget3.1-Target)]</property>
						<property name="Homeblade-Widget2-Title" fallback="Zuletzt gehörte Alben">$INFO[Skin.string(Homeblade-Widget3.2-Title)]</property><!-- widget2 -->
						<property name="Homeblade-Widget2-Content" fallback="musicdb://recentlyplayedalbums/">$INFO[Skin.string(Homeblade-Widget3.2-Content)]</property>
						<property name="Homeblade-Widget2-Target" fallback="music">$INFO[Skin.string(Homeblade-Widget3.2-Target)]</property>
						<onclick>ActivateWindow(Music,root)</onclick>
					</item>
					<item id="4">
						<description>PVR</description>
						<label>Ǩ</label>
						<label2>PVR</label2>
						<property name="Homeblade-Submenue-Label">$INFO[PVR.TVNextRecordingDateTime,,[CR]]$INFO[PVR.TVNextRecordingChannel,,[CR]]$INFO[PVR.TVNextRecordingTitle]</property>
						<property name="Homeblade-Submenue-Content"></property>
						<property name="Homeblade-Submenue-Icon">á</property>
						<property name="Homeblade-TextWidget-Title" fallback="Zuletzt gesehen">$INFO[Skin.string(Homeblade-TextWidget4.1-Title)]</property><!-- textwidget -->
						<property name="Homeblade-TextWidget-Content" fallback="pvr://channels/tv/*?view=lastplayed">$INFO[Skin.string(Homeblade-TextWidget4.1-Content)]</property>
						<property name="Homeblade-TextWidget-Target" fallback="pvr">$INFO[Skin.string(Homeblade-TextWidget4.1-Target)]</property>
						<property name="Homeblade-TextWidget-Icon">à</property>
						<property name="Homeblade-Widget1-Title" fallback="Neue Aufnahmen">$INFO[Skin.string(Homeblade-Widget4.1-Title)]</property><!-- widget1 -->
						<property name="Homeblade-Widget1-Content" fallback="pvr://recordings/tv/active?view=flat">$INFO[Skin.string(Homeblade-Widget4.1-Content)]</property>
						<property name="Homeblade-Widget1-Target" fallback="pvr">$INFO[Skin.string(Homeblade-Widget4.1-Target)]</property>
						<property name="Homeblade-Widget2-Title" fallback="">$INFO[Skin.string(Homeblade-Widget4.2-Title)]</property><!-- widget2 -->
						<property name="Homeblade-Widget2-Content" fallback="">$INFO[Skin.string(Homeblade-Widget4.2-Content)]</property>
						<property name="Homeblade-Widget2-Target" fallback="">$INFO[Skin.string(Homeblade-Widget4.2-Target)]</property>
						<onclick>ActivateWindow(TVChannels)</onclick>
					</item>
					<item id="5">
						<description>Addons</description>
						<label>Ĝ</label>
						<label2>Addons</label2>
						<property name="Homeblade-Submenue-Label">$INFO[Window(AddonBrowser).Property(Updated)]</property>
						<property name="Homeblade-Submenue-Content">addons://sources/executable/</property>
						<property name="Homeblade-Submenue-Icon">Ħ</property>
						<property name="Homeblade-TextWidget-Title" fallback=""></property><!-- textwidget -->
						<property name="Homeblade-TextWidget-Content" fallback=""></property>
						<property name="Homeblade-TextWidget-Target" fallback=""></property>
						<property name="Homeblade-TextWidget-Icon"></property>
						<property name="Homeblade-Widget1-Title" fallback="Video-Addons">$INFO[Skin.string(Homeblade-Widget5.1-Title)]</property><!-- widget1 -->
						<property name="Homeblade-Widget1-Content" fallback="addons://sources/video/">$INFO[Skin.string(Homeblade-Widget5.1-Content)]</property>
						<property name="Homeblade-Widget1-Target" fallback="videos">$INFO[Skin.string(Homeblade-Widget5.1-Target)]</property>
						<property name="Homeblade-Widget2-Title" fallback="Audio-Addons">$INFO[Skin.string(Homeblade-Widget5.2-Title)]</property><!-- widget2 -->
						<property name="Homeblade-Widget2-Content" fallback="addons://sources/audio/">$INFO[Skin.string(Homeblade-Widget5.2-Content)]</property>
						<property name="Homeblade-Widget2-Target" fallback="music">$INFO[Skin.string(Homeblade-Widget5.2-Target)]</property>
						<onclick>ActivateWindow(programs)</onclick>
					</item>
					<item id="6">
						<description>Favoriten</description>
						<label>ę</label>
						<label2>Favoriten</label2>
						<property name="Homeblade-Submenue-Label"></property>
						<property name="Homeblade-Submenue-Content"></property>
						<property name="Homeblade-Submenue-Icon"></property>
						<property name="Homeblade-TextWidget-Title" fallback=""></property><!-- textwidget -->
						<property name="Homeblade-TextWidget-Content" fallback="">favourites://</property>
						<property name="Homeblade-TextWidget-Target" fallback=""></property>
						<property name="Homeblade-TextWidget-Icon"></property>
						<property name="Homeblade-Widget1-Title"></property><!-- widget1 -->
						<property name="Homeblade-Widget1-Content"></property>
						<property name="Homeblade-Widget1-Target"></property>
						<property name="Homeblade-Widget2-Title"></property><!-- widget2 -->
						<property name="Homeblade-Widget2-Content"></property>
						<property name="Homeblade-Widget2-Target"></property>
						<onclick>ActivateWindow(favourites)</onclick>
						<visible>!Window.IsVisible(home)</visible>
					</item>
					<item id="7">
						<description>Einstellen</description>
						<label>Ġ</label>
						<label2>Einstellen</label2>
						<property name="Homeblade-Submenue-Label"></property>
						<property name="Homeblade-Submenue-Content"></property>
						<property name="Homeblade-Submenue-Icon"></property>
						<property name="Homeblade-TextWidget-Title" fallback=""></property><!-- textwidget -->
						<property name="Homeblade-TextWidget-Content" fallback=""></property>
						<property name="Homeblade-TextWidget-Target" fallback=""></property>
						<property name="Homeblade-TextWidget-Icon"></property>
						<property name="Homeblade-Widget1-Title"></property><!-- widget1 -->
						<property name="Homeblade-Widget1-Content"></property>
						<property name="Homeblade-Widget1-Target"></property>
						<property name="Homeblade-Widget2-Title"></property><!-- widget2 -->
						<property name="Homeblade-Widget2-Content"></property>
						<property name="Homeblade-Widget2-Target"></property>
						<onclick>ActivateWindow(favourites)</onclick>
						<visible>!Window.IsVisible(home)</visible>
					</item>
				</content>
			</control>
		</control>
	</control>
</include>

	
	
	
	
</includes>